(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({"/Users/simon/purescript-incremental/example/output/Action/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var NoOp = (function () {
    function NoOp() {

    };
    NoOp.value = new NoOp();
    return NoOp;
})();
var Add = (function () {
    function Add(value0) {
        this.value0 = value0;
    };
    Add.create = function (value0) {
        return new Add(value0);
    };
    return Add;
})();
var Delete = (function () {
    function Delete(value0) {
        this.value0 = value0;
    };
    Delete.create = function (value0) {
        return new Delete(value0);
    };
    return Delete;
})();
var Check = (function () {
    function Check(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Check.create = function (value0) {
        return function (value1) {
            return new Check(value0, value1);
        };
    };
    return Check;
})();
var ChangedInput = (function () {
    function ChangedInput(value0) {
        this.value0 = value0;
    };
    ChangedInput.create = function (value0) {
        return new ChangedInput(value0);
    };
    return ChangedInput;
})();
var DeleteCompleted = (function () {
    function DeleteCompleted() {

    };
    DeleteCompleted.value = new DeleteCompleted();
    return DeleteCompleted;
})();
var Edit = (function () {
    function Edit(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Edit.create = function (value0) {
        return function (value1) {
            return new Edit(value0, value1);
        };
    };
    return Edit;
})();
var ChangeDescription = (function () {
    function ChangeDescription(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    ChangeDescription.create = function (value0) {
        return function (value1) {
            return new ChangeDescription(value0, value1);
        };
    };
    return ChangeDescription;
})();
var ChangeFilter = (function () {
    function ChangeFilter(value0) {
        this.value0 = value0;
    };
    ChangeFilter.create = function (value0) {
        return new ChangeFilter(value0);
    };
    return ChangeFilter;
})();
module.exports = {
    NoOp: NoOp, 
    Add: Add, 
    Delete: Delete, 
    Check: Check, 
    ChangedInput: ChangedInput, 
    DeleteCompleted: DeleteCompleted, 
    Edit: Edit, 
    ChangeDescription: ChangeDescription, 
    ChangeFilter: ChangeFilter
};

},{}],"/Users/simon/purescript-incremental/example/output/Components.TaskAdder/index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var Signal_Channel = require("Signal.Channel");
var Prelude = require("Prelude");
var Incremental_DOM = require("Incremental.DOM");
var Incremental_Elements = require("Incremental.Elements");
var Incremental_Attributes = require("Incremental.Attributes");
var Action = require("Action");
var Control_Monad_Eff = require("Control.Monad.Eff");
var taskAdder = function (chan) {
    return function (val) {
        return Incremental_Elements["div'"]([ Incremental_Attributes["class'"]("task-adder") ])(function __do() {
            Incremental_Elements.input([ Incremental_Attributes["type'"]("text"), Incremental_Attributes.value(val), Incremental_Attributes["onInput'"](function (_1) {
                return Signal_Channel.send(chan)(Action.ChangedInput.create(Incremental_Attributes.targetValue(_1)));
            }) ])(Incremental_DOM.iempty)();
            return Incremental_Elements.button([ Incremental_Attributes["type'"]("button"), Incremental_Attributes.onClick(Signal_Channel.send(chan)(new Action.Add(val))) ])(Incremental_DOM.text("Add todo"))();
        });
    };
};
module.exports = {
    taskAdder: taskAdder
};

},{"Action":"/Users/simon/purescript-incremental/example/output/Action/index.js","Control.Monad.Eff":"/Users/simon/purescript-incremental/example/output/Control.Monad.Eff/index.js","Incremental.Attributes":"/Users/simon/purescript-incremental/example/output/Incremental.Attributes/index.js","Incremental.DOM":"/Users/simon/purescript-incremental/example/output/Incremental.DOM/index.js","Incremental.Elements":"/Users/simon/purescript-incremental/example/output/Incremental.Elements/index.js","Prelude":"/Users/simon/purescript-incremental/example/output/Prelude/index.js","Signal.Channel":"/Users/simon/purescript-incremental/example/output/Signal.Channel/index.js"}],"/Users/simon/purescript-incremental/example/output/Components.TaskList/index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var Signal_Channel = require("Signal.Channel");
var Prelude = require("Prelude");
var Incremental_DOM = require("Incremental.DOM");
var Incremental_Elements = require("Incremental.Elements");
var Incremental_Attributes = require("Incremental.Attributes");
var Action = require("Action");
var Data_Array = require("Data.Array");
var Store = require("Store");
var Data_Foldable = require("Data.Foldable");
var Control_Monad_Eff = require("Control.Monad.Eff");
var taskEditableLabel = function (chan) {
    return function (task) {
        if (task.editing) {
            return Incremental_Elements.input([ Incremental_Attributes["type'"]("text"), Incremental_Attributes.value(task.description), Incremental_Attributes["class'"]("task-description"), Incremental_Attributes["onInput'"](function (_3) {
                return Signal_Channel.send(chan)(Action.ChangeDescription.create(task.taskId)(Incremental_Attributes.targetValue(_3)));
            }), Incremental_Attributes.onBlur(Signal_Channel.send(chan)(new Action.Edit(task.taskId, false))) ])(Incremental_DOM.iempty);
        };
        if (Prelude.otherwise) {
            return Incremental_Elements.label([ Incremental_Attributes["class'"]("task-label"), Incremental_Attributes.onDoubleClick(Signal_Channel.send(chan)(new Action.Edit(task.taskId, true))) ])(Incremental_DOM.text(task.description));
        };
        throw new Error("Failed pattern match at Components.TaskList line 24, column 1 - line 25, column 1: " + [ chan.constructor.name, task.constructor.name ]);
    };
};
var taskItem = function (chan) {
    return function (task) {
        return Incremental_Elements.li([ Incremental_Attributes.key(Prelude.show(Prelude.showInt)(task.taskId)), Incremental_Attributes["class'"]("task-item") ])(function __do() {
            Incremental_Elements.input([ Incremental_Attributes["type'"]("checkbox"), Incremental_Attributes.checked(task.completed), Incremental_Attributes.onClick(Signal_Channel.send(chan)(new Action.Check(task.taskId, !task.completed))) ])(Incremental_DOM.iempty)();
            taskEditableLabel(chan)(task)();
            return Incremental_Elements["span'"]([ Incremental_Attributes.onClick(Signal_Channel.send(chan)(new Action.Delete(task.taskId))) ])(Incremental_DOM.text("\xd7"))();
        });
    };
};
var taskList = function (chan) {
    return function (tasks) {
        return Incremental_Elements.ul([ Incremental_Attributes["class'"]("task-list") ])(Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableArray)(tasks)(taskItem(chan)));
    };
};
module.exports = {
    taskList: taskList
};

},{"Action":"/Users/simon/purescript-incremental/example/output/Action/index.js","Control.Monad.Eff":"/Users/simon/purescript-incremental/example/output/Control.Monad.Eff/index.js","Data.Array":"/Users/simon/purescript-incremental/example/output/Data.Array/index.js","Data.Foldable":"/Users/simon/purescript-incremental/example/output/Data.Foldable/index.js","Incremental.Attributes":"/Users/simon/purescript-incremental/example/output/Incremental.Attributes/index.js","Incremental.DOM":"/Users/simon/purescript-incremental/example/output/Incremental.DOM/index.js","Incremental.Elements":"/Users/simon/purescript-incremental/example/output/Incremental.Elements/index.js","Prelude":"/Users/simon/purescript-incremental/example/output/Prelude/index.js","Signal.Channel":"/Users/simon/purescript-incremental/example/output/Signal.Channel/index.js","Store":"/Users/simon/purescript-incremental/example/output/Store/index.js"}],"/Users/simon/purescript-incremental/example/output/Components.TaskListFooter/index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var Signal_Channel = require("Signal.Channel");
var Prelude = require("Prelude");
var Incremental_DOM = require("Incremental.DOM");
var Incremental_Elements = require("Incremental.Elements");
var Incremental_Attributes = require("Incremental.Attributes");
var Action = require("Action");
var Store = require("Store");
var Data_Array = require("Data.Array");
var Control_Monad_Eff = require("Control.Monad.Eff");
var taskListFooter = function (chan) {
    return function (state) {
        var completedTodos = Data_Array.filter(function (t) {
            return t.completed;
        })(state.todos);
        return Incremental_Elements["div'"]([ Incremental_Attributes["class'"]("task-list-footer") ])(function __do() {
            Incremental_Elements.button([ Incremental_Attributes["type'"]("button"), Incremental_Attributes.onClick(Signal_Channel.send(chan)(Action.DeleteCompleted.value)) ])(Incremental_DOM.text("Remove completed"))();
            return Incremental_Elements["div'"]([ Incremental_Attributes["class'"]("task-stats") ])(function __do() {
                Incremental_Elements["span'"]([ Incremental_Attributes["class'"]("total") ])(Incremental_DOM.text("Total: " + Prelude.show(Prelude.showInt)(Data_Array.length(state.todos))))();
                return Incremental_Elements["span'"]([ Incremental_Attributes["class'"]("completed") ])(Incremental_DOM.text("Completed: " + Prelude.show(Prelude.showInt)(Data_Array.length(completedTodos))))();
            })();
        });
    };
};
module.exports = {
    taskListFooter: taskListFooter
};

},{"Action":"/Users/simon/purescript-incremental/example/output/Action/index.js","Control.Monad.Eff":"/Users/simon/purescript-incremental/example/output/Control.Monad.Eff/index.js","Data.Array":"/Users/simon/purescript-incremental/example/output/Data.Array/index.js","Incremental.Attributes":"/Users/simon/purescript-incremental/example/output/Incremental.Attributes/index.js","Incremental.DOM":"/Users/simon/purescript-incremental/example/output/Incremental.DOM/index.js","Incremental.Elements":"/Users/simon/purescript-incremental/example/output/Incremental.Elements/index.js","Prelude":"/Users/simon/purescript-incremental/example/output/Prelude/index.js","Signal.Channel":"/Users/simon/purescript-incremental/example/output/Signal.Channel/index.js","Store":"/Users/simon/purescript-incremental/example/output/Store/index.js"}],"/Users/simon/purescript-incremental/example/output/Components.TodoFilter/index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var Prelude = require("Prelude");
var Incremental_DOM = require("Incremental.DOM");
var Incremental_Elements = require("Incremental.Elements");
var Incremental_Attributes = require("Incremental.Attributes");
var Signal_Channel = require("Signal.Channel");
var Signal = require("Signal");
var Action = require("Action");
var todoFilter = function (chan) {
    return function (filterStr) {
        return Incremental_Elements["div'"]([ Incremental_Attributes["class'"]("todo-filter") ])(Incremental_Elements.input([ Incremental_Attributes.placeholder("Enter filter"), Incremental_Attributes.value(filterStr), Incremental_Attributes["type'"]("text"), Incremental_Attributes["onInput'"](function (_2) {
            return Signal_Channel.send(chan)(Action.ChangeFilter.create(Incremental_Attributes.targetValue(_2)));
        }) ])(Incremental_DOM.iempty));
    };
};
module.exports = {
    todoFilter: todoFilter
};

},{"Action":"/Users/simon/purescript-incremental/example/output/Action/index.js","Incremental.Attributes":"/Users/simon/purescript-incremental/example/output/Incremental.Attributes/index.js","Incremental.DOM":"/Users/simon/purescript-incremental/example/output/Incremental.DOM/index.js","Incremental.Elements":"/Users/simon/purescript-incremental/example/output/Incremental.Elements/index.js","Prelude":"/Users/simon/purescript-incremental/example/output/Prelude/index.js","Signal":"/Users/simon/purescript-incremental/example/output/Signal/index.js","Signal.Channel":"/Users/simon/purescript-incremental/example/output/Signal.Channel/index.js"}],"/Users/simon/purescript-incremental/example/output/Components.TodoList/index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var Signal_Channel = require("Signal.Channel");
var Prelude = require("Prelude");
var Incremental_DOM = require("Incremental.DOM");
var Incremental_Elements = require("Incremental.Elements");
var Incremental_Attributes = require("Incremental.Attributes");
var Action = require("Action");
var Store = require("Store");
var Data_Array = require("Data.Array");
var Data_String = require("Data.String");
var Components_TaskAdder = require("Components.TaskAdder");
var Components_TaskList = require("Components.TaskList");
var Components_TaskListFooter = require("Components.TaskListFooter");
var Components_TodoFilter = require("Components.TodoFilter");
var Control_Monad_Eff = require("Control.Monad.Eff");
var todoList = function (chan) {
    return function (state) {
        var filteredTasks = (function () {
            if (Data_String.length(state.filter) > 0) {
                return Data_Array.filter(function (t) {
                    return Data_String.contains(state.filter)(t.description);
                })(state.todos);
            };
            if (Prelude.otherwise) {
                return state.todos;
            };
            throw new Error("Failed pattern match at Components.TodoList line 26, column 9 - line 28, column 33: " + [  ]);
        })();
        return Incremental_Elements["div'"]([ Incremental_Attributes["class'"]("todo-list") ])(function __do() {
            Components_TaskAdder.taskAdder(chan)(state.inputVal)();
            Components_TodoFilter.todoFilter(chan)(state.filter)();
            Components_TaskList.taskList(chan)(filteredTasks)();
            return Components_TaskListFooter.taskListFooter(chan)(state)();
        });
    };
};
module.exports = {
    todoList: todoList
};

},{"Action":"/Users/simon/purescript-incremental/example/output/Action/index.js","Components.TaskAdder":"/Users/simon/purescript-incremental/example/output/Components.TaskAdder/index.js","Components.TaskList":"/Users/simon/purescript-incremental/example/output/Components.TaskList/index.js","Components.TaskListFooter":"/Users/simon/purescript-incremental/example/output/Components.TaskListFooter/index.js","Components.TodoFilter":"/Users/simon/purescript-incremental/example/output/Components.TodoFilter/index.js","Control.Monad.Eff":"/Users/simon/purescript-incremental/example/output/Control.Monad.Eff/index.js","Data.Array":"/Users/simon/purescript-incremental/example/output/Data.Array/index.js","Data.String":"/Users/simon/purescript-incremental/example/output/Data.String/index.js","Incremental.Attributes":"/Users/simon/purescript-incremental/example/output/Incremental.Attributes/index.js","Incremental.DOM":"/Users/simon/purescript-incremental/example/output/Incremental.DOM/index.js","Incremental.Elements":"/Users/simon/purescript-incremental/example/output/Incremental.Elements/index.js","Prelude":"/Users/simon/purescript-incremental/example/output/Prelude/index.js","Signal.Channel":"/Users/simon/purescript-incremental/example/output/Signal.Channel/index.js","Store":"/Users/simon/purescript-incremental/example/output/Store/index.js"}],"/Users/simon/purescript-incremental/example/output/Control.Alt/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Alt = function (__superclass_Prelude$dotFunctor_0, alt) {
    this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    this.alt = alt;
};
var altArray = new Alt(function () {
    return Prelude.functorArray;
}, Prelude.append(Prelude.semigroupArray));
var alt = function (dict) {
    return dict.alt;
};
var $less$bar$greater = function (__dict_Alt_0) {
    return alt(__dict_Alt_0);
};
module.exports = {
    Alt: Alt, 
    "<|>": $less$bar$greater, 
    alt: alt, 
    altArray: altArray
};

},{"Prelude":"/Users/simon/purescript-incremental/example/output/Prelude/index.js"}],"/Users/simon/purescript-incremental/example/output/Control.Alternative/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Control_Alt = require("Control.Alt");
var Control_Lazy = require("Control.Lazy");
var Control_Plus = require("Control.Plus");
var Alternative = function (__superclass_Control$dotPlus$dotPlus_1, __superclass_Prelude$dotApplicative_0) {
    this["__superclass_Control.Plus.Plus_1"] = __superclass_Control$dotPlus$dotPlus_1;
    this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
};
var alternativeArray = new Alternative(function () {
    return Control_Plus.plusArray;
}, function () {
    return Prelude.applicativeArray;
});
module.exports = {
    Alternative: Alternative, 
    alternativeArray: alternativeArray
};

},{"Control.Alt":"/Users/simon/purescript-incremental/example/output/Control.Alt/index.js","Control.Lazy":"/Users/simon/purescript-incremental/example/output/Control.Lazy/index.js","Control.Plus":"/Users/simon/purescript-incremental/example/output/Control.Plus/index.js","Prelude":"/Users/simon/purescript-incremental/example/output/Prelude/index.js"}],"/Users/simon/purescript-incremental/example/output/Control.Apply/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var $less$times = function (__dict_Apply_0) {
    return function (a) {
        return function (b) {
            return Prelude["<*>"](__dict_Apply_0)(Prelude["<$>"](__dict_Apply_0["__superclass_Prelude.Functor_0"]())(Prelude["const"])(a))(b);
        };
    };
};
var $times$greater = function (__dict_Apply_1) {
    return function (a) {
        return function (b) {
            return Prelude["<*>"](__dict_Apply_1)(Prelude["<$>"](__dict_Apply_1["__superclass_Prelude.Functor_0"]())(Prelude["const"](Prelude.id(Prelude.categoryFn)))(a))(b);
        };
    };
};
var lift5 = function (__dict_Apply_2) {
    return function (f) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return function (d) {
                        return function (e) {
                            return Prelude["<*>"](__dict_Apply_2)(Prelude["<*>"](__dict_Apply_2)(Prelude["<*>"](__dict_Apply_2)(Prelude["<*>"](__dict_Apply_2)(Prelude["<$>"](__dict_Apply_2["__superclass_Prelude.Functor_0"]())(f)(a))(b))(c))(d))(e);
                        };
                    };
                };
            };
        };
    };
};
var lift4 = function (__dict_Apply_3) {
    return function (f) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return function (d) {
                        return Prelude["<*>"](__dict_Apply_3)(Prelude["<*>"](__dict_Apply_3)(Prelude["<*>"](__dict_Apply_3)(Prelude["<$>"](__dict_Apply_3["__superclass_Prelude.Functor_0"]())(f)(a))(b))(c))(d);
                    };
                };
            };
        };
    };
};
var lift3 = function (__dict_Apply_4) {
    return function (f) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return Prelude["<*>"](__dict_Apply_4)(Prelude["<*>"](__dict_Apply_4)(Prelude["<$>"](__dict_Apply_4["__superclass_Prelude.Functor_0"]())(f)(a))(b))(c);
                };
            };
        };
    };
};
var lift2 = function (__dict_Apply_5) {
    return function (f) {
        return function (a) {
            return function (b) {
                return Prelude["<*>"](__dict_Apply_5)(Prelude["<$>"](__dict_Apply_5["__superclass_Prelude.Functor_0"]())(f)(a))(b);
            };
        };
    };
};
module.exports = {
    lift5: lift5, 
    lift4: lift4, 
    lift3: lift3, 
    lift2: lift2, 
    "*>": $times$greater, 
    "<*": $less$times
};

},{"Prelude":"/Users/simon/purescript-incremental/example/output/Prelude/index.js"}],"/Users/simon/purescript-incremental/example/output/Control.Biapplicative/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Control_Biapply = require("Control.Biapply");
var Biapplicative = function (__superclass_Control$dotBiapply$dotBiapply_0, bipure) {
    this["__superclass_Control.Biapply.Biapply_0"] = __superclass_Control$dotBiapply$dotBiapply_0;
    this.bipure = bipure;
};
var bipure = function (dict) {
    return dict.bipure;
};
module.exports = {
    Biapplicative: Biapplicative, 
    bipure: bipure
};

},{"Control.Biapply":"/Users/simon/purescript-incremental/example/output/Control.Biapply/index.js","Prelude":"/Users/simon/purescript-incremental/example/output/Prelude/index.js"}],"/Users/simon/purescript-incremental/example/output/Control.Biapply/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Bifunctor = require("Data.Bifunctor");
var Biapply = function (__superclass_Data$dotBifunctor$dotBifunctor_0, biapply) {
    this["__superclass_Data.Bifunctor.Bifunctor_0"] = __superclass_Data$dotBifunctor$dotBifunctor_0;
    this.biapply = biapply;
};
var $less$less$dollar$greater$greater = Prelude.id(Prelude.categoryFn);
var biapply = function (dict) {
    return dict.biapply;
};
var $less$less$times$greater$greater = function (__dict_Biapply_0) {
    return biapply(__dict_Biapply_0);
};
var bilift2 = function (__dict_Biapply_1) {
    return function (f) {
        return function (g) {
            return function (a) {
                return function (b) {
                    return $less$less$times$greater$greater(__dict_Biapply_1)($less$less$dollar$greater$greater(Data_Bifunctor.bimap(__dict_Biapply_1["__superclass_Data.Bifunctor.Bifunctor_0"]())(f)(g))(a))(b);
                };
            };
        };
    };
};
var bilift3 = function (__dict_Biapply_2) {
    return function (f) {
        return function (g) {
            return function (a) {
                return function (b) {
                    return function (c) {
                        return $less$less$times$greater$greater(__dict_Biapply_2)($less$less$times$greater$greater(__dict_Biapply_2)($less$less$dollar$greater$greater(Data_Bifunctor.bimap(__dict_Biapply_2["__superclass_Data.Bifunctor.Bifunctor_0"]())(f)(g))(a))(b))(c);
                    };
                };
            };
        };
    };
};
var $times$greater$greater = function (__dict_Biapply_3) {
    return function (a) {
        return function (b) {
            return $less$less$times$greater$greater(__dict_Biapply_3)($less$less$dollar$greater$greater(Data_Bifunctor.bimap(__dict_Biapply_3["__superclass_Data.Bifunctor.Bifunctor_0"]())(Prelude["const"](Prelude.id(Prelude.categoryFn)))(Prelude["const"](Prelude.id(Prelude.categoryFn))))(a))(b);
        };
    };
};
var $less$less$times = function (__dict_Biapply_4) {
    return function (a) {
        return function (b) {
            return $less$less$times$greater$greater(__dict_Biapply_4)($less$less$dollar$greater$greater(Data_Bifunctor.bimap(__dict_Biapply_4["__superclass_Data.Bifunctor.Bifunctor_0"]())(Prelude["const"])(Prelude["const"]))(a))(b);
        };
    };
};
module.exports = {
    Biapply: Biapply, 
    bilift3: bilift3, 
    bilift2: bilift2, 
    "<<*": $less$less$times, 
    "*>>": $times$greater$greater, 
    "<<*>>": $less$less$times$greater$greater, 
    biapply: biapply, 
    "<<$>>": $less$less$dollar$greater$greater
};

},{"Data.Bifunctor":"/Users/simon/purescript-incremental/example/output/Data.Bifunctor/index.js","Prelude":"/Users/simon/purescript-incremental/example/output/Prelude/index.js"}],"/Users/simon/purescript-incremental/example/output/Control.Comonad/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Control_Extend = require("Control.Extend");
var Comonad = function (__superclass_Control$dotExtend$dotExtend_0, extract) {
    this["__superclass_Control.Extend.Extend_0"] = __superclass_Control$dotExtend$dotExtend_0;
    this.extract = extract;
};
var extract = function (dict) {
    return dict.extract;
};
module.exports = {
    Comonad: Comonad, 
    extract: extract
};

},{"Control.Extend":"/Users/simon/purescript-incremental/example/output/Control.Extend/index.js","Prelude":"/Users/simon/purescript-incremental/example/output/Prelude/index.js"}],"/Users/simon/purescript-incremental/example/output/Control.Extend/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Extend = function (__superclass_Prelude$dotFunctor_0, extend) {
    this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    this.extend = extend;
};
var extendFn = function (__dict_Semigroup_0) {
    return new Extend(function () {
        return Prelude.functorFn;
    }, function (f) {
        return function (g) {
            return function (w) {
                return f(function (w$prime) {
                    return g(Prelude["<>"](__dict_Semigroup_0)(w)(w$prime));
                });
            };
        };
    });
};
var extend = function (dict) {
    return dict.extend;
};
var $less$less$eq = function (__dict_Extend_1) {
    return extend(__dict_Extend_1);
};
var $eq$less$eq = function (__dict_Extend_2) {
    return function (f) {
        return function (g) {
            return function (w) {
                return f($less$less$eq(__dict_Extend_2)(g)(w));
            };
        };
    };
};
var $eq$greater$eq = function (__dict_Extend_3) {
    return function (f) {
        return function (g) {
            return function (w) {
                return g($less$less$eq(__dict_Extend_3)(f)(w));
            };
        };
    };
};
var $eq$greater$greater = function (__dict_Extend_4) {
    return function (w) {
        return function (f) {
            return $less$less$eq(__dict_Extend_4)(f)(w);
        };
    };
};
var duplicate = function (__dict_Extend_5) {
    return extend(__dict_Extend_5)(Prelude.id(Prelude.categoryFn));
};
module.exports = {
    Extend: Extend, 
    duplicate: duplicate, 
    "=<=": $eq$less$eq, 
    "=>=": $eq$greater$eq, 
    "=>>": $eq$greater$greater, 
    "<<=": $less$less$eq, 
    extend: extend, 
    extendFn: extendFn
};

},{"Prelude":"/Users/simon/purescript-incremental/example/output/Prelude/index.js"}],"/Users/simon/purescript-incremental/example/output/Control.Lazy/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Lazy = function (defer) {
    this.defer = defer;
};
var defer = function (dict) {
    return dict.defer;
};
var fix = function (__dict_Lazy_0) {
    return function (f) {
        return defer(__dict_Lazy_0)(function (_59) {
            return f(fix(__dict_Lazy_0)(f));
        });
    };
};
module.exports = {
    Lazy: Lazy, 
    fix: fix, 
    defer: defer
};

},{"Prelude":"/Users/simon/purescript-incremental/example/output/Prelude/index.js"}],"/Users/simon/purescript-incremental/example/output/Control.Monad.Eff/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Control.Monad.Eff

exports.returnE = function (a) {
  return function () {
    return a;
  };
};

exports.bindE = function (a) {
  return function (f) {
    return function () {
      return f(a())();
    };
  };
};

exports.runPure = function (f) {
  return f();
};

exports.untilE = function (f) {
  return function () {
    while (!f());
    return {};
  };
};

exports.whileE = function (f) {
  return function (a) {
    return function () {
      while (f()) {
        a();
      }
      return {};
    };
  };
};

exports.forE = function (lo) {
  return function (hi) {
    return function (f) {
      return function () {
        for (var i = lo; i < hi; i++) {
          f(i)();
        }
      };
    };
  };
};

exports.foreachE = function (as) {
  return function (f) {
    return function () {
      for (var i = 0, l = as.length; i < l; i++) {
        f(as[i])();
      }
    };
  };
};

},{}],"/Users/simon/purescript-incremental/example/output/Control.Monad.Eff/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var monadEff = new Prelude.Monad(function () {
    return applicativeEff;
}, function () {
    return bindEff;
});
var bindEff = new Prelude.Bind(function () {
    return applyEff;
}, $foreign.bindE);
var applyEff = new Prelude.Apply(function () {
    return functorEff;
}, Prelude.ap(monadEff));
var applicativeEff = new Prelude.Applicative(function () {
    return applyEff;
}, $foreign.returnE);
var functorEff = new Prelude.Functor(Prelude.liftA1(applicativeEff));
module.exports = {
    functorEff: functorEff, 
    applyEff: applyEff, 
    applicativeEff: applicativeEff, 
    bindEff: bindEff, 
    monadEff: monadEff, 
    foreachE: $foreign.foreachE, 
    forE: $foreign.forE, 
    whileE: $foreign.whileE, 
    untilE: $foreign.untilE, 
    runPure: $foreign.runPure
};

},{"./foreign":"/Users/simon/purescript-incremental/example/output/Control.Monad.Eff/foreign.js","Prelude":"/Users/simon/purescript-incremental/example/output/Prelude/index.js"}],"/Users/simon/purescript-incremental/example/output/Control.Monad.ST/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Control.Monad.ST

exports.newSTRef = function (val) {
  return function () {
    return { value: val };
  };
};

exports.readSTRef = function (ref) {
  return function () {
    return ref.value;
  };
};

exports.modifySTRef = function (ref) {
  return function (f) {
    return function () {
      /* jshint boss: true */
      return ref.value = f(ref.value);
    };
  };
};

exports.writeSTRef = function (ref) {
  return function (a) {
    return function () {
      /* jshint boss: true */
      return ref.value = a;
    };
  };
};

exports.runST = function (f) {
  return f;
};

},{}],"/Users/simon/purescript-incremental/example/output/Control.Monad.ST/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Prelude = require("Prelude");
var pureST = function (st) {
    return Control_Monad_Eff.runPure($foreign.runST(st));
};
module.exports = {
    pureST: pureST, 
    runST: $foreign.runST, 
    writeSTRef: $foreign.writeSTRef, 
    modifySTRef: $foreign.modifySTRef, 
    readSTRef: $foreign.readSTRef, 
    newSTRef: $foreign.newSTRef
};

},{"./foreign":"/Users/simon/purescript-incremental/example/output/Control.Monad.ST/foreign.js","Control.Monad.Eff":"/Users/simon/purescript-incremental/example/output/Control.Monad.Eff/index.js","Prelude":"/Users/simon/purescript-incremental/example/output/Prelude/index.js"}],"/Users/simon/purescript-incremental/example/output/Control.MonadPlus/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Control_Plus = require("Control.Plus");
var Control_Alternative = require("Control.Alternative");
var MonadPlus = function (__superclass_Control$dotAlternative$dotAlternative_1, __superclass_Prelude$dotMonad_0) {
    this["__superclass_Control.Alternative.Alternative_1"] = __superclass_Control$dotAlternative$dotAlternative_1;
    this["__superclass_Prelude.Monad_0"] = __superclass_Prelude$dotMonad_0;
};
var monadPlusArray = new MonadPlus(function () {
    return Control_Alternative.alternativeArray;
}, function () {
    return Prelude.monadArray;
});
var guard = function (__dict_MonadPlus_0) {
    return function (_149) {
        if (_149) {
            return Prelude["return"]((__dict_MonadPlus_0["__superclass_Control.Alternative.Alternative_1"]())["__superclass_Prelude.Applicative_0"]())(Prelude.unit);
        };
        if (!_149) {
            return Control_Plus.empty((__dict_MonadPlus_0["__superclass_Control.Alternative.Alternative_1"]())["__superclass_Control.Plus.Plus_1"]());
        };
        throw new Error("Failed pattern match at /Users/simon/purescript-incremental/example/bower_components/purescript-control/src/Control/MonadPlus.purs line 35, column 1 - line 36, column 1: " + [ _149.constructor.name ]);
    };
};
module.exports = {
    MonadPlus: MonadPlus, 
    guard: guard, 
    monadPlusArray: monadPlusArray
};

},{"Control.Alternative":"/Users/simon/purescript-incremental/example/output/Control.Alternative/index.js","Control.Plus":"/Users/simon/purescript-incremental/example/output/Control.Plus/index.js","Prelude":"/Users/simon/purescript-incremental/example/output/Prelude/index.js"}],"/Users/simon/purescript-incremental/example/output/Control.Plus/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Control_Alt = require("Control.Alt");
var Plus = function (__superclass_Control$dotAlt$dotAlt_0, empty) {
    this["__superclass_Control.Alt.Alt_0"] = __superclass_Control$dotAlt$dotAlt_0;
    this.empty = empty;
};
var plusArray = new Plus(function () {
    return Control_Alt.altArray;
}, [  ]);
var empty = function (dict) {
    return dict.empty;
};
module.exports = {
    Plus: Plus, 
    empty: empty, 
    plusArray: plusArray
};

},{"Control.Alt":"/Users/simon/purescript-incremental/example/output/Control.Alt/index.js","Prelude":"/Users/simon/purescript-incremental/example/output/Prelude/index.js"}],"/Users/simon/purescript-incremental/example/output/DOM.Event.EventPhase/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Enum = require("Data.Enum");
var Data_Maybe = require("Data.Maybe");
var None = (function () {
    function None() {

    };
    None.value = new None();
    return None;
})();
var Capturing = (function () {
    function Capturing() {

    };
    Capturing.value = new Capturing();
    return Capturing;
})();
var AtTarget = (function () {
    function AtTarget() {

    };
    AtTarget.value = new AtTarget();
    return AtTarget;
})();
var Bubbling = (function () {
    function Bubbling() {

    };
    Bubbling.value = new Bubbling();
    return Bubbling;
})();
var toEnumEventPhase = function (_341) {
    if (_341 === 0) {
        return new Data_Maybe.Just(None.value);
    };
    if (_341 === 1) {
        return new Data_Maybe.Just(Capturing.value);
    };
    if (_341 === 2) {
        return new Data_Maybe.Just(AtTarget.value);
    };
    if (_341 === 3) {
        return new Data_Maybe.Just(Bubbling.value);
    };
    return Data_Maybe.Nothing.value;
};
var fromEnumEventPhase = function (_342) {
    if (_342 instanceof None) {
        return 0;
    };
    if (_342 instanceof Capturing) {
        return 1;
    };
    if (_342 instanceof AtTarget) {
        return 2;
    };
    if (_342 instanceof Bubbling) {
        return 3;
    };
    throw new Error("Failed pattern match at /Users/simon/purescript-incremental/example/bower_components/purescript-dom/src/DOM/Event/EventPhase.purs line 44, column 1 - line 45, column 1: " + [ _342.constructor.name ]);
};
var eqEventPhase = new Prelude.Eq(function (_343) {
    return function (_344) {
        if (_343 instanceof None && _344 instanceof None) {
            return true;
        };
        if (_343 instanceof Capturing && _344 instanceof Capturing) {
            return true;
        };
        if (_343 instanceof AtTarget && _344 instanceof AtTarget) {
            return true;
        };
        if (_343 instanceof Bubbling && _344 instanceof Bubbling) {
            return true;
        };
        return false;
    };
});
var ordEventPhase = new Prelude.Ord(function () {
    return eqEventPhase;
}, function (x) {
    return function (y) {
        return Prelude.compare(Prelude.ordInt)(fromEnumEventPhase(x))(fromEnumEventPhase(y));
    };
});
var boundedEventPhase = new Prelude.Bounded(None.value, Bubbling.value);
var boundedOrdEventPhase = new Prelude.BoundedOrd(function () {
    return boundedEventPhase;
}, function () {
    return ordEventPhase;
});
var enumEventPhase = new Data_Enum.Enum(function () {
    return boundedEventPhase;
}, 4, fromEnumEventPhase, Data_Enum.defaultPred(toEnumEventPhase)(fromEnumEventPhase), Data_Enum.defaultSucc(toEnumEventPhase)(fromEnumEventPhase), toEnumEventPhase);
module.exports = {
    None: None, 
    Capturing: Capturing, 
    AtTarget: AtTarget, 
    Bubbling: Bubbling, 
    eqEventPhase: eqEventPhase, 
    ordEventPhase: ordEventPhase, 
    boundedEventPhase: boundedEventPhase, 
    boundedOrdEventPhase: boundedOrdEventPhase, 
    enumEventPhase: enumEventPhase
};

},{"Data.Enum":"/Users/simon/purescript-incremental/example/output/Data.Enum/index.js","Data.Maybe":"/Users/simon/purescript-incremental/example/output/Data.Maybe/index.js","Prelude":"/Users/simon/purescript-incremental/example/output/Prelude/index.js"}],"/Users/simon/purescript-incremental/example/output/DOM.Event.Types/foreign.js":[function(require,module,exports){
/* global exports, EventTarget */
"use strict";

// module DOM.Event.Types

exports._readEventTarget = function (left) {
  return function (right) {
    return function (foreign) {
      return foreign instanceof EventTarget ? left("Value is not an EventTarget") : right(foreign);
    };
  };
};

},{}],"/Users/simon/purescript-incremental/example/output/DOM.Event.Types/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Unsafe_Coerce = require("Unsafe.Coerce");
var Data_Foreign = require("Data.Foreign");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Data_Either = require("Data.Either");
var Data_Foreign_Class = require("Data.Foreign.Class");
var Data_Maybe_Unsafe = require("Data.Maybe.Unsafe");
var DOM = require("DOM");
var DOM_Event_EventPhase = require("DOM.Event.EventPhase");
var EventType = function (x) {
    return x;
};
var unsafeToEvent = Unsafe_Coerce.unsafeCoerce;
var userProximityEventToEvent = unsafeToEvent;
var wheelEventToEvent = unsafeToEvent;
var uiEventToEvent = unsafeToEvent;
var transitionEventToEvent = unsafeToEvent;
var touchEventToEvent = unsafeToEvent;
var timeEventToEvent = unsafeToEvent;
var svgZoomEventToEvent = unsafeToEvent;
var svgEventToEvent = unsafeToEvent;
var storageEventToEvent = unsafeToEvent;
var sensorEventToEvent = unsafeToEvent;
var rtcPeerConnectionIceEventToEvent = unsafeToEvent;
var rtcIdentityEventToEvent = unsafeToEvent;
var rtcIdentityErrorEventToEvent = unsafeToEvent;
var rtcDataChannelEventToEvent = unsafeToEvent;
var relatedEventToEvent = unsafeToEvent;
var readWheelEvent = Data_Foreign.unsafeReadTagged("WheelEvent");
var readUserProximityEvent = Data_Foreign.unsafeReadTagged("UserProximityEvent");
var readUIEvent = Data_Foreign.unsafeReadTagged("UIEvent");
var readTransitionEvent = Data_Foreign.unsafeReadTagged("TransitionEvent");
var readTouchEvent = Data_Foreign.unsafeReadTagged("TouchEvent");
var readTimeEvent = Data_Foreign.unsafeReadTagged("TimeEvent");
var readStorageEvent = Data_Foreign.unsafeReadTagged("StorageEvent");
var readSensorEvent = Data_Foreign.unsafeReadTagged("SensorEvent");
var readSVGZoomEvent = Data_Foreign.unsafeReadTagged("SVGZoomEvent");
var readSVGEvent = Data_Foreign.unsafeReadTagged("SVGEvent");
var readRelatedEvent = Data_Foreign.unsafeReadTagged("RelatedEvent");
var readRTCPeerConnectionIceEvent = Data_Foreign.unsafeReadTagged("RTCPeerConnectionIceEvent");
var readRTCIdentityEvent = Data_Foreign.unsafeReadTagged("RTCIdentityEvent");
var readRTCIdentityErrorEvent = Data_Foreign.unsafeReadTagged("RTCIdentityErrorEvent");
var readRTCDataChannelEvent = Data_Foreign.unsafeReadTagged("RTCDataChannelEvent");
var readProgressEvent = Data_Foreign.unsafeReadTagged("ProgressEvent");
var readPopStateEvent = Data_Foreign.unsafeReadTagged("PopStateEvent");
var readPointerEvent = Data_Foreign.unsafeReadTagged("PointerEvent");
var readPageTransitionEvent = Data_Foreign.unsafeReadTagged("PageTransitionEvent");
var readOfflineAudioCompletionEvent = Data_Foreign.unsafeReadTagged("OfflineAudioCompletionEvent");
var readMutationEvent = Data_Foreign.unsafeReadTagged("MutationEvent");
var readMouseEvent = Data_Foreign.unsafeReadTagged("MouseEvent");
var readMessageEvent = Data_Foreign.unsafeReadTagged("MessageEvent");
var readMediaStreamEvent = Data_Foreign.unsafeReadTagged("MediaStreamEvent");
var readKeyboardEvent = Data_Foreign.unsafeReadTagged("KeyboardEvent");
var readInputEvent = Data_Foreign.unsafeReadTagged("InputEvent");
var readIDBVersionChangeEvent = Data_Foreign.unsafeReadTagged("IDBVersionChangeEvent");
var readHashChangeEvent = Data_Foreign.unsafeReadTagged("HashChangeEvent");
var readGamepadEvent = Data_Foreign.unsafeReadTagged("GamepadEvent");
var readFocusEvent = Data_Foreign.unsafeReadTagged("FocusEvent");
var readFetchEvent = Data_Foreign.unsafeReadTagged("FetchEvent");
var readEventTarget = $foreign._readEventTarget(Data_Either.Left.create)(Data_Either.Right.create);
var readErrorEvent = Data_Foreign.unsafeReadTagged("ErrorEvent");
var readEditingBeforeInputEvent = Data_Foreign.unsafeReadTagged("EditingBeforeInputEvent");
var readDragEvent = Data_Foreign.unsafeReadTagged("DragEvent");
var readDeviceProximityEvent = Data_Foreign.unsafeReadTagged("DeviceProximityEvent");
var readDeviceOrientationEvent = Data_Foreign.unsafeReadTagged("DeviceOrientationEvent");
var readDeviceMotionEvent = Data_Foreign.unsafeReadTagged("DeviceMotionEvent");
var readDeviceLightEvent = Data_Foreign.unsafeReadTagged("DeviceLightEvent");
var readDOMTransactionEvent = Data_Foreign.unsafeReadTagged("DOMTransactionEvent");
var readCustomEvent = Data_Foreign.unsafeReadTagged("CustomEvent");
var readCompositionEvent = Data_Foreign.unsafeReadTagged("CompositionEvent");
var readCloseEvent = Data_Foreign.unsafeReadTagged("CloseEvent");
var readClipboardEvent = Data_Foreign.unsafeReadTagged("ClipboardEvent");
var readCSSFontFaceLoadEvent = Data_Foreign.unsafeReadTagged("CSSFontFaceLoadEvent");
var readBlobEvent = Data_Foreign.unsafeReadTagged("BlobEvent");
var readBeforeUnloadEvent = Data_Foreign.unsafeReadTagged("BeforeUnloadEvent");
var readBeforeInputEvent = Data_Foreign.unsafeReadTagged("BeforeInputEvent");
var readAudioProcessingEvent = Data_Foreign.unsafeReadTagged("AudioProcessingEvent");
var readAnimationEvent = Data_Foreign.unsafeReadTagged("AnimationEvent");
var progressEventToEvent = unsafeToEvent;
var popStateEventToEvent = unsafeToEvent;
var pointerEventToEvent = unsafeToEvent;
var pageTransitionEventToEvent = unsafeToEvent;
var offlineAudioCompletionEventToEvent = unsafeToEvent;
var mutationEventToEvent = unsafeToEvent;
var mouseEventToEvent = unsafeToEvent;
var messageEventToEvent = unsafeToEvent;
var mediaStreamEventToEvent = unsafeToEvent;
var keyboardEventToEvent = unsafeToEvent;
var isForeignWheelEvent = new Data_Foreign_Class.IsForeign(readWheelEvent);
var isForeignUserProximityEvent = new Data_Foreign_Class.IsForeign(readUserProximityEvent);
var isForeignUIEvent = new Data_Foreign_Class.IsForeign(readUIEvent);
var isForeignTransitionEvent = new Data_Foreign_Class.IsForeign(readTransitionEvent);
var isForeignTouchEvent = new Data_Foreign_Class.IsForeign(readTouchEvent);
var isForeignTimeEvent = new Data_Foreign_Class.IsForeign(readTimeEvent);
var isForeignStorageEvent = new Data_Foreign_Class.IsForeign(readStorageEvent);
var isForeignSensorEvent = new Data_Foreign_Class.IsForeign(readSensorEvent);
var isForeignSVGZoomEvent = new Data_Foreign_Class.IsForeign(readSVGZoomEvent);
var isForeignSVGEvent = new Data_Foreign_Class.IsForeign(readSVGEvent);
var isForeignRelatedEvent = new Data_Foreign_Class.IsForeign(readRelatedEvent);
var isForeignRTCPeerConnectionIceEvent = new Data_Foreign_Class.IsForeign(readRTCPeerConnectionIceEvent);
var isForeignRTCIdentityEvent = new Data_Foreign_Class.IsForeign(readRTCIdentityEvent);
var isForeignRTCIdentityErrorEvent = new Data_Foreign_Class.IsForeign(readRTCIdentityErrorEvent);
var isForeignRTCDataChannelEvent = new Data_Foreign_Class.IsForeign(readRTCDataChannelEvent);
var isForeignProgressEvent = new Data_Foreign_Class.IsForeign(readProgressEvent);
var isForeignPopStateEvent = new Data_Foreign_Class.IsForeign(readPopStateEvent);
var isForeignPointerEvent = new Data_Foreign_Class.IsForeign(readPointerEvent);
var isForeignPageTransitionEvent = new Data_Foreign_Class.IsForeign(readPageTransitionEvent);
var isForeignOfflineAudioCompletionEvent = new Data_Foreign_Class.IsForeign(readOfflineAudioCompletionEvent);
var isForeignMutationEvent = new Data_Foreign_Class.IsForeign(readMutationEvent);
var isForeignMouseEvent = new Data_Foreign_Class.IsForeign(readMouseEvent);
var isForeignMessageEvent = new Data_Foreign_Class.IsForeign(readMessageEvent);
var isForeignMediaStreamEvent = new Data_Foreign_Class.IsForeign(readMediaStreamEvent);
var isForeignKeyboardEvent = new Data_Foreign_Class.IsForeign(readKeyboardEvent);
var isForeignInputEvent = new Data_Foreign_Class.IsForeign(readInputEvent);
var isForeignIDBVersionChangeEvent = new Data_Foreign_Class.IsForeign(readIDBVersionChangeEvent);
var isForeignHashChangeEvent = new Data_Foreign_Class.IsForeign(readHashChangeEvent);
var isForeignGamepadEvent = new Data_Foreign_Class.IsForeign(readGamepadEvent);
var isForeignFocusEvent = new Data_Foreign_Class.IsForeign(readFocusEvent);
var isForeignFetchEvent = new Data_Foreign_Class.IsForeign(readFetchEvent);
var isForeignEventTarget = new Data_Foreign_Class.IsForeign(readEventTarget);
var isForeignErrorEvent = new Data_Foreign_Class.IsForeign(readErrorEvent);
var isForeignEditingBeforeInputEvent = new Data_Foreign_Class.IsForeign(readEditingBeforeInputEvent);
var isForeignDragEvent = new Data_Foreign_Class.IsForeign(readDragEvent);
var isForeignDeviceProximityEvent = new Data_Foreign_Class.IsForeign(readDeviceProximityEvent);
var isForeignDeviceOrientationEvent = new Data_Foreign_Class.IsForeign(readDeviceOrientationEvent);
var isForeignDeviceMotionEvent = new Data_Foreign_Class.IsForeign(readDeviceMotionEvent);
var isForeignDeviceLightEvent = new Data_Foreign_Class.IsForeign(readDeviceLightEvent);
var isForeignDOMTransactionEvent = new Data_Foreign_Class.IsForeign(readDOMTransactionEvent);
var isForeignCustomEvent = new Data_Foreign_Class.IsForeign(readCustomEvent);
var isForeignCompositionEvent = new Data_Foreign_Class.IsForeign(readCompositionEvent);
var isForeignCloseEvent = new Data_Foreign_Class.IsForeign(readCloseEvent);
var isForeignClipboardEvent = new Data_Foreign_Class.IsForeign(readClipboardEvent);
var isForeignCSSFontFaceLoadEvent = new Data_Foreign_Class.IsForeign(readCSSFontFaceLoadEvent);
var isForeignBlobEvent = new Data_Foreign_Class.IsForeign(readBlobEvent);
var isForeignBeforeUnloadEvent = new Data_Foreign_Class.IsForeign(readBeforeUnloadEvent);
var isForeignBeforeInputEvent = new Data_Foreign_Class.IsForeign(readBeforeInputEvent);
var isForeignAudioProcessingEvent = new Data_Foreign_Class.IsForeign(readAudioProcessingEvent);
var isForeignAnimationEvent = new Data_Foreign_Class.IsForeign(readAnimationEvent);
var inputEventToEvent = unsafeToEvent;
var idbVersionChangeEventToEvent = unsafeToEvent;
var hashChangeEventToEvent = unsafeToEvent;
var gamepadEventToEvent = unsafeToEvent;
var focusEventToEvent = unsafeToEvent;
var fetchEventToEvent = unsafeToEvent;
var errorEventToEvent = unsafeToEvent;
var eqEventType = new Prelude.Eq(function (_345) {
    return function (_346) {
        return Prelude["=="](Prelude.eqString)(_345)(_346);
    };
});
var ordEventType = new Prelude.Ord(function () {
    return eqEventType;
}, function (_347) {
    return function (_348) {
        return Prelude.compare(Prelude.ordString)(_347)(_348);
    };
});
var editingBeforeInputEventToEvent = unsafeToEvent;
var dragEventToEvent = unsafeToEvent;
var domTransactionEventToEvent = unsafeToEvent;
var deviceProximityEventToEvent = unsafeToEvent;
var deviceOrientationEventToEvent = unsafeToEvent;
var deviceMotionEventToEvent = unsafeToEvent;
var deviceLightEventToEvent = unsafeToEvent;
var customEventToEvent = unsafeToEvent;
var cssFontFaceLoadEventToEvent = unsafeToEvent;
var compositionEventToEvent = unsafeToEvent;
var closeEventToEvent = unsafeToEvent;
var clipboardEventToEvent = unsafeToEvent;
var blobEventToEvent = unsafeToEvent;
var beforeUnloadEventToEvent = unsafeToEvent;
var beforeInputEventToEvent = unsafeToEvent;
var audioProcessingEventToEvent = unsafeToEvent;
var animationEventToEvent = unsafeToEvent;
module.exports = {
    EventType: EventType, 
    readWheelEvent: readWheelEvent, 
    wheelEventToEvent: wheelEventToEvent, 
    readUserProximityEvent: readUserProximityEvent, 
    userProximityEventToEvent: userProximityEventToEvent, 
    readUIEvent: readUIEvent, 
    uiEventToEvent: uiEventToEvent, 
    readTransitionEvent: readTransitionEvent, 
    transitionEventToEvent: transitionEventToEvent, 
    readTouchEvent: readTouchEvent, 
    touchEventToEvent: touchEventToEvent, 
    readTimeEvent: readTimeEvent, 
    timeEventToEvent: timeEventToEvent, 
    readSVGZoomEvent: readSVGZoomEvent, 
    svgZoomEventToEvent: svgZoomEventToEvent, 
    readSVGEvent: readSVGEvent, 
    svgEventToEvent: svgEventToEvent, 
    readStorageEvent: readStorageEvent, 
    storageEventToEvent: storageEventToEvent, 
    readSensorEvent: readSensorEvent, 
    sensorEventToEvent: sensorEventToEvent, 
    readRTCPeerConnectionIceEvent: readRTCPeerConnectionIceEvent, 
    rtcPeerConnectionIceEventToEvent: rtcPeerConnectionIceEventToEvent, 
    readRTCIdentityEvent: readRTCIdentityEvent, 
    rtcIdentityEventToEvent: rtcIdentityEventToEvent, 
    readRTCIdentityErrorEvent: readRTCIdentityErrorEvent, 
    rtcIdentityErrorEventToEvent: rtcIdentityErrorEventToEvent, 
    readRTCDataChannelEvent: readRTCDataChannelEvent, 
    rtcDataChannelEventToEvent: rtcDataChannelEventToEvent, 
    readRelatedEvent: readRelatedEvent, 
    relatedEventToEvent: relatedEventToEvent, 
    readProgressEvent: readProgressEvent, 
    progressEventToEvent: progressEventToEvent, 
    readPopStateEvent: readPopStateEvent, 
    popStateEventToEvent: popStateEventToEvent, 
    readPointerEvent: readPointerEvent, 
    pointerEventToEvent: pointerEventToEvent, 
    readPageTransitionEvent: readPageTransitionEvent, 
    pageTransitionEventToEvent: pageTransitionEventToEvent, 
    readOfflineAudioCompletionEvent: readOfflineAudioCompletionEvent, 
    offlineAudioCompletionEventToEvent: offlineAudioCompletionEventToEvent, 
    readMutationEvent: readMutationEvent, 
    mutationEventToEvent: mutationEventToEvent, 
    readMouseEvent: readMouseEvent, 
    mouseEventToEvent: mouseEventToEvent, 
    readMessageEvent: readMessageEvent, 
    messageEventToEvent: messageEventToEvent, 
    readMediaStreamEvent: readMediaStreamEvent, 
    mediaStreamEventToEvent: mediaStreamEventToEvent, 
    readKeyboardEvent: readKeyboardEvent, 
    keyboardEventToEvent: keyboardEventToEvent, 
    readInputEvent: readInputEvent, 
    inputEventToEvent: inputEventToEvent, 
    readIDBVersionChangeEvent: readIDBVersionChangeEvent, 
    idbVersionChangeEventToEvent: idbVersionChangeEventToEvent, 
    readHashChangeEvent: readHashChangeEvent, 
    hashChangeEventToEvent: hashChangeEventToEvent, 
    readGamepadEvent: readGamepadEvent, 
    gamepadEventToEvent: gamepadEventToEvent, 
    readFocusEvent: readFocusEvent, 
    focusEventToEvent: focusEventToEvent, 
    readFetchEvent: readFetchEvent, 
    fetchEventToEvent: fetchEventToEvent, 
    readErrorEvent: readErrorEvent, 
    errorEventToEvent: errorEventToEvent, 
    readEditingBeforeInputEvent: readEditingBeforeInputEvent, 
    editingBeforeInputEventToEvent: editingBeforeInputEventToEvent, 
    readDragEvent: readDragEvent, 
    dragEventToEvent: dragEventToEvent, 
    readDOMTransactionEvent: readDOMTransactionEvent, 
    domTransactionEventToEvent: domTransactionEventToEvent, 
    readDeviceProximityEvent: readDeviceProximityEvent, 
    deviceProximityEventToEvent: deviceProximityEventToEvent, 
    readDeviceOrientationEvent: readDeviceOrientationEvent, 
    deviceOrientationEventToEvent: deviceOrientationEventToEvent, 
    readDeviceMotionEvent: readDeviceMotionEvent, 
    deviceMotionEventToEvent: deviceMotionEventToEvent, 
    readDeviceLightEvent: readDeviceLightEvent, 
    deviceLightEventToEvent: deviceLightEventToEvent, 
    readCustomEvent: readCustomEvent, 
    customEventToEvent: customEventToEvent, 
    readCSSFontFaceLoadEvent: readCSSFontFaceLoadEvent, 
    cssFontFaceLoadEventToEvent: cssFontFaceLoadEventToEvent, 
    readCompositionEvent: readCompositionEvent, 
    compositionEventToEvent: compositionEventToEvent, 
    readCloseEvent: readCloseEvent, 
    closeEventToEvent: closeEventToEvent, 
    readClipboardEvent: readClipboardEvent, 
    clipboardEventToEvent: clipboardEventToEvent, 
    readBlobEvent: readBlobEvent, 
    blobEventToEvent: blobEventToEvent, 
    readBeforeUnloadEvent: readBeforeUnloadEvent, 
    beforeUnloadEventToEvent: beforeUnloadEventToEvent, 
    readBeforeInputEvent: readBeforeInputEvent, 
    beforeInputEventToEvent: beforeInputEventToEvent, 
    readAudioProcessingEvent: readAudioProcessingEvent, 
    audioProcessingEventToEvent: audioProcessingEventToEvent, 
    readAnimationEvent: readAnimationEvent, 
    animationEventToEvent: animationEventToEvent, 
    readEventTarget: readEventTarget, 
    eqEventType: eqEventType, 
    ordEventType: ordEventType, 
    isForeignEventTarget: isForeignEventTarget, 
    isForeignAnimationEvent: isForeignAnimationEvent, 
    isForeignAudioProcessingEvent: isForeignAudioProcessingEvent, 
    isForeignBeforeInputEvent: isForeignBeforeInputEvent, 
    isForeignBeforeUnloadEvent: isForeignBeforeUnloadEvent, 
    isForeignBlobEvent: isForeignBlobEvent, 
    isForeignClipboardEvent: isForeignClipboardEvent, 
    isForeignCloseEvent: isForeignCloseEvent, 
    isForeignCompositionEvent: isForeignCompositionEvent, 
    isForeignCSSFontFaceLoadEvent: isForeignCSSFontFaceLoadEvent, 
    isForeignCustomEvent: isForeignCustomEvent, 
    isForeignDeviceLightEvent: isForeignDeviceLightEvent, 
    isForeignDeviceMotionEvent: isForeignDeviceMotionEvent, 
    isForeignDeviceOrientationEvent: isForeignDeviceOrientationEvent, 
    isForeignDeviceProximityEvent: isForeignDeviceProximityEvent, 
    isForeignDOMTransactionEvent: isForeignDOMTransactionEvent, 
    isForeignDragEvent: isForeignDragEvent, 
    isForeignEditingBeforeInputEvent: isForeignEditingBeforeInputEvent, 
    isForeignErrorEvent: isForeignErrorEvent, 
    isForeignFetchEvent: isForeignFetchEvent, 
    isForeignFocusEvent: isForeignFocusEvent, 
    isForeignGamepadEvent: isForeignGamepadEvent, 
    isForeignHashChangeEvent: isForeignHashChangeEvent, 
    isForeignIDBVersionChangeEvent: isForeignIDBVersionChangeEvent, 
    isForeignInputEvent: isForeignInputEvent, 
    isForeignKeyboardEvent: isForeignKeyboardEvent, 
    isForeignMediaStreamEvent: isForeignMediaStreamEvent, 
    isForeignMessageEvent: isForeignMessageEvent, 
    isForeignMouseEvent: isForeignMouseEvent, 
    isForeignMutationEvent: isForeignMutationEvent, 
    isForeignOfflineAudioCompletionEvent: isForeignOfflineAudioCompletionEvent, 
    isForeignPageTransitionEvent: isForeignPageTransitionEvent, 
    isForeignPointerEvent: isForeignPointerEvent, 
    isForeignPopStateEvent: isForeignPopStateEvent, 
    isForeignProgressEvent: isForeignProgressEvent, 
    isForeignRelatedEvent: isForeignRelatedEvent, 
    isForeignRTCDataChannelEvent: isForeignRTCDataChannelEvent, 
    isForeignRTCIdentityErrorEvent: isForeignRTCIdentityErrorEvent, 
    isForeignRTCIdentityEvent: isForeignRTCIdentityEvent, 
    isForeignRTCPeerConnectionIceEvent: isForeignRTCPeerConnectionIceEvent, 
    isForeignSensorEvent: isForeignSensorEvent, 
    isForeignStorageEvent: isForeignStorageEvent, 
    isForeignSVGEvent: isForeignSVGEvent, 
    isForeignSVGZoomEvent: isForeignSVGZoomEvent, 
    isForeignTimeEvent: isForeignTimeEvent, 
    isForeignTouchEvent: isForeignTouchEvent, 
    isForeignTransitionEvent: isForeignTransitionEvent, 
    isForeignUIEvent: isForeignUIEvent, 
    isForeignUserProximityEvent: isForeignUserProximityEvent, 
    isForeignWheelEvent: isForeignWheelEvent
};

},{"./foreign":"/Users/simon/purescript-incremental/example/output/DOM.Event.Types/foreign.js","Control.Monad.Eff":"/Users/simon/purescript-incremental/example/output/Control.Monad.Eff/index.js","DOM":"/Users/simon/purescript-incremental/example/output/DOM/index.js","DOM.Event.EventPhase":"/Users/simon/purescript-incremental/example/output/DOM.Event.EventPhase/index.js","Data.Either":"/Users/simon/purescript-incremental/example/output/Data.Either/index.js","Data.Foreign":"/Users/simon/purescript-incremental/example/output/Data.Foreign/index.js","Data.Foreign.Class":"/Users/simon/purescript-incremental/example/output/Data.Foreign.Class/index.js","Data.Maybe.Unsafe":"/Users/simon/purescript-incremental/example/output/Data.Maybe.Unsafe/index.js","Prelude":"/Users/simon/purescript-incremental/example/output/Prelude/index.js","Unsafe.Coerce":"/Users/simon/purescript-incremental/example/output/Unsafe.Coerce/index.js"}],"/Users/simon/purescript-incremental/example/output/DOM.HTML.Document/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module DOM.HTML.Document

exports.body = function (doc) {
  return function () {
    return doc.body;
  };
};

},{}],"/Users/simon/purescript-incremental/example/output/DOM.HTML.Document/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Data_Nullable = require("Data.Nullable");
var DOM = require("DOM");
var DOM_HTML_Types = require("DOM.HTML.Types");
module.exports = {
    body: $foreign.body
};

},{"./foreign":"/Users/simon/purescript-incremental/example/output/DOM.HTML.Document/foreign.js","Control.Monad.Eff":"/Users/simon/purescript-incremental/example/output/Control.Monad.Eff/index.js","DOM":"/Users/simon/purescript-incremental/example/output/DOM/index.js","DOM.HTML.Types":"/Users/simon/purescript-incremental/example/output/DOM.HTML.Types/index.js","Data.Nullable":"/Users/simon/purescript-incremental/example/output/Data.Nullable/index.js"}],"/Users/simon/purescript-incremental/example/output/DOM.HTML.Types/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module DOM.HTML.Types

exports._readHTMLElement = function (failure) {
  return function (success) {
    return function (value) {
      var tag = Object.prototype.toString.call(value);
      if (tag.indexOf("[object HTML") === 0 && tag.indexOf("Element]") === tag.length - 8) {
        return success(value);
      } else {
        return failure(tag);
      }
    };
  };
};

},{}],"/Users/simon/purescript-incremental/example/output/DOM.HTML.Types/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Unsafe_Coerce = require("Unsafe.Coerce");
var Data_Foreign = require("Data.Foreign");
var Prelude = require("Prelude");
var Data_Either = require("Data.Either");
var Data_Foreign_Class = require("Data.Foreign.Class");
var DOM_Event_Types = require("DOM.Event.Types");
var DOM_Node_Types = require("DOM.Node.Types");
var windowToEventTarget = Unsafe_Coerce.unsafeCoerce;
var readHTMLElement = $foreign._readHTMLElement(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Either.Left.create)(Data_Foreign.TypeMismatch.create("HTMLElement")))(Data_Either.Right.create);
var readHTMLDocument = Data_Foreign.unsafeReadTagged("HTMLDocument");
var isForeignHTMLElement = new Data_Foreign_Class.IsForeign(readHTMLElement);
var isForeignHTMLDocument = new Data_Foreign_Class.IsForeign(readHTMLDocument);
var htmlElementToParentNode = Unsafe_Coerce.unsafeCoerce;
var htmlElementToNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var htmlElementToNode = Unsafe_Coerce.unsafeCoerce;
var htmlElementToEventTarget = Unsafe_Coerce.unsafeCoerce;
var htmlElementToElement = Unsafe_Coerce.unsafeCoerce;
var htmlDocumentToParentNode = Unsafe_Coerce.unsafeCoerce;
var htmlDocumentToNonElementParentNode = Unsafe_Coerce.unsafeCoerce;
var htmlDocumentToNode = Unsafe_Coerce.unsafeCoerce;
var htmlDocumentToEventTarget = Unsafe_Coerce.unsafeCoerce;
var htmlDocumentToDocument = Unsafe_Coerce.unsafeCoerce;
module.exports = {
    readHTMLElement: readHTMLElement, 
    htmlElementToEventTarget: htmlElementToEventTarget, 
    htmlElementToNode: htmlElementToNode, 
    htmlElementToNonDocumentTypeChildNode: htmlElementToNonDocumentTypeChildNode, 
    htmlElementToParentNode: htmlElementToParentNode, 
    htmlElementToElement: htmlElementToElement, 
    readHTMLDocument: readHTMLDocument, 
    htmlDocumentToEventTarget: htmlDocumentToEventTarget, 
    htmlDocumentToNode: htmlDocumentToNode, 
    htmlDocumentToParentNode: htmlDocumentToParentNode, 
    htmlDocumentToNonElementParentNode: htmlDocumentToNonElementParentNode, 
    htmlDocumentToDocument: htmlDocumentToDocument, 
    windowToEventTarget: windowToEventTarget, 
    isForeignHTMLDocument: isForeignHTMLDocument, 
    isForeignHTMLElement: isForeignHTMLElement
};

},{"./foreign":"/Users/simon/purescript-incremental/example/output/DOM.HTML.Types/foreign.js","DOM.Event.Types":"/Users/simon/purescript-incremental/example/output/DOM.Event.Types/index.js","DOM.Node.Types":"/Users/simon/purescript-incremental/example/output/DOM.Node.Types/index.js","Data.Either":"/Users/simon/purescript-incremental/example/output/Data.Either/index.js","Data.Foreign":"/Users/simon/purescript-incremental/example/output/Data.Foreign/index.js","Data.Foreign.Class":"/Users/simon/purescript-incremental/example/output/Data.Foreign.Class/index.js","Prelude":"/Users/simon/purescript-incremental/example/output/Prelude/index.js","Unsafe.Coerce":"/Users/simon/purescript-incremental/example/output/Unsafe.Coerce/index.js"}],"/Users/simon/purescript-incremental/example/output/DOM.HTML.Window/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module DOM.HTML.Window

exports.document = function (window) {
  return function () {
    return window.document;
  };
};

},{}],"/Users/simon/purescript-incremental/example/output/DOM.HTML.Window/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Control_Monad_Eff = require("Control.Monad.Eff");
var DOM = require("DOM");
var DOM_HTML_Types = require("DOM.HTML.Types");
module.exports = {
    document: $foreign.document
};

},{"./foreign":"/Users/simon/purescript-incremental/example/output/DOM.HTML.Window/foreign.js","Control.Monad.Eff":"/Users/simon/purescript-incremental/example/output/Control.Monad.Eff/index.js","DOM":"/Users/simon/purescript-incremental/example/output/DOM/index.js","DOM.HTML.Types":"/Users/simon/purescript-incremental/example/output/DOM.HTML.Types/index.js"}],"/Users/simon/purescript-incremental/example/output/DOM.HTML/foreign.js":[function(require,module,exports){
/* global exports, window */
"use strict";

// module DOM.HTML

exports.window = function () {
  return window;
};

},{}],"/Users/simon/purescript-incremental/example/output/DOM.HTML/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Control_Monad_Eff = require("Control.Monad.Eff");
var DOM = require("DOM");
var DOM_HTML_Types = require("DOM.HTML.Types");
module.exports = {
    window: $foreign.window
};

},{"./foreign":"/Users/simon/purescript-incremental/example/output/DOM.HTML/foreign.js","Control.Monad.Eff":"/Users/simon/purescript-incremental/example/output/Control.Monad.Eff/index.js","DOM":"/Users/simon/purescript-incremental/example/output/DOM/index.js","DOM.HTML.Types":"/Users/simon/purescript-incremental/example/output/DOM.HTML.Types/index.js"}],"/Users/simon/purescript-incremental/example/output/DOM.Node.Types/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Unsafe_Coerce = require("Unsafe.Coerce");
var Prelude = require("Prelude");
var DOM_Event_Types = require("DOM.Event.Types");
var ElementId = function (x) {
    return x;
};
var textToNode = Unsafe_Coerce.unsafeCoerce;
var processingInstructionToNode = Unsafe_Coerce.unsafeCoerce;
var elementToParentNode = Unsafe_Coerce.unsafeCoerce;
var elementToNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var elementToNode = Unsafe_Coerce.unsafeCoerce;
var elementToEventTarget = Unsafe_Coerce.unsafeCoerce;
var documentTypeToNode = Unsafe_Coerce.unsafeCoerce;
var documentToParentNode = Unsafe_Coerce.unsafeCoerce;
var documentToNonElementParentNode = Unsafe_Coerce.unsafeCoerce;
var documentToNode = Unsafe_Coerce.unsafeCoerce;
var documentToEventTarget = Unsafe_Coerce.unsafeCoerce;
var documentFragmentToParentNode = Unsafe_Coerce.unsafeCoerce;
var documentFragmentToNonElementParentNode = Unsafe_Coerce.unsafeCoerce;
var documentFragmentToNode = Unsafe_Coerce.unsafeCoerce;
var commentToNode = Unsafe_Coerce.unsafeCoerce;
var characterDataToNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
module.exports = {
    ElementId: ElementId, 
    documentTypeToNode: documentTypeToNode, 
    documentFragmentToNode: documentFragmentToNode, 
    documentFragmentToParentNode: documentFragmentToParentNode, 
    documentFragmentToNonElementParentNode: documentFragmentToNonElementParentNode, 
    processingInstructionToNode: processingInstructionToNode, 
    commentToNode: commentToNode, 
    textToNode: textToNode, 
    characterDataToNonDocumentTypeChildNode: characterDataToNonDocumentTypeChildNode, 
    elementToEventTarget: elementToEventTarget, 
    elementToNode: elementToNode, 
    elementToNonDocumentTypeChildNode: elementToNonDocumentTypeChildNode, 
    elementToParentNode: elementToParentNode, 
    documentToEventTarget: documentToEventTarget, 
    documentToNode: documentToNode, 
    documentToParentNode: documentToParentNode, 
    documentToNonElementParentNode: documentToNonElementParentNode
};

},{"DOM.Event.Types":"/Users/simon/purescript-incremental/example/output/DOM.Event.Types/index.js","Prelude":"/Users/simon/purescript-incremental/example/output/Prelude/index.js","Unsafe.Coerce":"/Users/simon/purescript-incremental/example/output/Unsafe.Coerce/index.js"}],"/Users/simon/purescript-incremental/example/output/DOM/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
module.exports = {};

},{}],"/Users/simon/purescript-incremental/example/output/Data.Array.ST/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.Array.ST

exports.runSTArray = function (f) {
  return f;
};

exports.emptySTArray = function () {
  return [];
};

exports.peekSTArrayImpl = function (just) {
  return function (nothing) {
    return function (xs) {
      return function (i) {
        return function () {
          return i >= 0 && i < xs.length ? just(xs[i]) : nothing;
        };
      };
    };
  };
};

exports.pokeSTArray = function (xs) {
  return function (i) {
    return function (a) {
      return function () {
        var ret = i >= 0 && i < xs.length;
        if (ret) xs[i] = a;
        return ret;
      };
    };
  };
};

exports.pushAllSTArray = function (xs) {
  return function (as) {
    return function () {
      return xs.push.apply(xs, as);
    };
  };
};

exports.spliceSTArray = function (xs) {
  return function (i) {
    return function (howMany) {
      return function (bs) {
        return function () {
          return xs.splice.apply(xs, [i, howMany].concat(bs));
        };
      };
    };
  };
};

exports.copyImpl = function (xs) {
  return function () {
    return xs.slice();
  };
};

exports.toAssocArray = function (xs) {
  return function () {
    var n = xs.length;
    var as = new Array(n);
    for (var i = 0; i < n; i++) as[i] = { value: xs[i], index: i };
    return as;
  };
};

},{}],"/Users/simon/purescript-incremental/example/output/Data.Array.ST/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Control_Monad_ST = require("Control.Monad.ST");
var Data_Maybe = require("Data.Maybe");
var thaw = $foreign.copyImpl;
var pushSTArray = function (arr) {
    return function (a) {
        return $foreign.pushAllSTArray(arr)([ a ]);
    };
};
var peekSTArray = $foreign.peekSTArrayImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var freeze = $foreign.copyImpl;
module.exports = {
    thaw: thaw, 
    freeze: freeze, 
    pushSTArray: pushSTArray, 
    peekSTArray: peekSTArray, 
    toAssocArray: $foreign.toAssocArray, 
    spliceSTArray: $foreign.spliceSTArray, 
    pushAllSTArray: $foreign.pushAllSTArray, 
    pokeSTArray: $foreign.pokeSTArray, 
    emptySTArray: $foreign.emptySTArray, 
    runSTArray: $foreign.runSTArray
};

},{"./foreign":"/Users/simon/purescript-incremental/example/output/Data.Array.ST/foreign.js","Control.Monad.Eff":"/Users/simon/purescript-incremental/example/output/Control.Monad.Eff/index.js","Control.Monad.ST":"/Users/simon/purescript-incremental/example/output/Control.Monad.ST/index.js","Data.Maybe":"/Users/simon/purescript-incremental/example/output/Data.Maybe/index.js","Prelude":"/Users/simon/purescript-incremental/example/output/Prelude/index.js"}],"/Users/simon/purescript-incremental/example/output/Data.Array/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.Array

//------------------------------------------------------------------------------
// Array creation --------------------------------------------------------------
//------------------------------------------------------------------------------

exports.range = function (start) {
  return function (end) {
    var step = start > end ? -1 : 1;
    var result = [];
    for (var i = start, n = 0; i !== end; i += step) {
      result[n++] = i;
    }
    result[n] = i;
    return result;
  };
};

exports.replicate = function (n) {
  return function (v) {
    if (n < 1) return [];
    var r = new Array(n);
    for (var i = 0; i < n; i++) r[i] = v;
    return r;
  };
};

//------------------------------------------------------------------------------
// Array size ------------------------------------------------------------------
//------------------------------------------------------------------------------

exports.length = function (xs) {
  return xs.length;
};

//------------------------------------------------------------------------------
// Extending arrays ------------------------------------------------------------
//------------------------------------------------------------------------------

exports.cons = function (e) {
  return function (l) {
    return [e].concat(l);
  };
};

exports.snoc = function (l) {
  return function (e) {
    var l1 = l.slice();
    l1.push(e);
    return l1;
  };
};

//------------------------------------------------------------------------------
// Non-indexed reads -----------------------------------------------------------
//------------------------------------------------------------------------------

exports["uncons'"] = function (empty) {
  return function (next) {
    return function (xs) {
      return xs.length === 0 ? empty({}) : next(xs[0])(xs.slice(1));
    };
  };
};

//------------------------------------------------------------------------------
// Indexed operations ----------------------------------------------------------
//------------------------------------------------------------------------------

exports.indexImpl = function (just) {
  return function (nothing) {
    return function (xs) {
      return function (i) {
        return i < 0 || i >= xs.length ? nothing :  just(xs[i]);
      };
    };
  };
};

exports.findIndexImpl = function (just) {
  return function (nothing) {
    return function (f) {
      return function (xs) {
        for (var i = 0, l = xs.length; i < l; i++) {
          if (f(xs[i])) return just(i);
        }
        return nothing;
      };
    };
  };
};

exports.findLastIndexImpl = function (just) {
  return function (nothing) {
    return function (f) {
      return function (xs) {
        for (var i = xs.length - 1; i >= 0; i--) {
          if (f(xs[i])) return just(i);
        }
        return nothing;
      };
    };
  };
};

exports._insertAt = function (just) {
  return function (nothing) {
    return function (i) {
      return function (a) {
        return function (l) {
          if (i < 0 || i > l.length) return nothing;
          var l1 = l.slice();
          l1.splice(i, 0, a);
          return just(l1);
        };
      };
    };
  };
};

exports._deleteAt = function (just) {
  return function (nothing) {
    return function (i) {
      return function (l) {
        if (i < 0 || i >= l.length) return nothing;
        var l1 = l.slice();
        l1.splice(i, 1);
        return just(l1);
      };
    };
  };
};

exports._updateAt = function (just) {
  return function (nothing) {
    return function (i) {
      return function (a) {
        return function (l) {
          if (i < 0 || i >= l.length) return nothing;
          var l1 = l.slice();
          l1[i] = a;
          return just(l1);
        };
      };
    };
  };
};

//------------------------------------------------------------------------------
// Transformations -------------------------------------------------------------
//------------------------------------------------------------------------------

exports.reverse = function (l) {
  return l.slice().reverse();
};

exports.concat = function (xss) {
  var result = [];
  for (var i = 0, l = xss.length; i < l; i++) {
    var xs = xss[i];
    for (var j = 0, m = xs.length; j < m; j++) {
      result.push(xs[j]);
    }
  }
  return result;
};

exports.filter = function (f) {
  return function (xs) {
    return xs.filter(f);
  };
};

//------------------------------------------------------------------------------
// Sorting ---------------------------------------------------------------------
//------------------------------------------------------------------------------

exports.sortImpl = function (f) {
  return function (l) {
    /* jshint maxparams: 2 */
    return l.slice().sort(function (x, y) {
      return f(x)(y);
    });
  };
};

//------------------------------------------------------------------------------
// Subarrays -------------------------------------------------------------------
//------------------------------------------------------------------------------

exports.slice = function (s) {
  return function (e) {
    return function (l) {
      return l.slice(s, e);
    };
  };
};

exports.drop = function (n) {
  return function (l) {
    return n < 1 ? l : l.slice(n);
  };
};

//------------------------------------------------------------------------------
// Zipping ---------------------------------------------------------------------
//------------------------------------------------------------------------------

exports.zipWith = function (f) {
  return function (xs) {
    return function (ys) {
      var l = xs.length < ys.length ? xs.length : ys.length;
      var result = new Array(l);
      for (var i = 0; i < l; i++) {
        result[i] = f(xs[i])(ys[i]);
      }
      return result;
    };
  };
};

},{}],"/Users/simon/purescript-incremental/example/output/Data.Array/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Data_Traversable = require("Data.Traversable");
var Control_Lazy = require("Control.Lazy");
var Control_Alt = require("Control.Alt");
var Data_Maybe = require("Data.Maybe");
var Data_Maybe_Unsafe = require("Data.Maybe.Unsafe");
var Data_Foldable = require("Data.Foldable");
var Control_Alternative = require("Control.Alternative");
var Control_MonadPlus = require("Control.MonadPlus");
var Control_Plus = require("Control.Plus");
var Data_Functor_Invariant = require("Data.Functor.Invariant");
var Data_Monoid = require("Data.Monoid");
var Data_Tuple = require("Data.Tuple");
var $colon = $foreign.cons;
var $dot$dot = $foreign.range;
var zipWithA = function (__dict_Applicative_0) {
    return function (f) {
        return function (xs) {
            return function (ys) {
                return Data_Traversable.sequence(Data_Traversable.traversableArray)(__dict_Applicative_0)($foreign.zipWith(f)(xs)(ys));
            };
        };
    };
};
var zip = $foreign.zipWith(Data_Tuple.Tuple.create);
var updateAt = $foreign._updateAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var unzip = $foreign["uncons'"](function (_316) {
    return new Data_Tuple.Tuple([  ], [  ]);
})(function (_317) {
    return function (ts) {
        var _427 = unzip(ts);
        return new Data_Tuple.Tuple($colon(_317.value0)(_427.value0), $colon(_317.value1)(_427.value1));
    };
});
var uncons = $foreign["uncons'"](Prelude["const"](Data_Maybe.Nothing.value))(function (x) {
    return function (xs) {
        return new Data_Maybe.Just({
            head: x, 
            tail: xs
        });
    };
});
var take = $foreign.slice(0);
var tail = $foreign["uncons'"](Prelude["const"](Data_Maybe.Nothing.value))(function (_314) {
    return function (xs) {
        return new Data_Maybe.Just(xs);
    };
});
var span = function (p) {
    var go = function (__copy_acc) {
        return function (__copy_xs) {
            var acc = __copy_acc;
            var xs = __copy_xs;
            tco: while (true) {
                var _433 = uncons(xs);
                if (_433 instanceof Data_Maybe.Just && p(_433.value0.head)) {
                    var __tco_acc = $colon(_433.value0.head)(acc);
                    acc = __tco_acc;
                    xs = _433.value0.tail;
                    continue tco;
                };
                return {
                    init: $foreign.reverse(acc), 
                    rest: xs
                };
            };
        };
    };
    return go([  ]);
};
var takeWhile = function (p) {
    return function (xs) {
        return (span(p)(xs)).init;
    };
};
var sortBy = function (comp) {
    return function (xs) {
        var comp$prime = function (x) {
            return function (y) {
                var _437 = comp(x)(y);
                if (_437 instanceof Prelude.GT) {
                    return 1;
                };
                if (_437 instanceof Prelude.EQ) {
                    return 0;
                };
                if (_437 instanceof Prelude.LT) {
                    return Prelude.negate(Prelude.ringInt)(1);
                };
                throw new Error("Failed pattern match at /Users/simon/purescript-incremental/example/bower_components/purescript-arrays/src/Data/Array.purs line 390, column 3 - line 395, column 1: " + [ _437.constructor.name ]);
            };
        };
        return $foreign.sortImpl(comp$prime)(xs);
    };
};
var sort = function (__dict_Ord_1) {
    return function (xs) {
        return sortBy(Prelude.compare(__dict_Ord_1))(xs);
    };
};
var singleton = function (a) {
    return [ a ];
};
var replicateM = function (__dict_Monad_2) {
    return function (n) {
        return function (m) {
            if (Prelude["<"](Prelude.ordInt)(n)(1)) {
                return Prelude["return"](__dict_Monad_2["__superclass_Prelude.Applicative_0"]())([  ]);
            };
            if (Prelude.otherwise) {
                return Data_Traversable.sequence(Data_Traversable.traversableArray)(__dict_Monad_2["__superclass_Prelude.Applicative_0"]())($foreign.replicate(n)(m));
            };
            throw new Error("Failed pattern match at /Users/simon/purescript-incremental/example/bower_components/purescript-arrays/src/Data/Array.purs line 117, column 1 - line 118, column 1: " + [ n.constructor.name, m.constructor.name ]);
        };
    };
};
var $$null = function (xs) {
    return Prelude["=="](Prelude.eqInt)($foreign.length(xs))(0);
};
var nubBy = function (eq) {
    return function (xs) {
        var _440 = uncons(xs);
        if (_440 instanceof Data_Maybe.Just) {
            return $colon(_440.value0.head)(nubBy(eq)($foreign.filter(function (y) {
                return Prelude.not(Prelude.booleanAlgebraBoolean)(eq(_440.value0.head)(y));
            })(_440.value0.tail)));
        };
        if (_440 instanceof Data_Maybe.Nothing) {
            return [  ];
        };
        throw new Error("Failed pattern match: " + [ _440.constructor.name ]);
    };
};
var nub = function (__dict_Eq_3) {
    return nubBy(Prelude.eq(__dict_Eq_3));
};
var some = function (__dict_Alternative_4) {
    return function (__dict_Lazy_5) {
        return function (v) {
            return Prelude["<*>"]((__dict_Alternative_4["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())(Prelude["<$>"](((__dict_Alternative_4["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())["__superclass_Prelude.Functor_0"]())($colon)(v))(Control_Lazy.defer(__dict_Lazy_5)(function (_312) {
                return many(__dict_Alternative_4)(__dict_Lazy_5)(v);
            }));
        };
    };
};
var many = function (__dict_Alternative_6) {
    return function (__dict_Lazy_7) {
        return function (v) {
            return Control_Alt["<|>"]((__dict_Alternative_6["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())(some(__dict_Alternative_6)(__dict_Lazy_7)(v))(Prelude.pure(__dict_Alternative_6["__superclass_Prelude.Applicative_0"]())([  ]));
        };
    };
};
var insertAt = $foreign._insertAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var init = function (xs) {
    if ($$null(xs)) {
        return Data_Maybe.Nothing.value;
    };
    if (Prelude.otherwise) {
        return new Data_Maybe.Just($foreign.slice(Prelude.zero(Prelude.semiringInt))(Prelude["-"](Prelude.ringInt)($foreign.length(xs))(Prelude.one(Prelude.semiringInt)))(xs));
    };
    throw new Error("Failed pattern match at /Users/simon/purescript-incremental/example/bower_components/purescript-arrays/src/Data/Array.purs line 207, column 1 - line 208, column 1: " + [ xs.constructor.name ]);
};
var index = $foreign.indexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var $bang$bang = index;
var last = function (xs) {
    return $bang$bang(xs)(Prelude["-"](Prelude.ringInt)($foreign.length(xs))(1));
};
var modifyAt = function (i) {
    return function (f) {
        return function (xs) {
            var go = function (x) {
                return updateAt(i)(f(x))(xs);
            };
            return Data_Maybe.maybe(Data_Maybe.Nothing.value)(go)($bang$bang(xs)(i));
        };
    };
};
var head = $foreign["uncons'"](Prelude["const"](Data_Maybe.Nothing.value))(function (x) {
    return function (_313) {
        return new Data_Maybe.Just(x);
    };
});
var groupBy = function (op) {
    var go = function (__copy_acc) {
        return function (__copy_xs) {
            var acc = __copy_acc;
            var xs = __copy_xs;
            tco: while (true) {
                var _445 = uncons(xs);
                if (_445 instanceof Data_Maybe.Just) {
                    var sp = span(op(_445.value0.head))(_445.value0.tail);
                    var __tco_acc = $colon($colon(_445.value0.head)(sp.init))(acc);
                    acc = __tco_acc;
                    xs = sp.rest;
                    continue tco;
                };
                if (_445 instanceof Data_Maybe.Nothing) {
                    return $foreign.reverse(acc);
                };
                throw new Error("Failed pattern match at /Users/simon/purescript-incremental/example/bower_components/purescript-arrays/src/Data/Array.purs line 457, column 1 - line 458, column 1: " + [ _445.constructor.name ]);
            };
        };
    };
    return go([  ]);
};
var group = function (__dict_Eq_8) {
    return function (xs) {
        return groupBy(Prelude.eq(__dict_Eq_8))(xs);
    };
};
var group$prime = function (__dict_Ord_9) {
    return Prelude["<<<"](Prelude.semigroupoidFn)(group(__dict_Ord_9["__superclass_Prelude.Eq_0"]()))(sort(__dict_Ord_9));
};
var foldM = function (__dict_Monad_10) {
    return function (f) {
        return function (a) {
            return $foreign["uncons'"](function (_318) {
                return Prelude["return"](__dict_Monad_10["__superclass_Prelude.Applicative_0"]())(a);
            })(function (b) {
                return function (bs) {
                    return Prelude[">>="](__dict_Monad_10["__superclass_Prelude.Bind_1"]())(f(a)(b))(function (a$prime) {
                        return foldM(__dict_Monad_10)(f)(a$prime)(bs);
                    });
                };
            });
        };
    };
};
var findLastIndex = $foreign.findLastIndexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var insertBy = function (cmp) {
    return function (x) {
        return function (ys) {
            var i = Data_Maybe.maybe(0)(function (_0) {
                return Prelude["+"](Prelude.semiringInt)(_0)(1);
            })(findLastIndex(function (y) {
                return Prelude["=="](Prelude.eqOrdering)(cmp(x)(y))(Prelude.GT.value);
            })(ys));
            return Data_Maybe_Unsafe.fromJust(insertAt(i)(x)(ys));
        };
    };
};
var insert = function (__dict_Ord_11) {
    return insertBy(Prelude.compare(__dict_Ord_11));
};
var findIndex = $foreign.findIndexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var intersectBy = function (eq) {
    return function (xs) {
        return function (ys) {
            return $foreign.filter(function (x) {
                return Data_Maybe.isJust(findIndex(eq(x))(ys));
            })(xs);
        };
    };
};
var intersect = function (__dict_Eq_12) {
    return intersectBy(Prelude.eq(__dict_Eq_12));
};
var filterM = function (__dict_Monad_13) {
    return function (p) {
        return $foreign["uncons'"](function (_315) {
            return Prelude.pure(__dict_Monad_13["__superclass_Prelude.Applicative_0"]())([  ]);
        })(function (x) {
            return function (xs) {
                return Prelude.bind(__dict_Monad_13["__superclass_Prelude.Bind_1"]())(p(x))(function (_7) {
                    return Prelude.bind(__dict_Monad_13["__superclass_Prelude.Bind_1"]())(filterM(__dict_Monad_13)(p)(xs))(function (_6) {
                        return Prelude["return"](__dict_Monad_13["__superclass_Prelude.Applicative_0"]())((function () {
                            if (_7) {
                                return $colon(x)(_6);
                            };
                            if (!_7) {
                                return _6;
                            };
                            throw new Error("Failed pattern match: " + [ _7.constructor.name ]);
                        })());
                    });
                });
            };
        });
    };
};
var elemLastIndex = function (__dict_Eq_14) {
    return function (x) {
        return findLastIndex(function (_2) {
            return Prelude["=="](__dict_Eq_14)(_2)(x);
        });
    };
};
var elemIndex = function (__dict_Eq_15) {
    return function (x) {
        return findIndex(function (_1) {
            return Prelude["=="](__dict_Eq_15)(_1)(x);
        });
    };
};
var dropWhile = function (p) {
    return function (xs) {
        return (span(p)(xs)).rest;
    };
};
var deleteAt = $foreign._deleteAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var deleteBy = function (eq) {
    return function (x) {
        return function (_319) {
            if (_319.length === 0) {
                return [  ];
            };
            return Data_Maybe.maybe(_319)(function (i) {
                return Data_Maybe_Unsafe.fromJust(deleteAt(i)(_319));
            })(findIndex(eq(x))(_319));
        };
    };
};
var unionBy = function (eq) {
    return function (xs) {
        return function (ys) {
            return Prelude["++"](Prelude.semigroupArray)(xs)(Data_Foldable.foldl(Data_Foldable.foldableArray)(Prelude.flip(deleteBy(eq)))(nubBy(eq)(ys))(xs));
        };
    };
};
var union = function (__dict_Eq_16) {
    return unionBy(Prelude["=="](__dict_Eq_16));
};
var $$delete = function (__dict_Eq_17) {
    return deleteBy(Prelude.eq(__dict_Eq_17));
};
var $bslash$bslash = function (__dict_Eq_18) {
    return function (xs) {
        return function (ys) {
            if ($$null(xs)) {
                return [  ];
            };
            if (Prelude.otherwise) {
                return $foreign["uncons'"](Prelude["const"](xs))(function (y) {
                    return function (ys_2) {
                        return $bslash$bslash(__dict_Eq_18)($$delete(__dict_Eq_18)(y)(xs))(ys_2);
                    };
                })(ys);
            };
            throw new Error("Failed pattern match: " + [ xs.constructor.name, ys.constructor.name ]);
        };
    };
};
var concatMap = Prelude.flip(Prelude.bind(Prelude.bindArray));
var mapMaybe = function (f) {
    return concatMap(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Maybe.maybe([  ])(singleton))(f));
};
var catMaybes = mapMaybe(Prelude.id(Prelude.categoryFn));
var alterAt = function (i) {
    return function (f) {
        return function (xs) {
            var go = function (x) {
                var _457 = f(x);
                if (_457 instanceof Data_Maybe.Nothing) {
                    return deleteAt(i)(xs);
                };
                if (_457 instanceof Data_Maybe.Just) {
                    return updateAt(i)(_457.value0)(xs);
                };
                throw new Error("Failed pattern match at /Users/simon/purescript-incremental/example/bower_components/purescript-arrays/src/Data/Array.purs line 330, column 3 - line 339, column 1: " + [ _457.constructor.name ]);
            };
            return Data_Maybe.maybe(Data_Maybe.Nothing.value)(go)($bang$bang(xs)(i));
        };
    };
};
module.exports = {
    foldM: foldM, 
    unzip: unzip, 
    zip: zip, 
    zipWithA: zipWithA, 
    intersectBy: intersectBy, 
    intersect: intersect, 
    "\\\\": $bslash$bslash, 
    deleteBy: deleteBy, 
    "delete": $$delete, 
    unionBy: unionBy, 
    union: union, 
    nubBy: nubBy, 
    nub: nub, 
    groupBy: groupBy, 
    "group'": group$prime, 
    group: group, 
    span: span, 
    dropWhile: dropWhile, 
    takeWhile: takeWhile, 
    take: take, 
    sortBy: sortBy, 
    sort: sort, 
    catMaybes: catMaybes, 
    mapMaybe: mapMaybe, 
    filterM: filterM, 
    concatMap: concatMap, 
    alterAt: alterAt, 
    modifyAt: modifyAt, 
    updateAt: updateAt, 
    deleteAt: deleteAt, 
    insertAt: insertAt, 
    findLastIndex: findLastIndex, 
    findIndex: findIndex, 
    elemLastIndex: elemLastIndex, 
    elemIndex: elemIndex, 
    index: index, 
    "!!": $bang$bang, 
    uncons: uncons, 
    init: init, 
    tail: tail, 
    last: last, 
    head: head, 
    insertBy: insertBy, 
    insert: insert, 
    ":": $colon, 
    "null": $$null, 
    many: many, 
    some: some, 
    replicateM: replicateM, 
    "..": $dot$dot, 
    singleton: singleton, 
    zipWith: $foreign.zipWith, 
    drop: $foreign.drop, 
    slice: $foreign.slice, 
    filter: $foreign.filter, 
    concat: $foreign.concat, 
    reverse: $foreign.reverse, 
    snoc: $foreign.snoc, 
    cons: $foreign.cons, 
    length: $foreign.length, 
    replicate: $foreign.replicate, 
    range: $foreign.range
};

},{"./foreign":"/Users/simon/purescript-incremental/example/output/Data.Array/foreign.js","Control.Alt":"/Users/simon/purescript-incremental/example/output/Control.Alt/index.js","Control.Alternative":"/Users/simon/purescript-incremental/example/output/Control.Alternative/index.js","Control.Lazy":"/Users/simon/purescript-incremental/example/output/Control.Lazy/index.js","Control.MonadPlus":"/Users/simon/purescript-incremental/example/output/Control.MonadPlus/index.js","Control.Plus":"/Users/simon/purescript-incremental/example/output/Control.Plus/index.js","Data.Foldable":"/Users/simon/purescript-incremental/example/output/Data.Foldable/index.js","Data.Functor.Invariant":"/Users/simon/purescript-incremental/example/output/Data.Functor.Invariant/index.js","Data.Maybe":"/Users/simon/purescript-incremental/example/output/Data.Maybe/index.js","Data.Maybe.Unsafe":"/Users/simon/purescript-incremental/example/output/Data.Maybe.Unsafe/index.js","Data.Monoid":"/Users/simon/purescript-incremental/example/output/Data.Monoid/index.js","Data.Traversable":"/Users/simon/purescript-incremental/example/output/Data.Traversable/index.js","Data.Tuple":"/Users/simon/purescript-incremental/example/output/Data.Tuple/index.js","Prelude":"/Users/simon/purescript-incremental/example/output/Prelude/index.js"}],"/Users/simon/purescript-incremental/example/output/Data.Bifoldable/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Control_Apply = require("Control.Apply");
var Data_Monoid_Disj = require("Data.Monoid.Disj");
var Data_Monoid_Conj = require("Data.Monoid.Conj");
var Data_Monoid = require("Data.Monoid");
var Bifoldable = function (bifoldMap, bifoldl, bifoldr) {
    this.bifoldMap = bifoldMap;
    this.bifoldl = bifoldl;
    this.bifoldr = bifoldr;
};
var bifoldr = function (dict) {
    return dict.bifoldr;
};
var bitraverse_ = function (__dict_Bifoldable_0) {
    return function (__dict_Applicative_1) {
        return function (f) {
            return function (g) {
                return bifoldr(__dict_Bifoldable_0)(Prelude["<<<"](Prelude.semigroupoidFn)(Control_Apply["*>"](__dict_Applicative_1["__superclass_Prelude.Apply_0"]()))(f))(Prelude["<<<"](Prelude.semigroupoidFn)(Control_Apply["*>"](__dict_Applicative_1["__superclass_Prelude.Apply_0"]()))(g))(Prelude.pure(__dict_Applicative_1)(Prelude.unit));
            };
        };
    };
};
var bifor_ = function (__dict_Bifoldable_2) {
    return function (__dict_Applicative_3) {
        return function (t) {
            return function (f) {
                return function (g) {
                    return bitraverse_(__dict_Bifoldable_2)(__dict_Applicative_3)(f)(g)(t);
                };
            };
        };
    };
};
var bisequence_ = function (__dict_Bifoldable_4) {
    return function (__dict_Applicative_5) {
        return bitraverse_(__dict_Bifoldable_4)(__dict_Applicative_5)(Prelude.id(Prelude.categoryFn))(Prelude.id(Prelude.categoryFn));
    };
};
var bifoldl = function (dict) {
    return dict.bifoldl;
};
var bifoldMap = function (dict) {
    return dict.bifoldMap;
};
var bifold = function (__dict_Bifoldable_6) {
    return function (__dict_Monoid_7) {
        return bifoldMap(__dict_Bifoldable_6)(__dict_Monoid_7)(Prelude.id(Prelude.categoryFn))(Prelude.id(Prelude.categoryFn));
    };
};
var biany = function (__dict_Bifoldable_8) {
    return function (__dict_BooleanAlgebra_9) {
        return function (p) {
            return function (q) {
                return Prelude["<<<"](Prelude.semigroupoidFn)(Data_Monoid_Disj.runDisj)(bifoldMap(__dict_Bifoldable_8)(Data_Monoid_Disj.monoidDisj(__dict_BooleanAlgebra_9))(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Monoid_Disj.Disj)(p))(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Monoid_Disj.Disj)(q)));
            };
        };
    };
};
var biall = function (__dict_Bifoldable_10) {
    return function (__dict_BooleanAlgebra_11) {
        return function (p) {
            return function (q) {
                return Prelude["<<<"](Prelude.semigroupoidFn)(Data_Monoid_Conj.runConj)(bifoldMap(__dict_Bifoldable_10)(Data_Monoid_Conj.monoidConj(__dict_BooleanAlgebra_11))(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Monoid_Conj.Conj)(p))(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Monoid_Conj.Conj)(q)));
            };
        };
    };
};
module.exports = {
    Bifoldable: Bifoldable, 
    biall: biall, 
    biany: biany, 
    bisequence_: bisequence_, 
    bifor_: bifor_, 
    bitraverse_: bitraverse_, 
    bifold: bifold, 
    bifoldMap: bifoldMap, 
    bifoldl: bifoldl, 
    bifoldr: bifoldr
};

},{"Control.Apply":"/Users/simon/purescript-incremental/example/output/Control.Apply/index.js","Data.Monoid":"/Users/simon/purescript-incremental/example/output/Data.Monoid/index.js","Data.Monoid.Conj":"/Users/simon/purescript-incremental/example/output/Data.Monoid.Conj/index.js","Data.Monoid.Disj":"/Users/simon/purescript-incremental/example/output/Data.Monoid.Disj/index.js","Prelude":"/Users/simon/purescript-incremental/example/output/Prelude/index.js"}],"/Users/simon/purescript-incremental/example/output/Data.Bifunctor/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Bifunctor = function (bimap) {
    this.bimap = bimap;
};
var bimap = function (dict) {
    return dict.bimap;
};
var lmap = function (__dict_Bifunctor_0) {
    return function (f) {
        return bimap(__dict_Bifunctor_0)(f)(Prelude.id(Prelude.categoryFn));
    };
};
var rmap = function (__dict_Bifunctor_1) {
    return bimap(__dict_Bifunctor_1)(Prelude.id(Prelude.categoryFn));
};
module.exports = {
    Bifunctor: Bifunctor, 
    rmap: rmap, 
    lmap: lmap, 
    bimap: bimap
};

},{"Prelude":"/Users/simon/purescript-incremental/example/output/Prelude/index.js"}],"/Users/simon/purescript-incremental/example/output/Data.Bitraversable/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Bifoldable = require("Data.Bifoldable");
var Data_Bifunctor = require("Data.Bifunctor");
var Bitraversable = function (__superclass_Data$dotBifoldable$dotBifoldable_1, __superclass_Data$dotBifunctor$dotBifunctor_0, bisequence, bitraverse) {
    this["__superclass_Data.Bifoldable.Bifoldable_1"] = __superclass_Data$dotBifoldable$dotBifoldable_1;
    this["__superclass_Data.Bifunctor.Bifunctor_0"] = __superclass_Data$dotBifunctor$dotBifunctor_0;
    this.bisequence = bisequence;
    this.bitraverse = bitraverse;
};
var bitraverse = function (dict) {
    return dict.bitraverse;
};
var bisequence = function (dict) {
    return dict.bisequence;
};
var bifor = function (__dict_Bitraversable_0) {
    return function (__dict_Applicative_1) {
        return function (t) {
            return function (f) {
                return function (g) {
                    return bitraverse(__dict_Bitraversable_0)(__dict_Applicative_1)(f)(g)(t);
                };
            };
        };
    };
};
module.exports = {
    Bitraversable: Bitraversable, 
    bifor: bifor, 
    bisequence: bisequence, 
    bitraverse: bitraverse
};

},{"Data.Bifoldable":"/Users/simon/purescript-incremental/example/output/Data.Bifoldable/index.js","Data.Bifunctor":"/Users/simon/purescript-incremental/example/output/Data.Bifunctor/index.js","Prelude":"/Users/simon/purescript-incremental/example/output/Prelude/index.js"}],"/Users/simon/purescript-incremental/example/output/Data.Char/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.Char

exports.toString = function (c) {
  return c;
};

exports.toCharCode = function (c) {
  return c.charCodeAt(0);
};

exports.fromCharCode = function (c) {
  return String.fromCharCode(c);
};

exports.toLower = function (c) {
  return c.toLowerCase();
};

exports.toUpper = function (c) {
  return c.toUpperCase();
};

},{}],"/Users/simon/purescript-incremental/example/output/Data.Char/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
module.exports = {
    toUpper: $foreign.toUpper, 
    toLower: $foreign.toLower, 
    toCharCode: $foreign.toCharCode, 
    fromCharCode: $foreign.fromCharCode, 
    toString: $foreign.toString
};

},{"./foreign":"/Users/simon/purescript-incremental/example/output/Data.Char/foreign.js","Prelude":"/Users/simon/purescript-incremental/example/output/Prelude/index.js"}],"/Users/simon/purescript-incremental/example/output/Data.Either/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Monoid = require("Data.Monoid");
var Control_Alt = require("Control.Alt");
var Control_Extend = require("Control.Extend");
var Data_Bifoldable = require("Data.Bifoldable");
var Data_Bifunctor = require("Data.Bifunctor");
var Data_Bitraversable = require("Data.Bitraversable");
var Data_Foldable = require("Data.Foldable");
var Data_Traversable = require("Data.Traversable");
var Left = (function () {
    function Left(value0) {
        this.value0 = value0;
    };
    Left.create = function (value0) {
        return new Left(value0);
    };
    return Left;
})();
var Right = (function () {
    function Right(value0) {
        this.value0 = value0;
    };
    Right.create = function (value0) {
        return new Right(value0);
    };
    return Right;
})();
var showEither = function (__dict_Show_2) {
    return function (__dict_Show_3) {
        return new Prelude.Show(function (_240) {
            if (_240 instanceof Left) {
                return "Left (" + (Prelude.show(__dict_Show_2)(_240.value0) + ")");
            };
            if (_240 instanceof Right) {
                return "Right (" + (Prelude.show(__dict_Show_3)(_240.value0) + ")");
            };
            throw new Error("Failed pattern match at /Users/simon/purescript-incremental/example/bower_components/purescript-either/src/Data/Either.purs line 174, column 1 - line 181, column 1: " + [ _240.constructor.name ]);
        });
    };
};
var functorEither = new Prelude.Functor(function (f) {
    return function (_235) {
        if (_235 instanceof Left) {
            return new Left(_235.value0);
        };
        if (_235 instanceof Right) {
            return new Right(f(_235.value0));
        };
        throw new Error("Failed pattern match at /Users/simon/purescript-incremental/example/bower_components/purescript-either/src/Data/Either.purs line 52, column 1 - line 56, column 1: " + [ f.constructor.name, _235.constructor.name ]);
    };
});
var foldableEither = new Data_Foldable.Foldable(function (__dict_Monoid_8) {
    return function (f) {
        return function (_247) {
            if (_247 instanceof Left) {
                return Data_Monoid.mempty(__dict_Monoid_8);
            };
            if (_247 instanceof Right) {
                return f(_247.value0);
            };
            throw new Error("Failed pattern match at /Users/simon/purescript-incremental/example/bower_components/purescript-either/src/Data/Either.purs line 201, column 1 - line 209, column 1: " + [ f.constructor.name, _247.constructor.name ]);
        };
    };
}, function (f) {
    return function (z) {
        return function (_246) {
            if (_246 instanceof Left) {
                return z;
            };
            if (_246 instanceof Right) {
                return f(z)(_246.value0);
            };
            throw new Error("Failed pattern match at /Users/simon/purescript-incremental/example/bower_components/purescript-either/src/Data/Either.purs line 201, column 1 - line 209, column 1: " + [ f.constructor.name, z.constructor.name, _246.constructor.name ]);
        };
    };
}, function (f) {
    return function (z) {
        return function (_245) {
            if (_245 instanceof Left) {
                return z;
            };
            if (_245 instanceof Right) {
                return f(_245.value0)(z);
            };
            throw new Error("Failed pattern match at /Users/simon/purescript-incremental/example/bower_components/purescript-either/src/Data/Either.purs line 201, column 1 - line 209, column 1: " + [ f.constructor.name, z.constructor.name, _245.constructor.name ]);
        };
    };
});
var traversableEither = new Data_Traversable.Traversable(function () {
    return foldableEither;
}, function () {
    return functorEither;
}, function (__dict_Applicative_1) {
    return function (_252) {
        if (_252 instanceof Left) {
            return Prelude.pure(__dict_Applicative_1)(new Left(_252.value0));
        };
        if (_252 instanceof Right) {
            return Prelude["<$>"]((__dict_Applicative_1["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Right.create)(_252.value0);
        };
        throw new Error("Failed pattern match at /Users/simon/purescript-incremental/example/bower_components/purescript-either/src/Data/Either.purs line 217, column 1 - line 223, column 1: " + [ _252.constructor.name ]);
    };
}, function (__dict_Applicative_0) {
    return function (f) {
        return function (_251) {
            if (_251 instanceof Left) {
                return Prelude.pure(__dict_Applicative_0)(new Left(_251.value0));
            };
            if (_251 instanceof Right) {
                return Prelude["<$>"]((__dict_Applicative_0["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Right.create)(f(_251.value0));
            };
            throw new Error("Failed pattern match at /Users/simon/purescript-incremental/example/bower_components/purescript-either/src/Data/Either.purs line 217, column 1 - line 223, column 1: " + [ f.constructor.name, _251.constructor.name ]);
        };
    };
});
var extendEither = new Control_Extend.Extend(function () {
    return functorEither;
}, function (f) {
    return function (_239) {
        if (_239 instanceof Left) {
            return new Left(_239.value0);
        };
        return new Right(f(_239));
    };
});
var eqEither = function (__dict_Eq_9) {
    return function (__dict_Eq_10) {
        return new Prelude.Eq(function (_241) {
            return function (_242) {
                if (_241 instanceof Left && _242 instanceof Left) {
                    return Prelude["=="](__dict_Eq_9)(_241.value0)(_242.value0);
                };
                if (_241 instanceof Right && _242 instanceof Right) {
                    return Prelude["=="](__dict_Eq_10)(_241.value0)(_242.value0);
                };
                return false;
            };
        });
    };
};
var ordEither = function (__dict_Ord_6) {
    return function (__dict_Ord_7) {
        return new Prelude.Ord(function () {
            return eqEither(__dict_Ord_6["__superclass_Prelude.Eq_0"]())(__dict_Ord_7["__superclass_Prelude.Eq_0"]());
        }, function (_243) {
            return function (_244) {
                if (_243 instanceof Left && _244 instanceof Left) {
                    return Prelude.compare(__dict_Ord_6)(_243.value0)(_244.value0);
                };
                if (_243 instanceof Right && _244 instanceof Right) {
                    return Prelude.compare(__dict_Ord_7)(_243.value0)(_244.value0);
                };
                if (_243 instanceof Left) {
                    return Prelude.LT.value;
                };
                if (_244 instanceof Left) {
                    return Prelude.GT.value;
                };
                throw new Error("Failed pattern match at /Users/simon/purescript-incremental/example/bower_components/purescript-either/src/Data/Either.purs line 191, column 1 - line 197, column 1: " + [ _243.constructor.name, _244.constructor.name ]);
            };
        });
    };
};
var either = function (f) {
    return function (g) {
        return function (_234) {
            if (_234 instanceof Left) {
                return f(_234.value0);
            };
            if (_234 instanceof Right) {
                return g(_234.value0);
            };
            throw new Error("Failed pattern match at /Users/simon/purescript-incremental/example/bower_components/purescript-either/src/Data/Either.purs line 28, column 1 - line 29, column 1: " + [ f.constructor.name, g.constructor.name, _234.constructor.name ]);
        };
    };
};
var isLeft = either(Prelude["const"](true))(Prelude["const"](false));
var isRight = either(Prelude["const"](false))(Prelude["const"](true));
var boundedEither = function (__dict_Bounded_11) {
    return function (__dict_Bounded_12) {
        return new Prelude.Bounded(new Left(Prelude.bottom(__dict_Bounded_11)), new Right(Prelude.top(__dict_Bounded_12)));
    };
};
var bifunctorEither = new Data_Bifunctor.Bifunctor(function (f) {
    return function (g) {
        return function (_236) {
            if (_236 instanceof Left) {
                return new Left(f(_236.value0));
            };
            if (_236 instanceof Right) {
                return new Right(g(_236.value0));
            };
            throw new Error("Failed pattern match at /Users/simon/purescript-incremental/example/bower_components/purescript-either/src/Data/Either.purs line 56, column 1 - line 92, column 1: " + [ f.constructor.name, g.constructor.name, _236.constructor.name ]);
        };
    };
});
var bifoldableEither = new Data_Bifoldable.Bifoldable(function (__dict_Monoid_15) {
    return function (f) {
        return function (g) {
            return function (_250) {
                if (_250 instanceof Left) {
                    return f(_250.value0);
                };
                if (_250 instanceof Right) {
                    return g(_250.value0);
                };
                throw new Error("Failed pattern match at /Users/simon/purescript-incremental/example/bower_components/purescript-either/src/Data/Either.purs line 209, column 1 - line 217, column 1: " + [ f.constructor.name, g.constructor.name, _250.constructor.name ]);
            };
        };
    };
}, function (f) {
    return function (g) {
        return function (z) {
            return function (_249) {
                if (_249 instanceof Left) {
                    return f(z)(_249.value0);
                };
                if (_249 instanceof Right) {
                    return g(z)(_249.value0);
                };
                throw new Error("Failed pattern match at /Users/simon/purescript-incremental/example/bower_components/purescript-either/src/Data/Either.purs line 209, column 1 - line 217, column 1: " + [ f.constructor.name, g.constructor.name, z.constructor.name, _249.constructor.name ]);
            };
        };
    };
}, function (f) {
    return function (g) {
        return function (z) {
            return function (_248) {
                if (_248 instanceof Left) {
                    return f(_248.value0)(z);
                };
                if (_248 instanceof Right) {
                    return g(_248.value0)(z);
                };
                throw new Error("Failed pattern match at /Users/simon/purescript-incremental/example/bower_components/purescript-either/src/Data/Either.purs line 209, column 1 - line 217, column 1: " + [ f.constructor.name, g.constructor.name, z.constructor.name, _248.constructor.name ]);
            };
        };
    };
});
var bitraversableEither = new Data_Bitraversable.Bitraversable(function () {
    return bifoldableEither;
}, function () {
    return bifunctorEither;
}, function (__dict_Applicative_14) {
    return function (_254) {
        if (_254 instanceof Left) {
            return Prelude["<$>"]((__dict_Applicative_14["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Left.create)(_254.value0);
        };
        if (_254 instanceof Right) {
            return Prelude["<$>"]((__dict_Applicative_14["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Right.create)(_254.value0);
        };
        throw new Error("Failed pattern match at /Users/simon/purescript-incremental/example/bower_components/purescript-either/src/Data/Either.purs line 223, column 1 - line 229, column 1: " + [ _254.constructor.name ]);
    };
}, function (__dict_Applicative_13) {
    return function (f) {
        return function (g) {
            return function (_253) {
                if (_253 instanceof Left) {
                    return Prelude["<$>"]((__dict_Applicative_13["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Left.create)(f(_253.value0));
                };
                if (_253 instanceof Right) {
                    return Prelude["<$>"]((__dict_Applicative_13["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Right.create)(g(_253.value0));
                };
                throw new Error("Failed pattern match at /Users/simon/purescript-incremental/example/bower_components/purescript-either/src/Data/Either.purs line 223, column 1 - line 229, column 1: " + [ f.constructor.name, g.constructor.name, _253.constructor.name ]);
            };
        };
    };
});
var applyEither = new Prelude.Apply(function () {
    return functorEither;
}, function (_237) {
    return function (r) {
        if (_237 instanceof Left) {
            return new Left(_237.value0);
        };
        if (_237 instanceof Right) {
            return Prelude["<$>"](functorEither)(_237.value0)(r);
        };
        throw new Error("Failed pattern match at /Users/simon/purescript-incremental/example/bower_components/purescript-either/src/Data/Either.purs line 92, column 1 - line 116, column 1: " + [ _237.constructor.name, r.constructor.name ]);
    };
});
var bindEither = new Prelude.Bind(function () {
    return applyEither;
}, either(function (e) {
    return function (_233) {
        return new Left(e);
    };
})(function (a) {
    return function (f) {
        return f(a);
    };
}));
var semigroupEither = function (__dict_Semigroup_5) {
    return new Prelude.Semigroup(function (x) {
        return function (y) {
            return Prelude["<*>"](applyEither)(Prelude["<$>"](functorEither)(Prelude.append(__dict_Semigroup_5))(x))(y);
        };
    });
};
var semiringEither = function (__dict_Semiring_4) {
    return new Prelude.Semiring(function (x) {
        return function (y) {
            return Prelude["<*>"](applyEither)(Prelude["<$>"](functorEither)(Prelude.add(__dict_Semiring_4))(x))(y);
        };
    }, function (x) {
        return function (y) {
            return Prelude["<*>"](applyEither)(Prelude["<$>"](functorEither)(Prelude.mul(__dict_Semiring_4))(x))(y);
        };
    }, new Right(Prelude.one(__dict_Semiring_4)), new Right(Prelude.zero(__dict_Semiring_4)));
};
var applicativeEither = new Prelude.Applicative(function () {
    return applyEither;
}, Right.create);
var monadEither = new Prelude.Monad(function () {
    return applicativeEither;
}, function () {
    return bindEither;
});
var altEither = new Control_Alt.Alt(function () {
    return functorEither;
}, function (_238) {
    return function (r) {
        if (_238 instanceof Left) {
            return r;
        };
        return _238;
    };
});
module.exports = {
    Left: Left, 
    Right: Right, 
    isRight: isRight, 
    isLeft: isLeft, 
    either: either, 
    functorEither: functorEither, 
    bifunctorEither: bifunctorEither, 
    applyEither: applyEither, 
    applicativeEither: applicativeEither, 
    altEither: altEither, 
    bindEither: bindEither, 
    monadEither: monadEither, 
    extendEither: extendEither, 
    showEither: showEither, 
    eqEither: eqEither, 
    ordEither: ordEither, 
    boundedEither: boundedEither, 
    foldableEither: foldableEither, 
    bifoldableEither: bifoldableEither, 
    traversableEither: traversableEither, 
    bitraversableEither: bitraversableEither, 
    semiringEither: semiringEither, 
    semigroupEither: semigroupEither
};

},{"Control.Alt":"/Users/simon/purescript-incremental/example/output/Control.Alt/index.js","Control.Extend":"/Users/simon/purescript-incremental/example/output/Control.Extend/index.js","Data.Bifoldable":"/Users/simon/purescript-incremental/example/output/Data.Bifoldable/index.js","Data.Bifunctor":"/Users/simon/purescript-incremental/example/output/Data.Bifunctor/index.js","Data.Bitraversable":"/Users/simon/purescript-incremental/example/output/Data.Bitraversable/index.js","Data.Foldable":"/Users/simon/purescript-incremental/example/output/Data.Foldable/index.js","Data.Monoid":"/Users/simon/purescript-incremental/example/output/Data.Monoid/index.js","Data.Traversable":"/Users/simon/purescript-incremental/example/output/Data.Traversable/index.js","Prelude":"/Users/simon/purescript-incremental/example/output/Prelude/index.js"}],"/Users/simon/purescript-incremental/example/output/Data.Enum/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");
var Data_Maybe_Unsafe = require("Data.Maybe.Unsafe");
var Data_Unfoldable = require("Data.Unfoldable");
var Data_Char = require("Data.Char");
var Data_Either = require("Data.Either");
var Data_Tuple = require("Data.Tuple");
var Cardinality = function (x) {
    return x;
};
var Enum = function (__superclass_Prelude$dotBounded_0, cardinality, fromEnum, pred, succ, toEnum) {
    this["__superclass_Prelude.Bounded_0"] = __superclass_Prelude$dotBounded_0;
    this.cardinality = cardinality;
    this.fromEnum = fromEnum;
    this.pred = pred;
    this.succ = succ;
    this.toEnum = toEnum;
};
var toEnum = function (dict) {
    return dict.toEnum;
};
var succ = function (dict) {
    return dict.succ;
};
var runCardinality = function (_329) {
    return _329;
};
var tupleCardinality = function (__dict_Enum_0) {
    return function (__dict_Enum_1) {
        return function (l) {
            return function (r) {
                return Cardinality(Prelude["*"](Prelude.semiringInt)(runCardinality(l))(runCardinality(r)));
            };
        };
    };
};
var tupleToEnum = function (__dict_Enum_2) {
    return function (__dict_Enum_3) {
        return function (cardb) {
            return function (n) {
                return Prelude["<*>"](Data_Maybe.applyMaybe)(Prelude["<$>"](Data_Maybe.functorMaybe)(Data_Tuple.Tuple.create)(toEnum(__dict_Enum_2)(Prelude["/"](Prelude.moduloSemiringInt)(n)(runCardinality(cardb)))))(toEnum(__dict_Enum_3)(Prelude.mod(Prelude.moduloSemiringInt)(n)(runCardinality(cardb))));
            };
        };
    };
};
var pred = function (dict) {
    return dict.pred;
};
var maybeCardinality = function (__dict_Enum_4) {
    return function (c) {
        return Cardinality(Prelude["+"](Prelude.semiringInt)(Prelude.one(Prelude.semiringInt))(runCardinality(c)));
    };
};
var maybeToEnum = function (__dict_Enum_5) {
    return function (carda) {
        return function (n) {
            if (Prelude["<="](Prelude.ordInt)(n)(runCardinality(maybeCardinality(__dict_Enum_5)(carda)))) {
                var _433 = Prelude["=="](Prelude.eqInt)(n)(Prelude.zero(Prelude.semiringInt));
                if (_433) {
                    return Data_Maybe.Just.create(Data_Maybe.Nothing.value);
                };
                if (!_433) {
                    return Data_Maybe.Just.create(toEnum(__dict_Enum_5)(Prelude["-"](Prelude.ringInt)(n)(Prelude.one(Prelude.semiringInt))));
                };
                throw new Error("Failed pattern match at /Users/simon/purescript-incremental/example/bower_components/purescript-enums/src/Data/Enum.purs line 138, column 1 - line 139, column 1: " + [ _433.constructor.name ]);
            };
            return Data_Maybe.Nothing.value;
        };
    };
};
var intStepFromTo = function (step) {
    return function (from) {
        return function (to) {
            return Data_Unfoldable.unfoldr(Data_Unfoldable.unfoldableArray)(function (e) {
                var _434 = Prelude["<="](Prelude.ordInt)(e)(to);
                if (_434) {
                    return Data_Maybe.Just.create(new Data_Tuple.Tuple(e, Prelude["+"](Prelude.semiringInt)(e)(step)));
                };
                if (!_434) {
                    return Data_Maybe.Nothing.value;
                };
                throw new Error("Failed pattern match at /Users/simon/purescript-incremental/example/bower_components/purescript-enums/src/Data/Enum.purs line 103, column 1 - line 104, column 1: " + [ _434.constructor.name ]);
            })(from);
        };
    };
};
var intFromTo = intStepFromTo(Prelude.one(Prelude.semiringInt));
var fromEnum = function (dict) {
    return dict.fromEnum;
};
var tupleFromEnum = function (__dict_Enum_6) {
    return function (__dict_Enum_7) {
        return function (cardb) {
            return function (_332) {
                return Prelude["+"](Prelude.semiringInt)(Prelude["*"](Prelude.semiringInt)(fromEnum(__dict_Enum_6)(_332.value0))(runCardinality(cardb)))(fromEnum(__dict_Enum_7)(_332.value1));
            };
        };
    };
};
var enumFromTo = function (__dict_Enum_8) {
    return function (a) {
        return function (b) {
            var b$prime = fromEnum(__dict_Enum_8)(b);
            var a$prime = fromEnum(__dict_Enum_8)(a);
            return Prelude["<$>"](Prelude.functorArray)(Prelude[">>>"](Prelude.semigroupoidFn)(toEnum(__dict_Enum_8))(Data_Maybe_Unsafe.fromJust))(intFromTo(a$prime)(b$prime));
        };
    };
};
var enumFromThenTo = function (__dict_Enum_9) {
    return function (a) {
        return function (b) {
            return function (c) {
                var c$prime = fromEnum(__dict_Enum_9)(c);
                var b$prime = fromEnum(__dict_Enum_9)(b);
                var a$prime = fromEnum(__dict_Enum_9)(a);
                return Prelude["<$>"](Prelude.functorArray)(Prelude[">>>"](Prelude.semigroupoidFn)(toEnum(__dict_Enum_9))(Data_Maybe_Unsafe.fromJust))(intStepFromTo(Prelude["-"](Prelude.ringInt)(b$prime)(a$prime))(a$prime)(c$prime));
            };
        };
    };
};
var eitherFromEnum = function (__dict_Enum_10) {
    return function (__dict_Enum_11) {
        return function (carda) {
            return function (_333) {
                if (_333 instanceof Data_Either.Left) {
                    return fromEnum(__dict_Enum_10)(_333.value0);
                };
                if (_333 instanceof Data_Either.Right) {
                    return Prelude["+"](Prelude.semiringInt)(fromEnum(__dict_Enum_11)(_333.value0))(runCardinality(carda));
                };
                throw new Error("Failed pattern match at /Users/simon/purescript-incremental/example/bower_components/purescript-enums/src/Data/Enum.purs line 197, column 1 - line 198, column 1: " + [ carda.constructor.name, _333.constructor.name ]);
            };
        };
    };
};
var eitherCardinality = function (__dict_Enum_12) {
    return function (__dict_Enum_13) {
        return function (l) {
            return function (r) {
                return Cardinality(Prelude["+"](Prelude.semiringInt)(runCardinality(l))(runCardinality(r)));
            };
        };
    };
};
var eitherToEnum = function (__dict_Enum_14) {
    return function (__dict_Enum_15) {
        return function (carda) {
            return function (cardb) {
                return function (n) {
                    var _443 = Prelude["&&"](Prelude.booleanAlgebraBoolean)(Prelude[">="](Prelude.ordInt)(n)(Prelude.zero(Prelude.semiringInt)))(Prelude["<"](Prelude.ordInt)(n)(runCardinality(carda)));
                    if (_443) {
                        return Prelude["<$>"](Data_Maybe.functorMaybe)(Data_Either.Left.create)(toEnum(__dict_Enum_14)(n));
                    };
                    if (!_443) {
                        var _444 = Prelude["&&"](Prelude.booleanAlgebraBoolean)(Prelude[">="](Prelude.ordInt)(n)(runCardinality(carda)))(Prelude["<"](Prelude.ordInt)(n)(runCardinality(eitherCardinality(__dict_Enum_14)(__dict_Enum_15)(carda)(cardb))));
                        if (_444) {
                            return Prelude["<$>"](Data_Maybe.functorMaybe)(Data_Either.Right.create)(toEnum(__dict_Enum_15)(Prelude["-"](Prelude.ringInt)(n)(runCardinality(carda))));
                        };
                        if (!_444) {
                            return Data_Maybe.Nothing.value;
                        };
                        throw new Error("Failed pattern match: " + [ _444.constructor.name ]);
                    };
                    throw new Error("Failed pattern match at /Users/simon/purescript-incremental/example/bower_components/purescript-enums/src/Data/Enum.purs line 189, column 1 - line 190, column 1: " + [ _443.constructor.name ]);
                };
            };
        };
    };
};
var defaultToEnum = function (succ$prime) {
    return function (bottom$prime) {
        return function (n) {
            if (Prelude["<"](Prelude.ordInt)(n)(Prelude.zero(Prelude.semiringInt))) {
                return Data_Maybe.Nothing.value;
            };
            if (Prelude["=="](Prelude.eqInt)(n)(Prelude.zero(Prelude.semiringInt))) {
                return new Data_Maybe.Just(bottom$prime);
            };
            if (Prelude.otherwise) {
                return Prelude[">>="](Data_Maybe.bindMaybe)(defaultToEnum(succ$prime)(bottom$prime)(Prelude["-"](Prelude.ringInt)(n)(Prelude.one(Prelude.semiringInt))))(succ$prime);
            };
            throw new Error("Failed pattern match: " + [ succ$prime.constructor.name, bottom$prime.constructor.name, n.constructor.name ]);
        };
    };
};
var defaultSucc = function (toEnum$prime) {
    return function (fromEnum$prime) {
        return function (a) {
            return toEnum$prime(Prelude["+"](Prelude.semiringInt)(fromEnum$prime(a))(Prelude.one(Prelude.semiringInt)));
        };
    };
};
var defaultPred = function (toEnum$prime) {
    return function (fromEnum$prime) {
        return function (a) {
            return toEnum$prime(Prelude["-"](Prelude.ringInt)(fromEnum$prime(a))(Prelude.one(Prelude.semiringInt)));
        };
    };
};
var defaultFromEnum = function (pred$prime) {
    return function (e) {
        return Data_Maybe.maybe(Prelude.zero(Prelude.semiringInt))(function (prd) {
            return Prelude["+"](Prelude.semiringInt)(defaultFromEnum(pred$prime)(prd))(Prelude.one(Prelude.semiringInt));
        })(pred$prime(e));
    };
};
var charToEnum = function (n) {
    if (Prelude["&&"](Prelude.booleanAlgebraBoolean)(Prelude[">="](Prelude.ordInt)(n)(0))(Prelude["<="](Prelude.ordInt)(n)(65535))) {
        return Data_Maybe.Just.create(Data_Char.fromCharCode(n));
    };
    return Data_Maybe.Nothing.value;
};
var charFromEnum = Data_Char.toCharCode;
var enumChar = new Enum(function () {
    return Prelude.boundedChar;
}, 65536, charFromEnum, defaultPred(charToEnum)(charFromEnum), defaultSucc(charToEnum)(charFromEnum), charToEnum);
var cardinality = function (dict) {
    return dict.cardinality;
};
var enumEither = function (__dict_Enum_16) {
    return function (__dict_Enum_17) {
        return new Enum(function () {
            return Data_Either.boundedEither(__dict_Enum_16["__superclass_Prelude.Bounded_0"]())(__dict_Enum_17["__superclass_Prelude.Bounded_0"]());
        }, eitherCardinality(__dict_Enum_16)(__dict_Enum_17)(cardinality(__dict_Enum_16))(cardinality(__dict_Enum_17)), eitherFromEnum(__dict_Enum_16)(__dict_Enum_17)(cardinality(__dict_Enum_16)), function (_340) {
            if (_340 instanceof Data_Either.Left) {
                return Data_Maybe.maybe(Data_Maybe.Nothing.value)(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Maybe.Just.create)(Data_Either.Left.create))(pred(__dict_Enum_16)(_340.value0));
            };
            if (_340 instanceof Data_Either.Right) {
                return Data_Maybe.maybe(Data_Maybe.Just.create(new Data_Either.Left(Prelude.top(__dict_Enum_16["__superclass_Prelude.Bounded_0"]()))))(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Maybe.Just.create)(Data_Either.Right.create))(pred(__dict_Enum_17)(_340.value0));
            };
            throw new Error("Failed pattern match at /Users/simon/purescript-incremental/example/bower_components/purescript-enums/src/Data/Enum.purs line 180, column 1 - line 189, column 1: " + [ _340.constructor.name ]);
        }, function (_339) {
            if (_339 instanceof Data_Either.Left) {
                return Data_Maybe.maybe(Data_Maybe.Just.create(new Data_Either.Right(Prelude.bottom(__dict_Enum_17["__superclass_Prelude.Bounded_0"]()))))(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Maybe.Just.create)(Data_Either.Left.create))(succ(__dict_Enum_16)(_339.value0));
            };
            if (_339 instanceof Data_Either.Right) {
                return Data_Maybe.maybe(Data_Maybe.Nothing.value)(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Maybe.Just.create)(Data_Either.Right.create))(succ(__dict_Enum_17)(_339.value0));
            };
            throw new Error("Failed pattern match at /Users/simon/purescript-incremental/example/bower_components/purescript-enums/src/Data/Enum.purs line 180, column 1 - line 189, column 1: " + [ _339.constructor.name ]);
        }, eitherToEnum(__dict_Enum_16)(__dict_Enum_17)(cardinality(__dict_Enum_16))(cardinality(__dict_Enum_17)));
    };
};
var enumMaybe = function (__dict_Enum_18) {
    return new Enum(function () {
        return Data_Maybe.boundedMaybe(__dict_Enum_18["__superclass_Prelude.Bounded_0"]());
    }, maybeCardinality(__dict_Enum_18)(cardinality(__dict_Enum_18)), function (_336) {
        if (_336 instanceof Data_Maybe.Nothing) {
            return Prelude.zero(Prelude.semiringInt);
        };
        if (_336 instanceof Data_Maybe.Just) {
            return Prelude["+"](Prelude.semiringInt)(fromEnum(__dict_Enum_18)(_336.value0))(Prelude.one(Prelude.semiringInt));
        };
        throw new Error("Failed pattern match at /Users/simon/purescript-incremental/example/bower_components/purescript-enums/src/Data/Enum.purs line 128, column 1 - line 138, column 1: " + [ _336.constructor.name ]);
    }, function (_335) {
        if (_335 instanceof Data_Maybe.Nothing) {
            return Data_Maybe.Nothing.value;
        };
        if (_335 instanceof Data_Maybe.Just) {
            return Prelude["<$>"](Data_Maybe.functorMaybe)(Data_Maybe.Just.create)(pred(__dict_Enum_18)(_335.value0));
        };
        throw new Error("Failed pattern match at /Users/simon/purescript-incremental/example/bower_components/purescript-enums/src/Data/Enum.purs line 128, column 1 - line 138, column 1: " + [ _335.constructor.name ]);
    }, function (_334) {
        if (_334 instanceof Data_Maybe.Nothing) {
            return Data_Maybe.Just.create(Prelude.bottom(Data_Maybe.boundedMaybe(__dict_Enum_18["__superclass_Prelude.Bounded_0"]())));
        };
        if (_334 instanceof Data_Maybe.Just) {
            return Prelude["<$>"](Data_Maybe.functorMaybe)(Data_Maybe.Just.create)(succ(__dict_Enum_18)(_334.value0));
        };
        throw new Error("Failed pattern match at /Users/simon/purescript-incremental/example/bower_components/purescript-enums/src/Data/Enum.purs line 128, column 1 - line 138, column 1: " + [ _334.constructor.name ]);
    }, maybeToEnum(__dict_Enum_18)(cardinality(__dict_Enum_18)));
};
var enumTuple = function (__dict_Enum_19) {
    return function (__dict_Enum_20) {
        return new Enum(function () {
            return Data_Tuple.boundedTuple(__dict_Enum_19["__superclass_Prelude.Bounded_0"]())(__dict_Enum_20["__superclass_Prelude.Bounded_0"]());
        }, tupleCardinality(__dict_Enum_19)(__dict_Enum_20)(cardinality(__dict_Enum_19))(cardinality(__dict_Enum_20)), tupleFromEnum(__dict_Enum_19)(__dict_Enum_20)(cardinality(__dict_Enum_20)), function (_338) {
            return Data_Maybe.maybe(Prelude["<$>"](Data_Maybe.functorMaybe)(Prelude.flip(Data_Tuple.Tuple.create)(Prelude.bottom(__dict_Enum_20["__superclass_Prelude.Bounded_0"]())))(pred(__dict_Enum_19)(_338.value0)))(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Maybe.Just.create)(Data_Tuple.Tuple.create(_338.value0)))(pred(__dict_Enum_20)(_338.value1));
        }, function (_337) {
            return Data_Maybe.maybe(Prelude["<$>"](Data_Maybe.functorMaybe)(Prelude.flip(Data_Tuple.Tuple.create)(Prelude.bottom(__dict_Enum_20["__superclass_Prelude.Bounded_0"]())))(succ(__dict_Enum_19)(_337.value0)))(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Maybe.Just.create)(Data_Tuple.Tuple.create(_337.value0)))(succ(__dict_Enum_20)(_337.value1));
        }, tupleToEnum(__dict_Enum_19)(__dict_Enum_20)(cardinality(__dict_Enum_20)));
    };
};
var booleanSucc = function (_330) {
    if (!_330) {
        return new Data_Maybe.Just(true);
    };
    return Data_Maybe.Nothing.value;
};
var booleanPred = function (_331) {
    if (_331) {
        return new Data_Maybe.Just(false);
    };
    return Data_Maybe.Nothing.value;
};
var enumBoolean = new Enum(function () {
    return Prelude.boundedBoolean;
}, 2, defaultFromEnum(booleanPred), booleanPred, booleanSucc, defaultToEnum(booleanSucc)(false));
module.exports = {
    Cardinality: Cardinality, 
    Enum: Enum, 
    enumFromThenTo: enumFromThenTo, 
    enumFromTo: enumFromTo, 
    intStepFromTo: intStepFromTo, 
    intFromTo: intFromTo, 
    defaultFromEnum: defaultFromEnum, 
    defaultToEnum: defaultToEnum, 
    defaultPred: defaultPred, 
    defaultSucc: defaultSucc, 
    toEnum: toEnum, 
    succ: succ, 
    runCardinality: runCardinality, 
    pred: pred, 
    fromEnum: fromEnum, 
    cardinality: cardinality, 
    enumChar: enumChar, 
    enumMaybe: enumMaybe, 
    enumBoolean: enumBoolean, 
    enumTuple: enumTuple, 
    enumEither: enumEither
};

},{"Data.Char":"/Users/simon/purescript-incremental/example/output/Data.Char/index.js","Data.Either":"/Users/simon/purescript-incremental/example/output/Data.Either/index.js","Data.Maybe":"/Users/simon/purescript-incremental/example/output/Data.Maybe/index.js","Data.Maybe.Unsafe":"/Users/simon/purescript-incremental/example/output/Data.Maybe.Unsafe/index.js","Data.Tuple":"/Users/simon/purescript-incremental/example/output/Data.Tuple/index.js","Data.Unfoldable":"/Users/simon/purescript-incremental/example/output/Data.Unfoldable/index.js","Prelude":"/Users/simon/purescript-incremental/example/output/Prelude/index.js"}],"/Users/simon/purescript-incremental/example/output/Data.Foldable/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.Foldable

exports.foldrArray = function (f) {
  return function (init) {
    return function (xs) {
      var acc = init;
      var len = xs.length;
      for (var i = len - 1; i >= 0; i--) {
        acc = f(xs[i])(acc);
      }
      return acc;
    };
  };
};

exports.foldlArray = function (f) {
  return function (init) {
    return function (xs) {
      var acc = init;
      var len = xs.length;
      for (var i = 0; i < len; i++) {
        acc = f(acc)(xs[i]);
      }
      return acc;
    };
  };
};

},{}],"/Users/simon/purescript-incremental/example/output/Data.Foldable/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Data_Monoid = require("Data.Monoid");
var Control_Apply = require("Control.Apply");
var Data_Monoid_Disj = require("Data.Monoid.Disj");
var Data_Monoid_Conj = require("Data.Monoid.Conj");
var Data_Maybe = require("Data.Maybe");
var Data_Maybe_First = require("Data.Maybe.First");
var Data_Maybe_Last = require("Data.Maybe.Last");
var Data_Monoid_Additive = require("Data.Monoid.Additive");
var Data_Monoid_Dual = require("Data.Monoid.Dual");
var Data_Monoid_Multiplicative = require("Data.Monoid.Multiplicative");
var Foldable = function (foldMap, foldl, foldr) {
    this.foldMap = foldMap;
    this.foldl = foldl;
    this.foldr = foldr;
};
var foldr = function (dict) {
    return dict.foldr;
};
var traverse_ = function (__dict_Applicative_0) {
    return function (__dict_Foldable_1) {
        return function (f) {
            return foldr(__dict_Foldable_1)(Prelude["<<<"](Prelude.semigroupoidFn)(Control_Apply["*>"](__dict_Applicative_0["__superclass_Prelude.Apply_0"]()))(f))(Prelude.pure(__dict_Applicative_0)(Prelude.unit));
        };
    };
};
var for_ = function (__dict_Applicative_2) {
    return function (__dict_Foldable_3) {
        return Prelude.flip(traverse_(__dict_Applicative_2)(__dict_Foldable_3));
    };
};
var sequence_ = function (__dict_Applicative_4) {
    return function (__dict_Foldable_5) {
        return traverse_(__dict_Applicative_4)(__dict_Foldable_5)(Prelude.id(Prelude.categoryFn));
    };
};
var foldl = function (dict) {
    return dict.foldl;
};
var intercalate = function (__dict_Foldable_6) {
    return function (__dict_Monoid_7) {
        return function (sep) {
            return function (xs) {
                var go = function (_212) {
                    return function (x) {
                        if (_212.init) {
                            return {
                                init: false, 
                                acc: x
                            };
                        };
                        return {
                            init: false, 
                            acc: Prelude["<>"](__dict_Monoid_7["__superclass_Prelude.Semigroup_0"]())(_212.acc)(Prelude["<>"](__dict_Monoid_7["__superclass_Prelude.Semigroup_0"]())(sep)(x))
                        };
                    };
                };
                return (foldl(__dict_Foldable_6)(go)({
                    init: true, 
                    acc: Data_Monoid.mempty(__dict_Monoid_7)
                })(xs)).acc;
            };
        };
    };
};
var mconcat = function (__dict_Foldable_8) {
    return function (__dict_Monoid_9) {
        return foldl(__dict_Foldable_8)(Prelude["<>"](__dict_Monoid_9["__superclass_Prelude.Semigroup_0"]()))(Data_Monoid.mempty(__dict_Monoid_9));
    };
};
var product = function (__dict_Foldable_10) {
    return function (__dict_Semiring_11) {
        return foldl(__dict_Foldable_10)(Prelude["*"](__dict_Semiring_11))(Prelude.one(__dict_Semiring_11));
    };
};
var sum = function (__dict_Foldable_12) {
    return function (__dict_Semiring_13) {
        return foldl(__dict_Foldable_12)(Prelude["+"](__dict_Semiring_13))(Prelude.zero(__dict_Semiring_13));
    };
};
var foldableMultiplicative = new Foldable(function (__dict_Monoid_14) {
    return function (f) {
        return function (_211) {
            return f(_211);
        };
    };
}, function (f) {
    return function (z) {
        return function (_210) {
            return f(z)(_210);
        };
    };
}, function (f) {
    return function (z) {
        return function (_209) {
            return f(_209)(z);
        };
    };
});
var foldableMaybe = new Foldable(function (__dict_Monoid_15) {
    return function (f) {
        return function (_190) {
            if (_190 instanceof Data_Maybe.Nothing) {
                return Data_Monoid.mempty(__dict_Monoid_15);
            };
            if (_190 instanceof Data_Maybe.Just) {
                return f(_190.value0);
            };
            throw new Error("Failed pattern match at /Users/simon/purescript-incremental/example/bower_components/purescript-foldable-traversable/src/Data/Foldable.purs line 51, column 1 - line 59, column 1: " + [ f.constructor.name, _190.constructor.name ]);
        };
    };
}, function (f) {
    return function (z) {
        return function (_189) {
            if (_189 instanceof Data_Maybe.Nothing) {
                return z;
            };
            if (_189 instanceof Data_Maybe.Just) {
                return f(z)(_189.value0);
            };
            throw new Error("Failed pattern match at /Users/simon/purescript-incremental/example/bower_components/purescript-foldable-traversable/src/Data/Foldable.purs line 51, column 1 - line 59, column 1: " + [ f.constructor.name, z.constructor.name, _189.constructor.name ]);
        };
    };
}, function (f) {
    return function (z) {
        return function (_188) {
            if (_188 instanceof Data_Maybe.Nothing) {
                return z;
            };
            if (_188 instanceof Data_Maybe.Just) {
                return f(_188.value0)(z);
            };
            throw new Error("Failed pattern match at /Users/simon/purescript-incremental/example/bower_components/purescript-foldable-traversable/src/Data/Foldable.purs line 51, column 1 - line 59, column 1: " + [ f.constructor.name, z.constructor.name, _188.constructor.name ]);
        };
    };
});
var foldableDual = new Foldable(function (__dict_Monoid_16) {
    return function (f) {
        return function (_202) {
            return f(_202);
        };
    };
}, function (f) {
    return function (z) {
        return function (_201) {
            return f(z)(_201);
        };
    };
}, function (f) {
    return function (z) {
        return function (_200) {
            return f(_200)(z);
        };
    };
});
var foldableDisj = new Foldable(function (__dict_Monoid_17) {
    return function (f) {
        return function (_205) {
            return f(_205);
        };
    };
}, function (f) {
    return function (z) {
        return function (_204) {
            return f(z)(_204);
        };
    };
}, function (f) {
    return function (z) {
        return function (_203) {
            return f(_203)(z);
        };
    };
});
var foldableConj = new Foldable(function (__dict_Monoid_18) {
    return function (f) {
        return function (_208) {
            return f(_208);
        };
    };
}, function (f) {
    return function (z) {
        return function (_207) {
            return f(z)(_207);
        };
    };
}, function (f) {
    return function (z) {
        return function (_206) {
            return f(_206)(z);
        };
    };
});
var foldableArray = new Foldable(function (__dict_Monoid_19) {
    return function (f) {
        return function (xs) {
            return foldr(foldableArray)(function (x) {
                return function (acc) {
                    return Prelude["<>"](__dict_Monoid_19["__superclass_Prelude.Semigroup_0"]())(f(x))(acc);
                };
            })(Data_Monoid.mempty(__dict_Monoid_19))(xs);
        };
    };
}, $foreign.foldlArray, $foreign.foldrArray);
var foldableAdditive = new Foldable(function (__dict_Monoid_20) {
    return function (f) {
        return function (_199) {
            return f(_199);
        };
    };
}, function (f) {
    return function (z) {
        return function (_198) {
            return f(z)(_198);
        };
    };
}, function (f) {
    return function (z) {
        return function (_197) {
            return f(_197)(z);
        };
    };
});
var foldMap = function (dict) {
    return dict.foldMap;
};
var foldableFirst = new Foldable(function (__dict_Monoid_21) {
    return function (f) {
        return function (_193) {
            return foldMap(foldableMaybe)(__dict_Monoid_21)(f)(_193);
        };
    };
}, function (f) {
    return function (z) {
        return function (_192) {
            return foldl(foldableMaybe)(f)(z)(_192);
        };
    };
}, function (f) {
    return function (z) {
        return function (_191) {
            return foldr(foldableMaybe)(f)(z)(_191);
        };
    };
});
var foldableLast = new Foldable(function (__dict_Monoid_22) {
    return function (f) {
        return function (_196) {
            return foldMap(foldableMaybe)(__dict_Monoid_22)(f)(_196);
        };
    };
}, function (f) {
    return function (z) {
        return function (_195) {
            return foldl(foldableMaybe)(f)(z)(_195);
        };
    };
}, function (f) {
    return function (z) {
        return function (_194) {
            return foldr(foldableMaybe)(f)(z)(_194);
        };
    };
});
var fold = function (__dict_Foldable_23) {
    return function (__dict_Monoid_24) {
        return foldMap(__dict_Foldable_23)(__dict_Monoid_24)(Prelude.id(Prelude.categoryFn));
    };
};
var find = function (__dict_Foldable_25) {
    return function (p) {
        return foldl(__dict_Foldable_25)(function (r) {
            return function (x) {
                var _479 = p(x);
                if (_479) {
                    return new Data_Maybe.Just(x);
                };
                if (!_479) {
                    return r;
                };
                throw new Error("Failed pattern match at /Users/simon/purescript-incremental/example/bower_components/purescript-foldable-traversable/src/Data/Foldable.purs line 181, column 1 - line 182, column 1: " + [ _479.constructor.name ]);
            };
        })(Data_Maybe.Nothing.value);
    };
};
var any = function (__dict_Foldable_26) {
    return function (__dict_BooleanAlgebra_27) {
        return function (p) {
            return Prelude["<<<"](Prelude.semigroupoidFn)(Data_Monoid_Disj.runDisj)(foldMap(__dict_Foldable_26)(Data_Monoid_Disj.monoidDisj(__dict_BooleanAlgebra_27))(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Monoid_Disj.Disj)(p)));
        };
    };
};
var elem = function (__dict_Foldable_28) {
    return function (__dict_Eq_29) {
        return Prelude["<<<"](Prelude.semigroupoidFn)(any(__dict_Foldable_28)(Prelude.booleanAlgebraBoolean))(Prelude["=="](__dict_Eq_29));
    };
};
var notElem = function (__dict_Foldable_30) {
    return function (__dict_Eq_31) {
        return function (x) {
            return Prelude["<<<"](Prelude.semigroupoidFn)(Prelude.not(Prelude.booleanAlgebraBoolean))(elem(__dict_Foldable_30)(__dict_Eq_31)(x));
        };
    };
};
var or = function (__dict_Foldable_32) {
    return function (__dict_BooleanAlgebra_33) {
        return any(__dict_Foldable_32)(__dict_BooleanAlgebra_33)(Prelude.id(Prelude.categoryFn));
    };
};
var all = function (__dict_Foldable_34) {
    return function (__dict_BooleanAlgebra_35) {
        return function (p) {
            return Prelude["<<<"](Prelude.semigroupoidFn)(Data_Monoid_Conj.runConj)(foldMap(__dict_Foldable_34)(Data_Monoid_Conj.monoidConj(__dict_BooleanAlgebra_35))(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Monoid_Conj.Conj)(p)));
        };
    };
};
var and = function (__dict_Foldable_36) {
    return function (__dict_BooleanAlgebra_37) {
        return all(__dict_Foldable_36)(__dict_BooleanAlgebra_37)(Prelude.id(Prelude.categoryFn));
    };
};
module.exports = {
    Foldable: Foldable, 
    find: find, 
    notElem: notElem, 
    elem: elem, 
    product: product, 
    sum: sum, 
    all: all, 
    any: any, 
    or: or, 
    and: and, 
    intercalate: intercalate, 
    mconcat: mconcat, 
    sequence_: sequence_, 
    for_: for_, 
    traverse_: traverse_, 
    fold: fold, 
    foldMap: foldMap, 
    foldl: foldl, 
    foldr: foldr, 
    foldableArray: foldableArray, 
    foldableMaybe: foldableMaybe, 
    foldableFirst: foldableFirst, 
    foldableLast: foldableLast, 
    foldableAdditive: foldableAdditive, 
    foldableDual: foldableDual, 
    foldableDisj: foldableDisj, 
    foldableConj: foldableConj, 
    foldableMultiplicative: foldableMultiplicative
};

},{"./foreign":"/Users/simon/purescript-incremental/example/output/Data.Foldable/foreign.js","Control.Apply":"/Users/simon/purescript-incremental/example/output/Control.Apply/index.js","Data.Maybe":"/Users/simon/purescript-incremental/example/output/Data.Maybe/index.js","Data.Maybe.First":"/Users/simon/purescript-incremental/example/output/Data.Maybe.First/index.js","Data.Maybe.Last":"/Users/simon/purescript-incremental/example/output/Data.Maybe.Last/index.js","Data.Monoid":"/Users/simon/purescript-incremental/example/output/Data.Monoid/index.js","Data.Monoid.Additive":"/Users/simon/purescript-incremental/example/output/Data.Monoid.Additive/index.js","Data.Monoid.Conj":"/Users/simon/purescript-incremental/example/output/Data.Monoid.Conj/index.js","Data.Monoid.Disj":"/Users/simon/purescript-incremental/example/output/Data.Monoid.Disj/index.js","Data.Monoid.Dual":"/Users/simon/purescript-incremental/example/output/Data.Monoid.Dual/index.js","Data.Monoid.Multiplicative":"/Users/simon/purescript-incremental/example/output/Data.Monoid.Multiplicative/index.js","Prelude":"/Users/simon/purescript-incremental/example/output/Prelude/index.js"}],"/Users/simon/purescript-incremental/example/output/Data.Foreign.Class/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Foreign = require("Data.Foreign");
var Data_Traversable = require("Data.Traversable");
var Data_Array = require("Data.Array");
var Data_Foreign_Null = require("Data.Foreign.Null");
var Data_Foreign_Undefined = require("Data.Foreign.Undefined");
var Data_Foreign_NullOrUndefined = require("Data.Foreign.NullOrUndefined");
var Data_Either = require("Data.Either");
var Data_Foreign_Index = require("Data.Foreign.Index");
var Data_Int = require("Data.Int");
var IsForeign = function (read) {
    this.read = read;
};
var stringIsForeign = new IsForeign(Data_Foreign.readString);
var read = function (dict) {
    return dict.read;
};
var readJSON = function (__dict_IsForeign_0) {
    return function (json) {
        return Prelude[">>="](Data_Either.bindEither)(Data_Foreign.parseJSON(json))(read(__dict_IsForeign_0));
    };
};
var readWith = function (__dict_IsForeign_1) {
    return function (f) {
        return function (value) {
            return Data_Either.either(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Either.Left.create)(f))(Data_Either.Right.create)(read(__dict_IsForeign_1)(value));
        };
    };
};
var readProp = function (__dict_IsForeign_2) {
    return function (__dict_Index_3) {
        return function (prop) {
            return function (value) {
                return Prelude[">>="](Data_Either.bindEither)(Data_Foreign_Index["!"](__dict_Index_3)(value)(prop))(readWith(__dict_IsForeign_2)(Data_Foreign_Index.errorAt(__dict_Index_3)(prop)));
            };
        };
    };
};
var undefinedIsForeign = function (__dict_IsForeign_4) {
    return new IsForeign(Data_Foreign_Undefined.readUndefined(read(__dict_IsForeign_4)));
};
var numberIsForeign = new IsForeign(Data_Foreign.readNumber);
var nullOrUndefinedIsForeign = function (__dict_IsForeign_5) {
    return new IsForeign(Data_Foreign_NullOrUndefined.readNullOrUndefined(read(__dict_IsForeign_5)));
};
var nullIsForeign = function (__dict_IsForeign_6) {
    return new IsForeign(Data_Foreign_Null.readNull(read(__dict_IsForeign_6)));
};
var intIsForeign = new IsForeign(Data_Foreign.readInt);
var foreignIsForeign = new IsForeign(function (f) {
    return Prelude["return"](Data_Either.applicativeEither)(f);
});
var charIsForeign = new IsForeign(Data_Foreign.readChar);
var booleanIsForeign = new IsForeign(Data_Foreign.readBoolean);
var arrayIsForeign = function (__dict_IsForeign_7) {
    return new IsForeign(function (value) {
        var readElement = function (i) {
            return function (value_1) {
                return readWith(__dict_IsForeign_7)(Data_Foreign.ErrorAtIndex.create(i))(value_1);
            };
        };
        var readElements = function (arr) {
            return Data_Traversable.sequence(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(Data_Array.zipWith(readElement)(Data_Array.range(Prelude.zero(Prelude.semiringInt))(Data_Array.length(arr)))(arr));
        };
        return Prelude[">>="](Data_Either.bindEither)(Data_Foreign.readArray(value))(readElements);
    });
};
module.exports = {
    IsForeign: IsForeign, 
    readProp: readProp, 
    readWith: readWith, 
    readJSON: readJSON, 
    read: read, 
    foreignIsForeign: foreignIsForeign, 
    stringIsForeign: stringIsForeign, 
    charIsForeign: charIsForeign, 
    booleanIsForeign: booleanIsForeign, 
    numberIsForeign: numberIsForeign, 
    intIsForeign: intIsForeign, 
    arrayIsForeign: arrayIsForeign, 
    nullIsForeign: nullIsForeign, 
    undefinedIsForeign: undefinedIsForeign, 
    nullOrUndefinedIsForeign: nullOrUndefinedIsForeign
};

},{"Data.Array":"/Users/simon/purescript-incremental/example/output/Data.Array/index.js","Data.Either":"/Users/simon/purescript-incremental/example/output/Data.Either/index.js","Data.Foreign":"/Users/simon/purescript-incremental/example/output/Data.Foreign/index.js","Data.Foreign.Index":"/Users/simon/purescript-incremental/example/output/Data.Foreign.Index/index.js","Data.Foreign.Null":"/Users/simon/purescript-incremental/example/output/Data.Foreign.Null/index.js","Data.Foreign.NullOrUndefined":"/Users/simon/purescript-incremental/example/output/Data.Foreign.NullOrUndefined/index.js","Data.Foreign.Undefined":"/Users/simon/purescript-incremental/example/output/Data.Foreign.Undefined/index.js","Data.Int":"/Users/simon/purescript-incremental/example/output/Data.Int/index.js","Data.Traversable":"/Users/simon/purescript-incremental/example/output/Data.Traversable/index.js","Prelude":"/Users/simon/purescript-incremental/example/output/Prelude/index.js"}],"/Users/simon/purescript-incremental/example/output/Data.Foreign.Index/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.Foreign.Index

// jshint maxparams: 4
exports.unsafeReadPropImpl = function (f, s, key, value) {
  return value == null ? f : s(value[key]);
};

// jshint maxparams: 2
exports.unsafeHasOwnProperty = function (prop, value) {
  return Object.prototype.hasOwnProperty.call(value, prop);
};

exports.unsafeHasProperty = function (prop, value) {
  return prop in value;
};

},{}],"/Users/simon/purescript-incremental/example/output/Data.Foreign.Index/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Data_Function = require("Data.Function");
var Data_Foreign = require("Data.Foreign");
var Prelude = require("Prelude");
var Data_Either = require("Data.Either");
var Data_Int = require("Data.Int");
var Index = function (errorAt, hasOwnProperty, hasProperty, ix) {
    this.errorAt = errorAt;
    this.hasOwnProperty = hasOwnProperty;
    this.hasProperty = hasProperty;
    this.ix = ix;
};
var unsafeReadProp = function (k) {
    return function (value) {
        return $foreign.unsafeReadPropImpl(new Data_Either.Left(new Data_Foreign.TypeMismatch("object", Data_Foreign.typeOf(value))), Prelude.pure(Data_Either.applicativeEither), k, value);
    };
};
var prop = unsafeReadProp;
var ix = function (dict) {
    return dict.ix;
};
var $bang = function (__dict_Index_0) {
    return ix(__dict_Index_0);
};
var index = unsafeReadProp;
var hasPropertyImpl = function (p) {
    return function (value) {
        if (Data_Foreign.isNull(value)) {
            return false;
        };
        if (Data_Foreign.isUndefined(value)) {
            return false;
        };
        if (Prelude["||"](Prelude.booleanAlgebraBoolean)(Prelude["=="](Prelude.eqString)(Data_Foreign.typeOf(value))("object"))(Prelude["=="](Prelude.eqString)(Data_Foreign.typeOf(value))("function"))) {
            return $foreign.unsafeHasProperty(p, value);
        };
        return false;
    };
};
var hasProperty = function (dict) {
    return dict.hasProperty;
};
var hasOwnPropertyImpl = function (p) {
    return function (value) {
        if (Data_Foreign.isNull(value)) {
            return false;
        };
        if (Data_Foreign.isUndefined(value)) {
            return false;
        };
        if (Prelude["||"](Prelude.booleanAlgebraBoolean)(Prelude["=="](Prelude.eqString)(Data_Foreign.typeOf(value))("object"))(Prelude["=="](Prelude.eqString)(Data_Foreign.typeOf(value))("function"))) {
            return $foreign.unsafeHasOwnProperty(p, value);
        };
        return false;
    };
};
var indexInt = new Index(Data_Foreign.ErrorAtIndex.create, hasOwnPropertyImpl, hasPropertyImpl, Prelude.flip(index));
var indexString = new Index(Data_Foreign.ErrorAtProperty.create, hasOwnPropertyImpl, hasPropertyImpl, Prelude.flip(prop));
var hasOwnProperty = function (dict) {
    return dict.hasOwnProperty;
};
var errorAt = function (dict) {
    return dict.errorAt;
};
module.exports = {
    Index: Index, 
    errorAt: errorAt, 
    hasOwnProperty: hasOwnProperty, 
    hasProperty: hasProperty, 
    "!": $bang, 
    ix: ix, 
    index: index, 
    prop: prop, 
    indexString: indexString, 
    indexInt: indexInt
};

},{"./foreign":"/Users/simon/purescript-incremental/example/output/Data.Foreign.Index/foreign.js","Data.Either":"/Users/simon/purescript-incremental/example/output/Data.Either/index.js","Data.Foreign":"/Users/simon/purescript-incremental/example/output/Data.Foreign/index.js","Data.Function":"/Users/simon/purescript-incremental/example/output/Data.Function/index.js","Data.Int":"/Users/simon/purescript-incremental/example/output/Data.Int/index.js","Prelude":"/Users/simon/purescript-incremental/example/output/Prelude/index.js"}],"/Users/simon/purescript-incremental/example/output/Data.Foreign.Null/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Data_Foreign = require("Data.Foreign");
var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");
var Data_Either = require("Data.Either");
var Null = function (x) {
    return x;
};
var runNull = function (_260) {
    return _260;
};
var readNull = function (f) {
    return function (value) {
        if (Data_Foreign.isNull(value)) {
            return Prelude.pure(Data_Either.applicativeEither)(Data_Maybe.Nothing.value);
        };
        return Prelude["<$>"](Data_Either.functorEither)(Prelude["<<<"](Prelude.semigroupoidFn)(Null)(Data_Maybe.Just.create))(f(value));
    };
};
module.exports = {
    Null: Null, 
    readNull: readNull, 
    runNull: runNull
};

},{"Data.Either":"/Users/simon/purescript-incremental/example/output/Data.Either/index.js","Data.Foreign":"/Users/simon/purescript-incremental/example/output/Data.Foreign/index.js","Data.Maybe":"/Users/simon/purescript-incremental/example/output/Data.Maybe/index.js","Prelude":"/Users/simon/purescript-incremental/example/output/Prelude/index.js"}],"/Users/simon/purescript-incremental/example/output/Data.Foreign.NullOrUndefined/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Foreign = require("Data.Foreign");
var Data_Maybe = require("Data.Maybe");
var Data_Either = require("Data.Either");
var NullOrUndefined = function (x) {
    return x;
};
var runNullOrUndefined = function (_261) {
    return _261;
};
var readNullOrUndefined = function (f) {
    return function (value) {
        if (Prelude["||"](Prelude.booleanAlgebraBoolean)(Data_Foreign.isNull(value))(Data_Foreign.isUndefined(value))) {
            return Prelude.pure(Data_Either.applicativeEither)(Data_Maybe.Nothing.value);
        };
        return Prelude["<$>"](Data_Either.functorEither)(Prelude["<<<"](Prelude.semigroupoidFn)(NullOrUndefined)(Data_Maybe.Just.create))(f(value));
    };
};
module.exports = {
    NullOrUndefined: NullOrUndefined, 
    readNullOrUndefined: readNullOrUndefined, 
    runNullOrUndefined: runNullOrUndefined
};

},{"Data.Either":"/Users/simon/purescript-incremental/example/output/Data.Either/index.js","Data.Foreign":"/Users/simon/purescript-incremental/example/output/Data.Foreign/index.js","Data.Maybe":"/Users/simon/purescript-incremental/example/output/Data.Maybe/index.js","Prelude":"/Users/simon/purescript-incremental/example/output/Prelude/index.js"}],"/Users/simon/purescript-incremental/example/output/Data.Foreign.Undefined/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Data_Foreign = require("Data.Foreign");
var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");
var Data_Either = require("Data.Either");
var Undefined = function (x) {
    return x;
};
var runUndefined = function (_262) {
    return _262;
};
var readUndefined = function (f) {
    return function (value) {
        if (Data_Foreign.isUndefined(value)) {
            return Prelude.pure(Data_Either.applicativeEither)(Data_Maybe.Nothing.value);
        };
        return Prelude["<$>"](Data_Either.functorEither)(Prelude["<<<"](Prelude.semigroupoidFn)(Undefined)(Data_Maybe.Just.create))(f(value));
    };
};
module.exports = {
    Undefined: Undefined, 
    readUndefined: readUndefined, 
    runUndefined: runUndefined
};

},{"Data.Either":"/Users/simon/purescript-incremental/example/output/Data.Either/index.js","Data.Foreign":"/Users/simon/purescript-incremental/example/output/Data.Foreign/index.js","Data.Maybe":"/Users/simon/purescript-incremental/example/output/Data.Maybe/index.js","Prelude":"/Users/simon/purescript-incremental/example/output/Prelude/index.js"}],"/Users/simon/purescript-incremental/example/output/Data.Foreign/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.Foreign

// jshint maxparams: 3
exports.parseJSONImpl = function (left, right, str) {
  try {
    return right(JSON.parse(str));
  } catch (e) {
    return left(e.toString());
  }
};

// jshint maxparams: 1
exports.toForeign = function (value) {
  return value;
};

exports.unsafeFromForeign = function (value) {
  return value;
};

exports.typeOf = function (value) {
  return typeof value;
};

exports.tagOf = function (value) {
  return Object.prototype.toString.call(value).slice(8, -1);
};

exports.isNull = function (value) {
  return value === null;
};

exports.isUndefined = function (value) {
  return value === undefined;
};

exports.isArray = Array.isArray || function (value) {
  return Object.prototype.toString.call(value) === "[object Array]";
};

},{}],"/Users/simon/purescript-incremental/example/output/Data.Foreign/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Data_Function = require("Data.Function");
var Data_Maybe = require("Data.Maybe");
var Data_String = require("Data.String");
var Data_Either = require("Data.Either");
var Data_Int = require("Data.Int");
var TypeMismatch = (function () {
    function TypeMismatch(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    TypeMismatch.create = function (value0) {
        return function (value1) {
            return new TypeMismatch(value0, value1);
        };
    };
    return TypeMismatch;
})();
var ErrorAtIndex = (function () {
    function ErrorAtIndex(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    ErrorAtIndex.create = function (value0) {
        return function (value1) {
            return new ErrorAtIndex(value0, value1);
        };
    };
    return ErrorAtIndex;
})();
var ErrorAtProperty = (function () {
    function ErrorAtProperty(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    ErrorAtProperty.create = function (value0) {
        return function (value1) {
            return new ErrorAtProperty(value0, value1);
        };
    };
    return ErrorAtProperty;
})();
var JSONError = (function () {
    function JSONError(value0) {
        this.value0 = value0;
    };
    JSONError.create = function (value0) {
        return new JSONError(value0);
    };
    return JSONError;
})();
var unsafeReadTagged = function (tag) {
    return function (value) {
        if (Prelude["=="](Prelude.eqString)($foreign.tagOf(value))(tag)) {
            return Prelude.pure(Data_Either.applicativeEither)($foreign.unsafeFromForeign(value));
        };
        return new Data_Either.Left(new TypeMismatch(tag, $foreign.tagOf(value)));
    };
};
var showForeignError = new Prelude.Show(function (_257) {
    if (_257 instanceof TypeMismatch) {
        return "Type mismatch: expected " + (_257.value0 + (", found " + _257.value1));
    };
    if (_257 instanceof ErrorAtIndex) {
        return "Error at array index " + (Prelude.show(Prelude.showInt)(_257.value0) + (": " + Prelude.show(showForeignError)(_257.value1)));
    };
    if (_257 instanceof ErrorAtProperty) {
        return "Error at property " + (Prelude.show(Prelude.showString)(_257.value0) + (": " + Prelude.show(showForeignError)(_257.value1)));
    };
    if (_257 instanceof JSONError) {
        return "JSON error: " + _257.value0;
    };
    throw new Error("Failed pattern match: " + [ _257.constructor.name ]);
});
var readString = unsafeReadTagged("String");
var readNumber = unsafeReadTagged("Number");
var readInt = function (value) {
    var error = Data_Either.Left.create(new TypeMismatch("Int", $foreign.tagOf(value)));
    var fromNumber = Prelude["<<<"](Prelude.semigroupoidFn)(Data_Maybe.maybe(error)(Prelude.pure(Data_Either.applicativeEither)))(Data_Int.fromNumber);
    return Data_Either.either(Prelude["const"](error))(fromNumber)(readNumber(value));
};
var readChar = function (value) {
    var error = Data_Either.Left.create(new TypeMismatch("Char", $foreign.tagOf(value)));
    var fromString = Prelude["<<<"](Prelude.semigroupoidFn)(Data_Maybe.maybe(error)(Prelude.pure(Data_Either.applicativeEither)))(Data_String.toChar);
    return Data_Either.either(Prelude["const"](error))(fromString)(readString(value));
};
var readBoolean = unsafeReadTagged("Boolean");
var readArray = function (value) {
    if ($foreign.isArray(value)) {
        return Prelude.pure(Data_Either.applicativeEither)($foreign.unsafeFromForeign(value));
    };
    return new Data_Either.Left(new TypeMismatch("array", $foreign.tagOf(value)));
};
var parseJSON = function (json) {
    return $foreign.parseJSONImpl(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Either.Left.create)(JSONError.create), Data_Either.Right.create, json);
};
var eqForeignError = new Prelude.Eq(function (_258) {
    return function (_259) {
        if (_258 instanceof TypeMismatch && _259 instanceof TypeMismatch) {
            return Prelude["&&"](Prelude.booleanAlgebraBoolean)(Prelude["=="](Prelude.eqString)(_258.value0)(_259.value0))(Prelude["=="](Prelude.eqString)(_258.value1)(_259.value1));
        };
        if (_258 instanceof ErrorAtIndex && _259 instanceof ErrorAtIndex) {
            return Prelude["&&"](Prelude.booleanAlgebraBoolean)(Prelude["=="](Prelude.eqInt)(_258.value0)(_259.value0))(Prelude["=="](eqForeignError)(_258.value1)(_259.value1));
        };
        if (_258 instanceof ErrorAtProperty && _259 instanceof ErrorAtProperty) {
            return Prelude["&&"](Prelude.booleanAlgebraBoolean)(Prelude["=="](Prelude.eqString)(_258.value0)(_259.value0))(Prelude["=="](eqForeignError)(_258.value1)(_259.value1));
        };
        if (_258 instanceof JSONError && _259 instanceof JSONError) {
            return Prelude["=="](Prelude.eqString)(_258.value0)(_259.value0);
        };
        return false;
    };
});
module.exports = {
    TypeMismatch: TypeMismatch, 
    ErrorAtIndex: ErrorAtIndex, 
    ErrorAtProperty: ErrorAtProperty, 
    JSONError: JSONError, 
    readArray: readArray, 
    readInt: readInt, 
    readNumber: readNumber, 
    readBoolean: readBoolean, 
    readChar: readChar, 
    readString: readString, 
    unsafeReadTagged: unsafeReadTagged, 
    parseJSON: parseJSON, 
    showForeignError: showForeignError, 
    eqForeignError: eqForeignError, 
    isArray: $foreign.isArray, 
    isUndefined: $foreign.isUndefined, 
    isNull: $foreign.isNull, 
    tagOf: $foreign.tagOf, 
    typeOf: $foreign.typeOf, 
    unsafeFromForeign: $foreign.unsafeFromForeign, 
    toForeign: $foreign.toForeign
};

},{"./foreign":"/Users/simon/purescript-incremental/example/output/Data.Foreign/foreign.js","Data.Either":"/Users/simon/purescript-incremental/example/output/Data.Either/index.js","Data.Function":"/Users/simon/purescript-incremental/example/output/Data.Function/index.js","Data.Int":"/Users/simon/purescript-incremental/example/output/Data.Int/index.js","Data.Maybe":"/Users/simon/purescript-incremental/example/output/Data.Maybe/index.js","Data.String":"/Users/simon/purescript-incremental/example/output/Data.String/index.js","Prelude":"/Users/simon/purescript-incremental/example/output/Prelude/index.js"}],"/Users/simon/purescript-incremental/example/output/Data.Function/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.Function

exports.mkFn0 = function (fn) {
  return function () {
    return fn({});
  };
};

exports.mkFn1 = function (fn) {
  return function (a) {
    return fn(a);
  };
};

exports.mkFn2 = function (fn) {
  /* jshint maxparams: 2 */
  return function (a, b) {
    return fn(a)(b);
  };
};

exports.mkFn3 = function (fn) {
  /* jshint maxparams: 3 */
  return function (a, b, c) {
    return fn(a)(b)(c);
  };
};

exports.mkFn4 = function (fn) {
  /* jshint maxparams: 4 */
  return function (a, b, c, d) {
    return fn(a)(b)(c)(d);
  };
};

exports.mkFn5 = function (fn) {
  /* jshint maxparams: 5 */
  return function (a, b, c, d, e) {
    return fn(a)(b)(c)(d)(e);
  };
};

exports.mkFn6 = function (fn) {
  /* jshint maxparams: 6 */
  return function (a, b, c, d, e, f) {
    return fn(a)(b)(c)(d)(e)(f);
  };
};

exports.mkFn7 = function (fn) {
  /* jshint maxparams: 7 */
  return function (a, b, c, d, e, f, g) {
    return fn(a)(b)(c)(d)(e)(f)(g);
  };
};

exports.mkFn8 = function (fn) {
  /* jshint maxparams: 8 */
  return function (a, b, c, d, e, f, g, h) {
    return fn(a)(b)(c)(d)(e)(f)(g)(h);
  };
};

exports.mkFn9 = function (fn) {
  /* jshint maxparams: 9 */
  return function (a, b, c, d, e, f, g, h, i) {
    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i);
  };
};

exports.mkFn10 = function (fn) {
  /* jshint maxparams: 10 */
  return function (a, b, c, d, e, f, g, h, i, j) {
    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i)(j);
  };
};

exports.runFn0 = function (fn) {
  return fn();
};

exports.runFn1 = function (fn) {
  return function (a) {
    return fn(a);
  };
};

exports.runFn2 = function (fn) {
  return function (a) {
    return function (b) {
      return fn(a, b);
    };
  };
};

exports.runFn3 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return fn(a, b, c);
      };
    };
  };
};

exports.runFn4 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return fn(a, b, c, d);
        };
      };
    };
  };
};

exports.runFn5 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return fn(a, b, c, d, e);
          };
        };
      };
    };
  };
};

exports.runFn6 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return fn(a, b, c, d, e, f);
            };
          };
        };
      };
    };
  };
};

exports.runFn7 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return function (g) {
                return fn(a, b, c, d, e, f, g);
              };
            };
          };
        };
      };
    };
  };
};

exports.runFn8 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return function (g) {
                return function (h) {
                  return fn(a, b, c, d, e, f, g, h);
                };
              };
            };
          };
        };
      };
    };
  };
};

exports.runFn9 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return function (g) {
                return function (h) {
                  return function (i) {
                    return fn(a, b, c, d, e, f, g, h, i);
                  };
                };
              };
            };
          };
        };
      };
    };
  };
};

exports.runFn10 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return function (g) {
                return function (h) {
                  return function (i) {
                    return function (j) {
                      return fn(a, b, c, d, e, f, g, h, i, j);
                    };
                  };
                };
              };
            };
          };
        };
      };
    };
  };
};

},{}],"/Users/simon/purescript-incremental/example/output/Data.Function/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var on = function (f) {
    return function (g) {
        return function (x) {
            return function (y) {
                return f(g(x))(g(y));
            };
        };
    };
};
module.exports = {
    on: on, 
    runFn10: $foreign.runFn10, 
    runFn9: $foreign.runFn9, 
    runFn8: $foreign.runFn8, 
    runFn7: $foreign.runFn7, 
    runFn6: $foreign.runFn6, 
    runFn5: $foreign.runFn5, 
    runFn4: $foreign.runFn4, 
    runFn3: $foreign.runFn3, 
    runFn2: $foreign.runFn2, 
    runFn1: $foreign.runFn1, 
    runFn0: $foreign.runFn0, 
    mkFn10: $foreign.mkFn10, 
    mkFn9: $foreign.mkFn9, 
    mkFn8: $foreign.mkFn8, 
    mkFn7: $foreign.mkFn7, 
    mkFn6: $foreign.mkFn6, 
    mkFn5: $foreign.mkFn5, 
    mkFn4: $foreign.mkFn4, 
    mkFn3: $foreign.mkFn3, 
    mkFn2: $foreign.mkFn2, 
    mkFn1: $foreign.mkFn1, 
    mkFn0: $foreign.mkFn0
};

},{"./foreign":"/Users/simon/purescript-incremental/example/output/Data.Function/foreign.js","Prelude":"/Users/simon/purescript-incremental/example/output/Prelude/index.js"}],"/Users/simon/purescript-incremental/example/output/Data.Functor.Invariant/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Invariant = function (imap) {
    this.imap = imap;
};
var imapF = function (__dict_Functor_0) {
    return Prelude["<<<"](Prelude.semigroupoidFn)(Prelude["const"])(Prelude.map(__dict_Functor_0));
};
var invariantArray = new Invariant(imapF(Prelude.functorArray));
var invariantFn = new Invariant(imapF(Prelude.functorFn));
var imap = function (dict) {
    return dict.imap;
};
module.exports = {
    Invariant: Invariant, 
    imapF: imapF, 
    imap: imap, 
    invariantFn: invariantFn, 
    invariantArray: invariantArray
};

},{"Prelude":"/Users/simon/purescript-incremental/example/output/Prelude/index.js"}],"/Users/simon/purescript-incremental/example/output/Data.Int.Bits/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.Int.Bits

exports.andImpl = function (n1) {
  return function (n2) {
    /* jshint bitwise: false */
    return n1 & n2;
  };
};

exports.orImpl = function (n1) {
  return function (n2) {
    /* jshint bitwise: false */
    return n1 | n2;
  };
};

exports.xorImpl = function (n1) {
  return function (n2) {
    /* jshint bitwise: false */
    return n1 ^ n2;
  };
};

exports.shl = function (n1) {
  return function (n2) {
    /* jshint bitwise: false */
    return n1 << n2;
  };
};

exports.shr = function (n1) {
  return function (n2) {
    /* jshint bitwise: false */
    return n1 >> n2;
  };
};

exports.zshr = function (n1) {
  return function (n2) {
    /* jshint bitwise: false */
    return n1 >>> n2;
  };
};

exports.complement = function (n) {
  /* jshint bitwise: false */
  return ~n;
};

},{}],"/Users/simon/purescript-incremental/example/output/Data.Int.Bits/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var $dot$bar$dot = $foreign.orImpl;
var $dot$up$dot = $foreign.xorImpl;
var $dot$amp$dot = $foreign.andImpl;
module.exports = {
    ".^.": $dot$up$dot, 
    ".|.": $dot$bar$dot, 
    ".&.": $dot$amp$dot, 
    complement: $foreign.complement, 
    zshr: $foreign.zshr, 
    shr: $foreign.shr, 
    shl: $foreign.shl
};

},{"./foreign":"/Users/simon/purescript-incremental/example/output/Data.Int.Bits/foreign.js"}],"/Users/simon/purescript-incremental/example/output/Data.Int/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.Int

exports.fromNumberImpl = function (just) {
  return function (nothing) {
    return function (n) {
      /* jshint bitwise: false */
      return (n | 0) === n ? just(n) : nothing;
    };
  };
};

exports.toNumber = function (n) {
  return n;
};

exports.fromStringImpl = function (just) {
  return function (nothing) {
    return function (s) {
      /* jshint bitwise: false */
      var i = parseFloat(s);
      return (i | 0) === i ? just(i) : nothing;
    };
  };
};

},{}],"/Users/simon/purescript-incremental/example/output/Data.Int/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var $$Math = require("Math");
var Data_Maybe_Unsafe = require("Data.Maybe.Unsafe");
var Data_Int_Bits = require("Data.Int.Bits");
var Data_Maybe = require("Data.Maybe");
var odd = function (x) {
    return Prelude["/="](Prelude.eqInt)(x & 1)(0);
};
var fromString = $foreign.fromStringImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var fromNumber = $foreign.fromNumberImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var unsafeClamp = function (x) {
    if (x >= $foreign.toNumber(Prelude.top(Prelude.boundedInt))) {
        return Prelude.top(Prelude.boundedInt);
    };
    if (x <= $foreign.toNumber(Prelude.bottom(Prelude.boundedInt))) {
        return Prelude.bottom(Prelude.boundedInt);
    };
    if (Prelude.otherwise) {
        return Data_Maybe_Unsafe.fromJust(fromNumber(x));
    };
    throw new Error("Failed pattern match at /Users/simon/purescript-incremental/example/bower_components/purescript-integers/src/Data/Int.purs line 48, column 1 - line 49, column 1: " + [ x.constructor.name ]);
};
var round = Prelude["<<<"](Prelude.semigroupoidFn)(unsafeClamp)($$Math.round);
var floor = Prelude["<<<"](Prelude.semigroupoidFn)(unsafeClamp)($$Math.floor);
var even = function (x) {
    return Prelude["=="](Prelude.eqInt)(x & 1)(0);
};
var ceil = Prelude["<<<"](Prelude.semigroupoidFn)(unsafeClamp)($$Math.ceil);
module.exports = {
    odd: odd, 
    even: even, 
    fromString: fromString, 
    round: round, 
    floor: floor, 
    ceil: ceil, 
    fromNumber: fromNumber, 
    toNumber: $foreign.toNumber
};

},{"./foreign":"/Users/simon/purescript-incremental/example/output/Data.Int/foreign.js","Data.Int.Bits":"/Users/simon/purescript-incremental/example/output/Data.Int.Bits/index.js","Data.Maybe":"/Users/simon/purescript-incremental/example/output/Data.Maybe/index.js","Data.Maybe.Unsafe":"/Users/simon/purescript-incremental/example/output/Data.Maybe.Unsafe/index.js","Math":"/Users/simon/purescript-incremental/example/output/Math/index.js","Prelude":"/Users/simon/purescript-incremental/example/output/Prelude/index.js"}],"/Users/simon/purescript-incremental/example/output/Data.Maybe.First/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Control_Extend = require("Control.Extend");
var Data_Functor_Invariant = require("Data.Functor.Invariant");
var Control_Comonad = require("Control.Comonad");
var Data_Maybe = require("Data.Maybe");
var Data_Monoid = require("Data.Monoid");
var First = function (x) {
    return x;
};
var showFirst = function (__dict_Show_0) {
    return new Prelude.Show(function (_174) {
        return "First (" + (Prelude.show(Data_Maybe.showMaybe(__dict_Show_0))(_174) + ")");
    });
};
var semigroupFirst = new Prelude.Semigroup(function (_175) {
    return function (second) {
        if (_175 instanceof Data_Maybe.Just) {
            return _175;
        };
        return second;
    };
});
var runFirst = function (_164) {
    return _164;
};
var monoidFirst = new Data_Monoid.Monoid(function () {
    return semigroupFirst;
}, Data_Maybe.Nothing.value);
var functorFirst = new Prelude.Functor(function (f) {
    return function (_169) {
        return Prelude["<$>"](Data_Maybe.functorMaybe)(f)(_169);
    };
});
var invariantFirst = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorFirst));
var extendFirst = new Control_Extend.Extend(function () {
    return functorFirst;
}, function (f) {
    return function (_173) {
        return Control_Extend.extend(Data_Maybe.extendMaybe)(Prelude["<<<"](Prelude.semigroupoidFn)(f)(First))(_173);
    };
});
var eqFirst = function (__dict_Eq_2) {
    return new Prelude.Eq(function (_165) {
        return function (_166) {
            return Prelude["=="](Data_Maybe.eqMaybe(__dict_Eq_2))(_165)(_166);
        };
    });
};
var ordFirst = function (__dict_Ord_1) {
    return new Prelude.Ord(function () {
        return eqFirst(__dict_Ord_1["__superclass_Prelude.Eq_0"]());
    }, function (_167) {
        return function (_168) {
            return Prelude.compare(Data_Maybe.ordMaybe(__dict_Ord_1))(_167)(_168);
        };
    });
};
var boundedFirst = function (__dict_Bounded_3) {
    return new Prelude.Bounded(Prelude.bottom(Data_Maybe.boundedMaybe(__dict_Bounded_3)), Prelude.top(Data_Maybe.boundedMaybe(__dict_Bounded_3)));
};
var applyFirst = new Prelude.Apply(function () {
    return functorFirst;
}, function (_170) {
    return function (_171) {
        return Prelude["<*>"](Data_Maybe.applyMaybe)(_170)(_171);
    };
});
var bindFirst = new Prelude.Bind(function () {
    return applyFirst;
}, function (_172) {
    return function (f) {
        return Prelude.bind(Data_Maybe.bindMaybe)(_172)(Prelude["<<<"](Prelude.semigroupoidFn)(runFirst)(f));
    };
});
var applicativeFirst = new Prelude.Applicative(function () {
    return applyFirst;
}, Prelude["<<<"](Prelude.semigroupoidFn)(First)(Prelude.pure(Data_Maybe.applicativeMaybe)));
var monadFirst = new Prelude.Monad(function () {
    return applicativeFirst;
}, function () {
    return bindFirst;
});
module.exports = {
    First: First, 
    runFirst: runFirst, 
    eqFirst: eqFirst, 
    ordFirst: ordFirst, 
    boundedFirst: boundedFirst, 
    functorFirst: functorFirst, 
    applyFirst: applyFirst, 
    applicativeFirst: applicativeFirst, 
    bindFirst: bindFirst, 
    monadFirst: monadFirst, 
    extendFirst: extendFirst, 
    invariantFirst: invariantFirst, 
    showFirst: showFirst, 
    semigroupFirst: semigroupFirst, 
    monoidFirst: monoidFirst
};

},{"Control.Comonad":"/Users/simon/purescript-incremental/example/output/Control.Comonad/index.js","Control.Extend":"/Users/simon/purescript-incremental/example/output/Control.Extend/index.js","Data.Functor.Invariant":"/Users/simon/purescript-incremental/example/output/Data.Functor.Invariant/index.js","Data.Maybe":"/Users/simon/purescript-incremental/example/output/Data.Maybe/index.js","Data.Monoid":"/Users/simon/purescript-incremental/example/output/Data.Monoid/index.js","Prelude":"/Users/simon/purescript-incremental/example/output/Prelude/index.js"}],"/Users/simon/purescript-incremental/example/output/Data.Maybe.Last/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Control_Extend = require("Control.Extend");
var Data_Functor_Invariant = require("Data.Functor.Invariant");
var Control_Comonad = require("Control.Comonad");
var Data_Maybe = require("Data.Maybe");
var Data_Monoid = require("Data.Monoid");
var Last = function (x) {
    return x;
};
var showLast = function (__dict_Show_0) {
    return new Prelude.Show(function (_186) {
        return "Last (" + (Prelude.show(Data_Maybe.showMaybe(__dict_Show_0))(_186) + ")");
    });
};
var semigroupLast = new Prelude.Semigroup(function (last) {
    return function (_187) {
        if (_187 instanceof Data_Maybe.Just) {
            return _187;
        };
        if (_187 instanceof Data_Maybe.Nothing) {
            return last;
        };
        throw new Error("Failed pattern match at /Users/simon/purescript-incremental/example/bower_components/purescript-maybe/src/Data/Maybe/Last.purs line 57, column 1 - line 61, column 1: " + [ last.constructor.name, _187.constructor.name ]);
    };
});
var runLast = function (_176) {
    return _176;
};
var monoidLast = new Data_Monoid.Monoid(function () {
    return semigroupLast;
}, Data_Maybe.Nothing.value);
var functorLast = new Prelude.Functor(function (f) {
    return function (_181) {
        return Prelude["<$>"](Data_Maybe.functorMaybe)(f)(_181);
    };
});
var invariantLast = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorLast));
var extendLast = new Control_Extend.Extend(function () {
    return functorLast;
}, function (f) {
    return function (_185) {
        return Control_Extend.extend(Data_Maybe.extendMaybe)(Prelude["<<<"](Prelude.semigroupoidFn)(f)(Last))(_185);
    };
});
var eqLast = function (__dict_Eq_2) {
    return new Prelude.Eq(function (_177) {
        return function (_178) {
            return Prelude["=="](Data_Maybe.eqMaybe(__dict_Eq_2))(_177)(_178);
        };
    });
};
var ordLast = function (__dict_Ord_1) {
    return new Prelude.Ord(function () {
        return eqLast(__dict_Ord_1["__superclass_Prelude.Eq_0"]());
    }, function (_179) {
        return function (_180) {
            return Prelude.compare(Data_Maybe.ordMaybe(__dict_Ord_1))(_179)(_180);
        };
    });
};
var boundedLast = function (__dict_Bounded_3) {
    return new Prelude.Bounded(Prelude.bottom(Data_Maybe.boundedMaybe(__dict_Bounded_3)), Prelude.top(Data_Maybe.boundedMaybe(__dict_Bounded_3)));
};
var applyLast = new Prelude.Apply(function () {
    return functorLast;
}, function (_182) {
    return function (_183) {
        return Prelude["<*>"](Data_Maybe.applyMaybe)(_182)(_183);
    };
});
var bindLast = new Prelude.Bind(function () {
    return applyLast;
}, function (_184) {
    return function (f) {
        return Prelude.bind(Data_Maybe.bindMaybe)(_184)(Prelude["<<<"](Prelude.semigroupoidFn)(runLast)(f));
    };
});
var applicativeLast = new Prelude.Applicative(function () {
    return applyLast;
}, Prelude["<<<"](Prelude.semigroupoidFn)(Last)(Prelude.pure(Data_Maybe.applicativeMaybe)));
var monadLast = new Prelude.Monad(function () {
    return applicativeLast;
}, function () {
    return bindLast;
});
module.exports = {
    Last: Last, 
    runLast: runLast, 
    eqLast: eqLast, 
    ordLast: ordLast, 
    boundedLast: boundedLast, 
    functorLast: functorLast, 
    applyLast: applyLast, 
    applicativeLast: applicativeLast, 
    bindLast: bindLast, 
    monadLast: monadLast, 
    extendLast: extendLast, 
    invariantLast: invariantLast, 
    showLast: showLast, 
    semigroupLast: semigroupLast, 
    monoidLast: monoidLast
};

},{"Control.Comonad":"/Users/simon/purescript-incremental/example/output/Control.Comonad/index.js","Control.Extend":"/Users/simon/purescript-incremental/example/output/Control.Extend/index.js","Data.Functor.Invariant":"/Users/simon/purescript-incremental/example/output/Data.Functor.Invariant/index.js","Data.Maybe":"/Users/simon/purescript-incremental/example/output/Data.Maybe/index.js","Data.Monoid":"/Users/simon/purescript-incremental/example/output/Data.Monoid/index.js","Prelude":"/Users/simon/purescript-incremental/example/output/Prelude/index.js"}],"/Users/simon/purescript-incremental/example/output/Data.Maybe.Unsafe/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.Maybe.Unsafe

exports.unsafeThrow = function (msg) {
  throw new Error(msg);
};

},{}],"/Users/simon/purescript-incremental/example/output/Data.Maybe.Unsafe/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");
var fromJust = function (_213) {
    if (_213 instanceof Data_Maybe.Just) {
        return _213.value0;
    };
    if (_213 instanceof Data_Maybe.Nothing) {
        return $foreign.unsafeThrow("Data.Maybe.Unsafe.fromJust called on Nothing");
    };
    throw new Error("Failed pattern match at /Users/simon/purescript-incremental/example/bower_components/purescript-maybe/src/Data/Maybe/Unsafe.purs line 10, column 1 - line 11, column 1: " + [ _213.constructor.name ]);
};
module.exports = {
    fromJust: fromJust, 
    unsafeThrow: $foreign.unsafeThrow
};

},{"./foreign":"/Users/simon/purescript-incremental/example/output/Data.Maybe.Unsafe/foreign.js","Data.Maybe":"/Users/simon/purescript-incremental/example/output/Data.Maybe/index.js","Prelude":"/Users/simon/purescript-incremental/example/output/Prelude/index.js"}],"/Users/simon/purescript-incremental/example/output/Data.Maybe/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Functor_Invariant = require("Data.Functor.Invariant");
var Control_Alt = require("Control.Alt");
var Control_Alternative = require("Control.Alternative");
var Control_Extend = require("Control.Extend");
var Control_MonadPlus = require("Control.MonadPlus");
var Control_Plus = require("Control.Plus");
var Data_Monoid = require("Data.Monoid");
var Nothing = (function () {
    function Nothing() {

    };
    Nothing.value = new Nothing();
    return Nothing;
})();
var Just = (function () {
    function Just(value0) {
        this.value0 = value0;
    };
    Just.create = function (value0) {
        return new Just(value0);
    };
    return Just;
})();
var showMaybe = function (__dict_Show_0) {
    return new Prelude.Show(function (_163) {
        if (_163 instanceof Just) {
            return "Just (" + (Prelude.show(__dict_Show_0)(_163.value0) + ")");
        };
        if (_163 instanceof Nothing) {
            return "Nothing";
        };
        throw new Error("Failed pattern match at /Users/simon/purescript-incremental/example/bower_components/purescript-maybe/src/Data/Maybe.purs line 289, column 1 - line 291, column 19: " + [ _163.constructor.name ]);
    });
};
var semigroupMaybe = function (__dict_Semigroup_2) {
    return new Prelude.Semigroup(function (_157) {
        return function (_158) {
            if (_157 instanceof Nothing) {
                return _158;
            };
            if (_158 instanceof Nothing) {
                return _157;
            };
            if (_157 instanceof Just && _158 instanceof Just) {
                return new Just(Prelude["<>"](__dict_Semigroup_2)(_157.value0)(_158.value0));
            };
            throw new Error("Failed pattern match at /Users/simon/purescript-incremental/example/bower_components/purescript-maybe/src/Data/Maybe.purs line 231, column 1 - line 236, column 1: " + [ _157.constructor.name, _158.constructor.name ]);
        };
    });
};
var monoidMaybe = function (__dict_Semigroup_6) {
    return new Data_Monoid.Monoid(function () {
        return semigroupMaybe(__dict_Semigroup_6);
    }, Nothing.value);
};
var maybe$prime = function (g) {
    return function (f) {
        return function (_151) {
            if (_151 instanceof Nothing) {
                return g(Prelude.unit);
            };
            if (_151 instanceof Just) {
                return f(_151.value0);
            };
            throw new Error("Failed pattern match at /Users/simon/purescript-incremental/example/bower_components/purescript-maybe/src/Data/Maybe.purs line 39, column 1 - line 40, column 1: " + [ g.constructor.name, f.constructor.name, _151.constructor.name ]);
        };
    };
};
var maybe = function (b) {
    return function (f) {
        return function (_150) {
            if (_150 instanceof Nothing) {
                return b;
            };
            if (_150 instanceof Just) {
                return f(_150.value0);
            };
            throw new Error("Failed pattern match at /Users/simon/purescript-incremental/example/bower_components/purescript-maybe/src/Data/Maybe.purs line 26, column 1 - line 27, column 1: " + [ b.constructor.name, f.constructor.name, _150.constructor.name ]);
        };
    };
};
var isNothing = maybe(true)(Prelude["const"](false));
var isJust = maybe(false)(Prelude["const"](true));
var functorMaybe = new Prelude.Functor(function (fn) {
    return function (_152) {
        if (_152 instanceof Just) {
            return new Just(fn(_152.value0));
        };
        return Nothing.value;
    };
});
var invariantMaybe = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorMaybe));
var fromMaybe$prime = function (a) {
    return maybe$prime(a)(Prelude.id(Prelude.categoryFn));
};
var fromMaybe = function (a) {
    return maybe(a)(Prelude.id(Prelude.categoryFn));
};
var extendMaybe = new Control_Extend.Extend(function () {
    return functorMaybe;
}, function (f) {
    return function (_156) {
        if (_156 instanceof Nothing) {
            return Nothing.value;
        };
        return new Just(f(_156));
    };
});
var eqMaybe = function (__dict_Eq_8) {
    return new Prelude.Eq(function (_159) {
        return function (_160) {
            if (_159 instanceof Nothing && _160 instanceof Nothing) {
                return true;
            };
            if (_159 instanceof Just && _160 instanceof Just) {
                return Prelude["=="](__dict_Eq_8)(_159.value0)(_160.value0);
            };
            return false;
        };
    });
};
var ordMaybe = function (__dict_Ord_4) {
    return new Prelude.Ord(function () {
        return eqMaybe(__dict_Ord_4["__superclass_Prelude.Eq_0"]());
    }, function (_161) {
        return function (_162) {
            if (_161 instanceof Just && _162 instanceof Just) {
                return Prelude.compare(__dict_Ord_4)(_161.value0)(_162.value0);
            };
            if (_161 instanceof Nothing && _162 instanceof Nothing) {
                return Prelude.EQ.value;
            };
            if (_161 instanceof Nothing) {
                return Prelude.LT.value;
            };
            if (_162 instanceof Nothing) {
                return Prelude.GT.value;
            };
            throw new Error("Failed pattern match at /Users/simon/purescript-incremental/example/bower_components/purescript-maybe/src/Data/Maybe.purs line 269, column 1 - line 275, column 1: " + [ _161.constructor.name, _162.constructor.name ]);
        };
    });
};
var boundedMaybe = function (__dict_Bounded_11) {
    return new Prelude.Bounded(Nothing.value, new Just(Prelude.top(__dict_Bounded_11)));
};
var boundedOrdMaybe = function (__dict_BoundedOrd_10) {
    return new Prelude.BoundedOrd(function () {
        return boundedMaybe(__dict_BoundedOrd_10["__superclass_Prelude.Bounded_0"]());
    }, function () {
        return ordMaybe(__dict_BoundedOrd_10["__superclass_Prelude.Ord_1"]());
    });
};
var applyMaybe = new Prelude.Apply(function () {
    return functorMaybe;
}, function (_153) {
    return function (x) {
        if (_153 instanceof Just) {
            return Prelude["<$>"](functorMaybe)(_153.value0)(x);
        };
        if (_153 instanceof Nothing) {
            return Nothing.value;
        };
        throw new Error("Failed pattern match at /Users/simon/purescript-incremental/example/bower_components/purescript-maybe/src/Data/Maybe.purs line 121, column 1 - line 145, column 1: " + [ _153.constructor.name, x.constructor.name ]);
    };
});
var bindMaybe = new Prelude.Bind(function () {
    return applyMaybe;
}, function (_155) {
    return function (k) {
        if (_155 instanceof Just) {
            return k(_155.value0);
        };
        if (_155 instanceof Nothing) {
            return Nothing.value;
        };
        throw new Error("Failed pattern match at /Users/simon/purescript-incremental/example/bower_components/purescript-maybe/src/Data/Maybe.purs line 180, column 1 - line 199, column 1: " + [ _155.constructor.name, k.constructor.name ]);
    };
});
var booleanAlgebraMaybe = function (__dict_BooleanAlgebra_12) {
    return new Prelude.BooleanAlgebra(function () {
        return boundedMaybe(__dict_BooleanAlgebra_12["__superclass_Prelude.Bounded_0"]());
    }, function (x) {
        return function (y) {
            return Prelude["<*>"](applyMaybe)(Prelude["<$>"](functorMaybe)(Prelude.conj(__dict_BooleanAlgebra_12))(x))(y);
        };
    }, function (x) {
        return function (y) {
            return Prelude["<*>"](applyMaybe)(Prelude["<$>"](functorMaybe)(Prelude.disj(__dict_BooleanAlgebra_12))(x))(y);
        };
    }, Prelude.map(functorMaybe)(Prelude.not(__dict_BooleanAlgebra_12)));
};
var semiringMaybe = function (__dict_Semiring_1) {
    return new Prelude.Semiring(function (x) {
        return function (y) {
            return Prelude["<*>"](applyMaybe)(Prelude["<$>"](functorMaybe)(Prelude.add(__dict_Semiring_1))(x))(y);
        };
    }, function (x) {
        return function (y) {
            return Prelude["<*>"](applyMaybe)(Prelude["<$>"](functorMaybe)(Prelude.mul(__dict_Semiring_1))(x))(y);
        };
    }, new Just(Prelude.one(__dict_Semiring_1)), new Just(Prelude.zero(__dict_Semiring_1)));
};
var moduloSemiringMaybe = function (__dict_ModuloSemiring_7) {
    return new Prelude.ModuloSemiring(function () {
        return semiringMaybe(__dict_ModuloSemiring_7["__superclass_Prelude.Semiring_0"]());
    }, function (x) {
        return function (y) {
            return Prelude["<*>"](applyMaybe)(Prelude["<$>"](functorMaybe)(Prelude.div(__dict_ModuloSemiring_7))(x))(y);
        };
    }, function (x) {
        return function (y) {
            return Prelude["<*>"](applyMaybe)(Prelude["<$>"](functorMaybe)(Prelude.mod(__dict_ModuloSemiring_7))(x))(y);
        };
    });
};
var ringMaybe = function (__dict_Ring_3) {
    return new Prelude.Ring(function () {
        return semiringMaybe(__dict_Ring_3["__superclass_Prelude.Semiring_0"]());
    }, function (x) {
        return function (y) {
            return Prelude["<*>"](applyMaybe)(Prelude["<$>"](functorMaybe)(Prelude.sub(__dict_Ring_3))(x))(y);
        };
    });
};
var divisionRingMaybe = function (__dict_DivisionRing_9) {
    return new Prelude.DivisionRing(function () {
        return moduloSemiringMaybe(__dict_DivisionRing_9["__superclass_Prelude.ModuloSemiring_1"]());
    }, function () {
        return ringMaybe(__dict_DivisionRing_9["__superclass_Prelude.Ring_0"]());
    });
};
var numMaybe = function (__dict_Num_5) {
    return new Prelude.Num(function () {
        return divisionRingMaybe(__dict_Num_5["__superclass_Prelude.DivisionRing_0"]());
    });
};
var applicativeMaybe = new Prelude.Applicative(function () {
    return applyMaybe;
}, Just.create);
var monadMaybe = new Prelude.Monad(function () {
    return applicativeMaybe;
}, function () {
    return bindMaybe;
});
var altMaybe = new Control_Alt.Alt(function () {
    return functorMaybe;
}, function (_154) {
    return function (r) {
        if (_154 instanceof Nothing) {
            return r;
        };
        return _154;
    };
});
var plusMaybe = new Control_Plus.Plus(function () {
    return altMaybe;
}, Nothing.value);
var alternativeMaybe = new Control_Alternative.Alternative(function () {
    return plusMaybe;
}, function () {
    return applicativeMaybe;
});
var monadPlusMaybe = new Control_MonadPlus.MonadPlus(function () {
    return alternativeMaybe;
}, function () {
    return monadMaybe;
});
module.exports = {
    Nothing: Nothing, 
    Just: Just, 
    isNothing: isNothing, 
    isJust: isJust, 
    "fromMaybe'": fromMaybe$prime, 
    fromMaybe: fromMaybe, 
    "maybe'": maybe$prime, 
    maybe: maybe, 
    functorMaybe: functorMaybe, 
    applyMaybe: applyMaybe, 
    applicativeMaybe: applicativeMaybe, 
    altMaybe: altMaybe, 
    plusMaybe: plusMaybe, 
    alternativeMaybe: alternativeMaybe, 
    bindMaybe: bindMaybe, 
    monadMaybe: monadMaybe, 
    monadPlusMaybe: monadPlusMaybe, 
    extendMaybe: extendMaybe, 
    invariantMaybe: invariantMaybe, 
    semigroupMaybe: semigroupMaybe, 
    monoidMaybe: monoidMaybe, 
    semiringMaybe: semiringMaybe, 
    moduloSemiringMaybe: moduloSemiringMaybe, 
    ringMaybe: ringMaybe, 
    divisionRingMaybe: divisionRingMaybe, 
    numMaybe: numMaybe, 
    eqMaybe: eqMaybe, 
    ordMaybe: ordMaybe, 
    boundedMaybe: boundedMaybe, 
    boundedOrdMaybe: boundedOrdMaybe, 
    booleanAlgebraMaybe: booleanAlgebraMaybe, 
    showMaybe: showMaybe
};

},{"Control.Alt":"/Users/simon/purescript-incremental/example/output/Control.Alt/index.js","Control.Alternative":"/Users/simon/purescript-incremental/example/output/Control.Alternative/index.js","Control.Extend":"/Users/simon/purescript-incremental/example/output/Control.Extend/index.js","Control.MonadPlus":"/Users/simon/purescript-incremental/example/output/Control.MonadPlus/index.js","Control.Plus":"/Users/simon/purescript-incremental/example/output/Control.Plus/index.js","Data.Functor.Invariant":"/Users/simon/purescript-incremental/example/output/Data.Functor.Invariant/index.js","Data.Monoid":"/Users/simon/purescript-incremental/example/output/Data.Monoid/index.js","Prelude":"/Users/simon/purescript-incremental/example/output/Prelude/index.js"}],"/Users/simon/purescript-incremental/example/output/Data.Monoid.Additive/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Control_Comonad = require("Control.Comonad");
var Control_Extend = require("Control.Extend");
var Data_Functor_Invariant = require("Data.Functor.Invariant");
var Data_Monoid = require("Data.Monoid");
var Additive = function (x) {
    return x;
};
var showAdditive = function (__dict_Show_0) {
    return new Prelude.Show(function (_71) {
        return "Additive (" + (Prelude.show(__dict_Show_0)(_71) + ")");
    });
};
var semigroupAdditive = function (__dict_Semiring_1) {
    return new Prelude.Semigroup(function (_72) {
        return function (_73) {
            return Prelude["+"](__dict_Semiring_1)(_72)(_73);
        };
    });
};
var runAdditive = function (_60) {
    return _60;
};
var monoidAdditive = function (__dict_Semiring_3) {
    return new Data_Monoid.Monoid(function () {
        return semigroupAdditive(__dict_Semiring_3);
    }, Prelude.zero(__dict_Semiring_3));
};
var invariantAdditive = new Data_Functor_Invariant.Invariant(function (f) {
    return function (_69) {
        return function (_70) {
            return f(_70);
        };
    };
});
var functorAdditive = new Prelude.Functor(function (f) {
    return function (_65) {
        return f(_65);
    };
});
var extendAdditive = new Control_Extend.Extend(function () {
    return functorAdditive;
}, function (f) {
    return function (x) {
        return f(x);
    };
});
var eqAdditive = function (__dict_Eq_4) {
    return new Prelude.Eq(function (_61) {
        return function (_62) {
            return Prelude["=="](__dict_Eq_4)(_61)(_62);
        };
    });
};
var ordAdditive = function (__dict_Ord_2) {
    return new Prelude.Ord(function () {
        return eqAdditive(__dict_Ord_2["__superclass_Prelude.Eq_0"]());
    }, function (_63) {
        return function (_64) {
            return Prelude.compare(__dict_Ord_2)(_63)(_64);
        };
    });
};
var comonadAdditive = new Control_Comonad.Comonad(function () {
    return extendAdditive;
}, runAdditive);
var applyAdditive = new Prelude.Apply(function () {
    return functorAdditive;
}, function (_66) {
    return function (_67) {
        return _66(_67);
    };
});
var bindAdditive = new Prelude.Bind(function () {
    return applyAdditive;
}, function (_68) {
    return function (f) {
        return f(_68);
    };
});
var applicativeAdditive = new Prelude.Applicative(function () {
    return applyAdditive;
}, Additive);
var monadAdditive = new Prelude.Monad(function () {
    return applicativeAdditive;
}, function () {
    return bindAdditive;
});
module.exports = {
    Additive: Additive, 
    runAdditive: runAdditive, 
    eqAdditive: eqAdditive, 
    ordAdditive: ordAdditive, 
    functorAdditive: functorAdditive, 
    applyAdditive: applyAdditive, 
    applicativeAdditive: applicativeAdditive, 
    bindAdditive: bindAdditive, 
    monadAdditive: monadAdditive, 
    extendAdditive: extendAdditive, 
    comonadAdditive: comonadAdditive, 
    invariantAdditive: invariantAdditive, 
    showAdditive: showAdditive, 
    semigroupAdditive: semigroupAdditive, 
    monoidAdditive: monoidAdditive
};

},{"Control.Comonad":"/Users/simon/purescript-incremental/example/output/Control.Comonad/index.js","Control.Extend":"/Users/simon/purescript-incremental/example/output/Control.Extend/index.js","Data.Functor.Invariant":"/Users/simon/purescript-incremental/example/output/Data.Functor.Invariant/index.js","Data.Monoid":"/Users/simon/purescript-incremental/example/output/Data.Monoid/index.js","Prelude":"/Users/simon/purescript-incremental/example/output/Prelude/index.js"}],"/Users/simon/purescript-incremental/example/output/Data.Monoid.Conj/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Control_Comonad = require("Control.Comonad");
var Control_Extend = require("Control.Extend");
var Data_Monoid = require("Data.Monoid");
var Conj = function (x) {
    return x;
};
var showConj = function (__dict_Show_0) {
    return new Prelude.Show(function (_83) {
        return "Conj (" + (Prelude.show(__dict_Show_0)(_83) + ")");
    });
};
var semigroupConj = function (__dict_BooleanAlgebra_1) {
    return new Prelude.Semigroup(function (_84) {
        return function (_85) {
            return Prelude.conj(__dict_BooleanAlgebra_1)(_84)(_85);
        };
    });
};
var runConj = function (_74) {
    return _74;
};
var monoidConj = function (__dict_BooleanAlgebra_3) {
    return new Data_Monoid.Monoid(function () {
        return semigroupConj(__dict_BooleanAlgebra_3);
    }, Prelude.top(__dict_BooleanAlgebra_3["__superclass_Prelude.Bounded_0"]()));
};
var functorConj = new Prelude.Functor(function (f) {
    return function (_79) {
        return f(_79);
    };
});
var extendConj = new Control_Extend.Extend(function () {
    return functorConj;
}, function (f) {
    return function (x) {
        return f(x);
    };
});
var eqConj = function (__dict_Eq_4) {
    return new Prelude.Eq(function (_75) {
        return function (_76) {
            return Prelude["=="](__dict_Eq_4)(_75)(_76);
        };
    });
};
var ordConj = function (__dict_Ord_2) {
    return new Prelude.Ord(function () {
        return eqConj(__dict_Ord_2["__superclass_Prelude.Eq_0"]());
    }, function (_77) {
        return function (_78) {
            return Prelude.compare(__dict_Ord_2)(_77)(_78);
        };
    });
};
var comonadConj = new Control_Comonad.Comonad(function () {
    return extendConj;
}, runConj);
var boundedConj = function (__dict_Bounded_5) {
    return new Prelude.Bounded(Prelude.bottom(__dict_Bounded_5), Prelude.top(__dict_Bounded_5));
};
var applyConj = new Prelude.Apply(function () {
    return functorConj;
}, function (_80) {
    return function (_81) {
        return _80(_81);
    };
});
var bindConj = new Prelude.Bind(function () {
    return applyConj;
}, function (_82) {
    return function (f) {
        return f(_82);
    };
});
var applicativeConj = new Prelude.Applicative(function () {
    return applyConj;
}, Conj);
var monadConj = new Prelude.Monad(function () {
    return applicativeConj;
}, function () {
    return bindConj;
});
module.exports = {
    Conj: Conj, 
    runConj: runConj, 
    eqConj: eqConj, 
    ordConj: ordConj, 
    boundedConj: boundedConj, 
    functorConj: functorConj, 
    applyConj: applyConj, 
    applicativeConj: applicativeConj, 
    bindConj: bindConj, 
    monadConj: monadConj, 
    extendConj: extendConj, 
    comonadConj: comonadConj, 
    showConj: showConj, 
    semigroupConj: semigroupConj, 
    monoidConj: monoidConj
};

},{"Control.Comonad":"/Users/simon/purescript-incremental/example/output/Control.Comonad/index.js","Control.Extend":"/Users/simon/purescript-incremental/example/output/Control.Extend/index.js","Data.Monoid":"/Users/simon/purescript-incremental/example/output/Data.Monoid/index.js","Prelude":"/Users/simon/purescript-incremental/example/output/Prelude/index.js"}],"/Users/simon/purescript-incremental/example/output/Data.Monoid.Disj/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Control_Comonad = require("Control.Comonad");
var Control_Extend = require("Control.Extend");
var Data_Monoid = require("Data.Monoid");
var Disj = function (x) {
    return x;
};
var showDisj = function (__dict_Show_0) {
    return new Prelude.Show(function (_95) {
        return "Disj (" + (Prelude.show(__dict_Show_0)(_95) + ")");
    });
};
var semigroupDisj = function (__dict_BooleanAlgebra_1) {
    return new Prelude.Semigroup(function (_96) {
        return function (_97) {
            return Prelude.disj(__dict_BooleanAlgebra_1)(_96)(_97);
        };
    });
};
var runDisj = function (_86) {
    return _86;
};
var monoidDisj = function (__dict_BooleanAlgebra_3) {
    return new Data_Monoid.Monoid(function () {
        return semigroupDisj(__dict_BooleanAlgebra_3);
    }, Prelude.bottom(__dict_BooleanAlgebra_3["__superclass_Prelude.Bounded_0"]()));
};
var functorDisj = new Prelude.Functor(function (f) {
    return function (_91) {
        return f(_91);
    };
});
var extendDisj = new Control_Extend.Extend(function () {
    return functorDisj;
}, function (f) {
    return function (x) {
        return f(x);
    };
});
var eqDisj = function (__dict_Eq_4) {
    return new Prelude.Eq(function (_87) {
        return function (_88) {
            return Prelude["=="](__dict_Eq_4)(_87)(_88);
        };
    });
};
var ordDisj = function (__dict_Ord_2) {
    return new Prelude.Ord(function () {
        return eqDisj(__dict_Ord_2["__superclass_Prelude.Eq_0"]());
    }, function (_89) {
        return function (_90) {
            return Prelude.compare(__dict_Ord_2)(_89)(_90);
        };
    });
};
var comonadDisj = new Control_Comonad.Comonad(function () {
    return extendDisj;
}, runDisj);
var boundedDisj = function (__dict_Bounded_5) {
    return new Prelude.Bounded(Prelude.bottom(__dict_Bounded_5), Prelude.top(__dict_Bounded_5));
};
var applyDisj = new Prelude.Apply(function () {
    return functorDisj;
}, function (_92) {
    return function (_93) {
        return _92(_93);
    };
});
var bindDisj = new Prelude.Bind(function () {
    return applyDisj;
}, function (_94) {
    return function (f) {
        return f(_94);
    };
});
var applicativeDisj = new Prelude.Applicative(function () {
    return applyDisj;
}, Disj);
var monadDisj = new Prelude.Monad(function () {
    return applicativeDisj;
}, function () {
    return bindDisj;
});
module.exports = {
    Disj: Disj, 
    runDisj: runDisj, 
    eqDisj: eqDisj, 
    ordDisj: ordDisj, 
    boundedDisj: boundedDisj, 
    functorDisj: functorDisj, 
    applyDisj: applyDisj, 
    applicativeDisj: applicativeDisj, 
    bindDisj: bindDisj, 
    monadDisj: monadDisj, 
    extendDisj: extendDisj, 
    comonadDisj: comonadDisj, 
    showDisj: showDisj, 
    semigroupDisj: semigroupDisj, 
    monoidDisj: monoidDisj
};

},{"Control.Comonad":"/Users/simon/purescript-incremental/example/output/Control.Comonad/index.js","Control.Extend":"/Users/simon/purescript-incremental/example/output/Control.Extend/index.js","Data.Monoid":"/Users/simon/purescript-incremental/example/output/Data.Monoid/index.js","Prelude":"/Users/simon/purescript-incremental/example/output/Prelude/index.js"}],"/Users/simon/purescript-incremental/example/output/Data.Monoid.Dual/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Monoid = require("Data.Monoid");
var Control_Comonad = require("Control.Comonad");
var Control_Extend = require("Control.Extend");
var Data_Functor_Invariant = require("Data.Functor.Invariant");
var Dual = function (x) {
    return x;
};
var showDual = function (__dict_Show_0) {
    return new Prelude.Show(function (_109) {
        return "Dual (" + (Prelude.show(__dict_Show_0)(_109) + ")");
    });
};
var semigroupDual = function (__dict_Semigroup_1) {
    return new Prelude.Semigroup(function (_110) {
        return function (_111) {
            return Prelude["<>"](__dict_Semigroup_1)(_111)(_110);
        };
    });
};
var runDual = function (_98) {
    return _98;
};
var monoidDual = function (__dict_Monoid_3) {
    return new Data_Monoid.Monoid(function () {
        return semigroupDual(__dict_Monoid_3["__superclass_Prelude.Semigroup_0"]());
    }, Data_Monoid.mempty(__dict_Monoid_3));
};
var invariantDual = new Data_Functor_Invariant.Invariant(function (f) {
    return function (_107) {
        return function (_108) {
            return f(_108);
        };
    };
});
var functorDual = new Prelude.Functor(function (f) {
    return function (_103) {
        return f(_103);
    };
});
var extendDual = new Control_Extend.Extend(function () {
    return functorDual;
}, function (f) {
    return function (x) {
        return f(x);
    };
});
var eqDual = function (__dict_Eq_4) {
    return new Prelude.Eq(function (_99) {
        return function (_100) {
            return Prelude["=="](__dict_Eq_4)(_99)(_100);
        };
    });
};
var ordDual = function (__dict_Ord_2) {
    return new Prelude.Ord(function () {
        return eqDual(__dict_Ord_2["__superclass_Prelude.Eq_0"]());
    }, function (_101) {
        return function (_102) {
            return Prelude.compare(__dict_Ord_2)(_101)(_102);
        };
    });
};
var comonadDual = new Control_Comonad.Comonad(function () {
    return extendDual;
}, runDual);
var applyDual = new Prelude.Apply(function () {
    return functorDual;
}, function (_104) {
    return function (_105) {
        return _104(_105);
    };
});
var bindDual = new Prelude.Bind(function () {
    return applyDual;
}, function (_106) {
    return function (f) {
        return f(_106);
    };
});
var applicativeDual = new Prelude.Applicative(function () {
    return applyDual;
}, Dual);
var monadDual = new Prelude.Monad(function () {
    return applicativeDual;
}, function () {
    return bindDual;
});
module.exports = {
    Dual: Dual, 
    runDual: runDual, 
    eqDual: eqDual, 
    ordDual: ordDual, 
    functorDual: functorDual, 
    applyDual: applyDual, 
    applicativeDual: applicativeDual, 
    bindDual: bindDual, 
    monadDual: monadDual, 
    extendDual: extendDual, 
    comonadDual: comonadDual, 
    invariantDual: invariantDual, 
    showDual: showDual, 
    semigroupDual: semigroupDual, 
    monoidDual: monoidDual
};

},{"Control.Comonad":"/Users/simon/purescript-incremental/example/output/Control.Comonad/index.js","Control.Extend":"/Users/simon/purescript-incremental/example/output/Control.Extend/index.js","Data.Functor.Invariant":"/Users/simon/purescript-incremental/example/output/Data.Functor.Invariant/index.js","Data.Monoid":"/Users/simon/purescript-incremental/example/output/Data.Monoid/index.js","Prelude":"/Users/simon/purescript-incremental/example/output/Prelude/index.js"}],"/Users/simon/purescript-incremental/example/output/Data.Monoid.Multiplicative/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Control_Comonad = require("Control.Comonad");
var Control_Extend = require("Control.Extend");
var Data_Functor_Invariant = require("Data.Functor.Invariant");
var Data_Monoid = require("Data.Monoid");
var Multiplicative = function (x) {
    return x;
};
var showMultiplicative = function (__dict_Show_0) {
    return new Prelude.Show(function (_123) {
        return "Multiplicative (" + (Prelude.show(__dict_Show_0)(_123) + ")");
    });
};
var semigroupMultiplicative = function (__dict_Semiring_1) {
    return new Prelude.Semigroup(function (_124) {
        return function (_125) {
            return Prelude["*"](__dict_Semiring_1)(_124)(_125);
        };
    });
};
var runMultiplicative = function (_112) {
    return _112;
};
var monoidMultiplicative = function (__dict_Semiring_3) {
    return new Data_Monoid.Monoid(function () {
        return semigroupMultiplicative(__dict_Semiring_3);
    }, Prelude.one(__dict_Semiring_3));
};
var invariantMultiplicative = new Data_Functor_Invariant.Invariant(function (f) {
    return function (_121) {
        return function (_122) {
            return f(_122);
        };
    };
});
var functorMultiplicative = new Prelude.Functor(function (f) {
    return function (_117) {
        return f(_117);
    };
});
var extendMultiplicative = new Control_Extend.Extend(function () {
    return functorMultiplicative;
}, function (f) {
    return function (x) {
        return f(x);
    };
});
var eqMultiplicative = function (__dict_Eq_4) {
    return new Prelude.Eq(function (_113) {
        return function (_114) {
            return Prelude["=="](__dict_Eq_4)(_113)(_114);
        };
    });
};
var ordMultiplicative = function (__dict_Ord_2) {
    return new Prelude.Ord(function () {
        return eqMultiplicative(__dict_Ord_2["__superclass_Prelude.Eq_0"]());
    }, function (_115) {
        return function (_116) {
            return Prelude.compare(__dict_Ord_2)(_115)(_116);
        };
    });
};
var comonadMultiplicative = new Control_Comonad.Comonad(function () {
    return extendMultiplicative;
}, runMultiplicative);
var applyMultiplicative = new Prelude.Apply(function () {
    return functorMultiplicative;
}, function (_118) {
    return function (_119) {
        return _118(_119);
    };
});
var bindMultiplicative = new Prelude.Bind(function () {
    return applyMultiplicative;
}, function (_120) {
    return function (f) {
        return f(_120);
    };
});
var applicativeMultiplicative = new Prelude.Applicative(function () {
    return applyMultiplicative;
}, Multiplicative);
var monadMultiplicative = new Prelude.Monad(function () {
    return applicativeMultiplicative;
}, function () {
    return bindMultiplicative;
});
module.exports = {
    Multiplicative: Multiplicative, 
    runMultiplicative: runMultiplicative, 
    eqMultiplicative: eqMultiplicative, 
    ordMultiplicative: ordMultiplicative, 
    functorMultiplicative: functorMultiplicative, 
    applyMultiplicative: applyMultiplicative, 
    applicativeMultiplicative: applicativeMultiplicative, 
    bindMultiplicative: bindMultiplicative, 
    monadMultiplicative: monadMultiplicative, 
    extendMultiplicative: extendMultiplicative, 
    comonadMultiplicative: comonadMultiplicative, 
    invariantMultiplicative: invariantMultiplicative, 
    showMultiplicative: showMultiplicative, 
    semigroupMultiplicative: semigroupMultiplicative, 
    monoidMultiplicative: monoidMultiplicative
};

},{"Control.Comonad":"/Users/simon/purescript-incremental/example/output/Control.Comonad/index.js","Control.Extend":"/Users/simon/purescript-incremental/example/output/Control.Extend/index.js","Data.Functor.Invariant":"/Users/simon/purescript-incremental/example/output/Data.Functor.Invariant/index.js","Data.Monoid":"/Users/simon/purescript-incremental/example/output/Data.Monoid/index.js","Prelude":"/Users/simon/purescript-incremental/example/output/Prelude/index.js"}],"/Users/simon/purescript-incremental/example/output/Data.Monoid/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Monoid = function (__superclass_Prelude$dotSemigroup_0, mempty) {
    this["__superclass_Prelude.Semigroup_0"] = __superclass_Prelude$dotSemigroup_0;
    this.mempty = mempty;
};
var monoidUnit = new Monoid(function () {
    return Prelude.semigroupUnit;
}, Prelude.unit);
var monoidString = new Monoid(function () {
    return Prelude.semigroupString;
}, "");
var monoidArray = new Monoid(function () {
    return Prelude.semigroupArray;
}, [  ]);
var mempty = function (dict) {
    return dict.mempty;
};
var monoidFn = function (__dict_Monoid_0) {
    return new Monoid(function () {
        return Prelude.semigroupFn(__dict_Monoid_0["__superclass_Prelude.Semigroup_0"]());
    }, Prelude["const"](mempty(__dict_Monoid_0)));
};
module.exports = {
    Monoid: Monoid, 
    mempty: mempty, 
    monoidUnit: monoidUnit, 
    monoidFn: monoidFn, 
    monoidString: monoidString, 
    monoidArray: monoidArray
};

},{"Prelude":"/Users/simon/purescript-incremental/example/output/Prelude/index.js"}],"/Users/simon/purescript-incremental/example/output/Data.Nullable/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.Nullable

exports["null"] = null;

exports.nullable = function(a, r, f) {
    return a == null ? r : f(a);
};

exports.notNull = function(x) {
    return x;
}; 

},{}],"/Users/simon/purescript-incremental/example/output/Data.Nullable/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Data_Maybe = require("Data.Maybe");
var Data_Function = require("Data.Function");
var Prelude = require("Prelude");
var toNullable = Data_Maybe.maybe($foreign["null"])($foreign.notNull);
var toMaybe = function (n) {
    return $foreign.nullable(n, Data_Maybe.Nothing.value, Data_Maybe.Just.create);
};
var showNullable = function (__dict_Show_0) {
    return new Prelude.Show(function (n) {
        var _411 = toMaybe(n);
        if (_411 instanceof Data_Maybe.Nothing) {
            return "null";
        };
        if (_411 instanceof Data_Maybe.Just) {
            return Prelude.show(__dict_Show_0)(_411.value0);
        };
        throw new Error("Failed pattern match at /Users/simon/purescript-incremental/example/bower_components/purescript-nullable/src/Data/Nullable.purs line 37, column 1 - line 42, column 1: " + [ _411.constructor.name ]);
    });
};
var eqNullable = function (__dict_Eq_2) {
    return new Prelude.Eq(Data_Function.on(Prelude.eq(Data_Maybe.eqMaybe(__dict_Eq_2)))(toMaybe));
};
var ordNullable = function (__dict_Ord_1) {
    return new Prelude.Ord(function () {
        return eqNullable(__dict_Ord_1["__superclass_Prelude.Eq_0"]());
    }, Data_Function.on(Prelude.compare(Data_Maybe.ordMaybe(__dict_Ord_1)))(toMaybe));
};
module.exports = {
    toNullable: toNullable, 
    toMaybe: toMaybe, 
    showNullable: showNullable, 
    eqNullable: eqNullable, 
    ordNullable: ordNullable
};

},{"./foreign":"/Users/simon/purescript-incremental/example/output/Data.Nullable/foreign.js","Data.Function":"/Users/simon/purescript-incremental/example/output/Data.Function/index.js","Data.Maybe":"/Users/simon/purescript-incremental/example/output/Data.Maybe/index.js","Prelude":"/Users/simon/purescript-incremental/example/output/Prelude/index.js"}],"/Users/simon/purescript-incremental/example/output/Data.String.Unsafe/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.String.Unsafe

exports.charCodeAt = function (i) {
  return function (s) {
    if (i >= 0 && i < s.length) return s.charCodeAt(i);
    throw new Error("Data.String.Unsafe.charCodeAt: Invalid index.");
  };
};

exports.charAt = function (i) {
  return function (s) {
    if (i >= 0 && i < s.length) return s.charAt(i);
    throw new Error("Data.String.Unsafe.charAt: Invalid index.");
  };
};

exports.char = function (s) {
  if (s.length === 1) return s.charAt(0);
  throw new Error("Data.String.Unsafe.char: Expected string of length 1.");
};

},{}],"/Users/simon/purescript-incremental/example/output/Data.String.Unsafe/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Data_Char = require("Data.Char");
module.exports = {
    charCodeAt: $foreign.charCodeAt, 
    charAt: $foreign.charAt, 
    "char": $foreign["char"]
};

},{"./foreign":"/Users/simon/purescript-incremental/example/output/Data.String.Unsafe/foreign.js","Data.Char":"/Users/simon/purescript-incremental/example/output/Data.Char/index.js"}],"/Users/simon/purescript-incremental/example/output/Data.String/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.String

exports._charAt = function (just) {
  return function (nothing) {
    return function (i) {
      return function (s) {
        return i >= 0 && i < s.length ? just(s.charAt(i)) : nothing;
      };
    };
  };
};

exports._charCodeAt = function (just) {
  return function (nothing) {
    return function (i) {
      return function (s) {
        return i >= 0 && i < s.length ? just(s.charCodeAt(i)) : nothing;
      };
    };
  };
};

exports._toChar = function (just) {
  return function (nothing) {
    return function (s) {
      return s.length === 1 ? just(s) : nothing;
    };
  };
};

exports.fromCharArray = function (a) {
  return a.join("");
};

exports._indexOf = function (just) {
  return function (nothing) {
    return function (x) {
      return function (s) {
        var i = s.indexOf(x);
        return i === -1 ? nothing : just(i);
      };
    };
  };
};

exports["_indexOf'"] = function (just) {
  return function (nothing) {
    return function (x) {
      return function (startAt) {
        return function (s) {
          if (startAt < 0 || startAt > s.length) return nothing;
          var i = s.indexOf(x, startAt);
          return i === -1 ? nothing : just(i);
        };
      };
    };
  };
};

exports._lastIndexOf = function (just) {
  return function (nothing) {
    return function (x) {
      return function (s) {
        var i = s.lastIndexOf(x);
        return i === -1 ? nothing : just(i);
      };
    };
  };
};

exports["_lastIndexOf'"] = function (just) {
  return function (nothing) {
    return function (x) {
      return function (startAt) {
        return function (s) {
          if (startAt < 0 || startAt > s.length) return nothing;
          var i = s.lastIndexOf(x, startAt);
          return i === -1 ? nothing : just(i);
        };
      };
    };
  };
};

exports.length = function (s) {
  return s.length;
};

exports._localeCompare = function (lt) {
  return function (eq) {
    return function (gt) {
      return function (s1) {
        return function (s2) {
          var result = s1.localeCompare(s2);
          return result < 0 ? lt : result > 0 ? gt : eq;
        };
      };
    };
  };
};

exports.replace = function (s1) {
  return function (s2) {
    return function (s3) {
      return s3.replace(s1, s2);
    };
  };
};

exports.take = function (n) {
  return function (s) {
    return s.substr(0, n);
  };
};

exports.drop = function (n) {
  return function (s) {
    return s.substr(n);
  };
};

exports.count = function (p) {
  return function (s) {
    for (var i = 0; i < s.length && p(s.charAt(i)); i++); {}
    return i;
  };
};

exports.split = function (sep) {
  return function (s) {
    return s.split(sep);
  };
};

exports.toCharArray = function (s) {
  return s.split("");
};

exports.toLower = function (s) {
  return s.toLowerCase();
};

exports.toUpper = function (s) {
  return s.toUpperCase();
};

exports.trim = function (s) {
  return s.trim();
};

exports.joinWith = function (s) {
  return function (xs) {
    return xs.join(s);
  };
};

},{}],"/Users/simon/purescript-incremental/example/output/Data.String/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Data_Char = require("Data.Char");
var Prelude = require("Prelude");
var Data_String_Unsafe = require("Data.String.Unsafe");
var Data_Maybe = require("Data.Maybe");
var Data_Monoid = require("Data.Monoid");
var uncons = function (_214) {
    if (_214 === "") {
        return Data_Maybe.Nothing.value;
    };
    return new Data_Maybe.Just({
        head: Data_String_Unsafe.charAt(Prelude.zero(Prelude.semiringInt))(_214), 
        tail: $foreign.drop(Prelude.one(Prelude.semiringInt))(_214)
    });
};
var toChar = $foreign._toChar(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var takeWhile = function (p) {
    return function (s) {
        return $foreign.take($foreign.count(p)(s))(s);
    };
};
var $$null = function (s) {
    return Prelude["=="](Prelude.eqInt)($foreign.length(s))(Prelude.zero(Prelude.semiringInt));
};
var localeCompare = $foreign._localeCompare(Prelude.LT.value)(Prelude.EQ.value)(Prelude.GT.value);
var lastIndexOf$prime = $foreign["_lastIndexOf'"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var lastIndexOf = $foreign._lastIndexOf(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var stripSuffix = function (suffix) {
    return function (str) {
        var _413 = lastIndexOf(suffix)(str);
        if (_413 instanceof Data_Maybe.Just && Prelude["=="](Prelude.eqInt)(_413.value0)(Prelude["-"](Prelude.ringInt)($foreign.length(str))($foreign.length(suffix)))) {
            return Data_Maybe.Just.create($foreign.take(_413.value0)(str));
        };
        return Data_Maybe.Nothing.value;
    };
};
var indexOf$prime = $foreign["_indexOf'"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var indexOf = $foreign._indexOf(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var stripPrefix = function (prefix) {
    return function (str) {
        var _415 = indexOf(prefix)(str);
        if (_415 instanceof Data_Maybe.Just && _415.value0 === 0) {
            return Data_Maybe.Just.create($foreign.drop($foreign.length(prefix))(str));
        };
        return Data_Maybe.Nothing.value;
    };
};
var fromChar = Data_Char.toString;
var singleton = fromChar;
var dropWhile = function (p) {
    return function (s) {
        return $foreign.drop($foreign.count(p)(s))(s);
    };
};
var contains = function (x) {
    return function (s) {
        return Data_Maybe.isJust(indexOf(x)(s));
    };
};
var charCodeAt = $foreign._charCodeAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var charAt = $foreign._charAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
module.exports = {
    stripSuffix: stripSuffix, 
    stripPrefix: stripPrefix, 
    dropWhile: dropWhile, 
    takeWhile: takeWhile, 
    localeCompare: localeCompare, 
    singleton: singleton, 
    uncons: uncons, 
    "null": $$null, 
    "lastIndexOf'": lastIndexOf$prime, 
    lastIndexOf: lastIndexOf, 
    "indexOf'": indexOf$prime, 
    indexOf: indexOf, 
    contains: contains, 
    toChar: toChar, 
    fromChar: fromChar, 
    charCodeAt: charCodeAt, 
    charAt: charAt, 
    joinWith: $foreign.joinWith, 
    trim: $foreign.trim, 
    toUpper: $foreign.toUpper, 
    toLower: $foreign.toLower, 
    toCharArray: $foreign.toCharArray, 
    split: $foreign.split, 
    drop: $foreign.drop, 
    take: $foreign.take, 
    count: $foreign.count, 
    replace: $foreign.replace, 
    length: $foreign.length, 
    fromCharArray: $foreign.fromCharArray
};

},{"./foreign":"/Users/simon/purescript-incremental/example/output/Data.String/foreign.js","Data.Char":"/Users/simon/purescript-incremental/example/output/Data.Char/index.js","Data.Maybe":"/Users/simon/purescript-incremental/example/output/Data.Maybe/index.js","Data.Monoid":"/Users/simon/purescript-incremental/example/output/Data.Monoid/index.js","Data.String.Unsafe":"/Users/simon/purescript-incremental/example/output/Data.String.Unsafe/index.js","Prelude":"/Users/simon/purescript-incremental/example/output/Prelude/index.js"}],"/Users/simon/purescript-incremental/example/output/Data.Traversable/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.Traversable

// jshint maxparams: 3

exports.traverseArrayImpl = function () {
  function Cont (fn) {
    this.fn = fn;
  }

  var emptyList = {};

  var ConsCell = function (head, tail) {
    this.head = head;
    this.tail = tail;
  };

  function consList (x) {
    return function (xs) {
      return new ConsCell(x, xs);
    };
  }

  function listToArray (list) {
    var arr = [];
    while (list !== emptyList) {
      arr.push(list.head);
      list = list.tail;
    }
    return arr;
  }

  return function (apply) {
    return function (map) {
      return function (pure) {
        return function (f) {
          var buildFrom = function (x, ys) {
            return apply(map(consList)(f(x)))(ys);
          };

          var go = function (acc, currentLen, xs) {
            if (currentLen === 0) {
              return acc;
            } else {
              var last = xs[currentLen - 1];
              return new Cont(function () {
                return go(buildFrom(last, acc), currentLen - 1, xs);
              });
            }
          };

          return function (array) {
            var result = go(pure(emptyList), array.length, array);
            while (result instanceof Cont) {
              result = result.fn();
            }

            return map(listToArray)(result);
          };
        };
      };
    };
  };
}();

},{}],"/Users/simon/purescript-incremental/example/output/Data.Traversable/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Data_Foldable = require("Data.Foldable");
var Data_Maybe = require("Data.Maybe");
var Data_Maybe_First = require("Data.Maybe.First");
var Data_Maybe_Last = require("Data.Maybe.Last");
var Data_Monoid_Additive = require("Data.Monoid.Additive");
var Data_Monoid_Dual = require("Data.Monoid.Dual");
var Data_Monoid_Multiplicative = require("Data.Monoid.Multiplicative");
var Data_Monoid_Disj = require("Data.Monoid.Disj");
var Data_Monoid_Conj = require("Data.Monoid.Conj");
var StateL = function (x) {
    return x;
};
var StateR = function (x) {
    return x;
};
var Traversable = function (__superclass_Data$dotFoldable$dotFoldable_1, __superclass_Prelude$dotFunctor_0, sequence, traverse) {
    this["__superclass_Data.Foldable.Foldable_1"] = __superclass_Data$dotFoldable$dotFoldable_1;
    this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    this.sequence = sequence;
    this.traverse = traverse;
};
var traverse = function (dict) {
    return dict.traverse;
};
var traversableMultiplicative = new Traversable(function () {
    return Data_Foldable.foldableMultiplicative;
}, function () {
    return Data_Monoid_Multiplicative.functorMultiplicative;
}, function (__dict_Applicative_1) {
    return function (_232) {
        return Prelude["<$>"]((__dict_Applicative_1["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Monoid_Multiplicative.Multiplicative)(_232);
    };
}, function (__dict_Applicative_0) {
    return function (f) {
        return function (_231) {
            return Prelude["<$>"]((__dict_Applicative_0["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Monoid_Multiplicative.Multiplicative)(f(_231));
        };
    };
});
var traversableMaybe = new Traversable(function () {
    return Data_Foldable.foldableMaybe;
}, function () {
    return Data_Maybe.functorMaybe;
}, function (__dict_Applicative_3) {
    return function (_218) {
        if (_218 instanceof Data_Maybe.Nothing) {
            return Prelude.pure(__dict_Applicative_3)(Data_Maybe.Nothing.value);
        };
        if (_218 instanceof Data_Maybe.Just) {
            return Prelude["<$>"]((__dict_Applicative_3["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Maybe.Just.create)(_218.value0);
        };
        throw new Error("Failed pattern match at /Users/simon/purescript-incremental/example/bower_components/purescript-foldable-traversable/src/Data/Traversable.purs line 59, column 1 - line 65, column 1: " + [ _218.constructor.name ]);
    };
}, function (__dict_Applicative_2) {
    return function (f) {
        return function (_217) {
            if (_217 instanceof Data_Maybe.Nothing) {
                return Prelude.pure(__dict_Applicative_2)(Data_Maybe.Nothing.value);
            };
            if (_217 instanceof Data_Maybe.Just) {
                return Prelude["<$>"]((__dict_Applicative_2["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Maybe.Just.create)(f(_217.value0));
            };
            throw new Error("Failed pattern match at /Users/simon/purescript-incremental/example/bower_components/purescript-foldable-traversable/src/Data/Traversable.purs line 59, column 1 - line 65, column 1: " + [ f.constructor.name, _217.constructor.name ]);
        };
    };
});
var traversableDual = new Traversable(function () {
    return Data_Foldable.foldableDual;
}, function () {
    return Data_Monoid_Dual.functorDual;
}, function (__dict_Applicative_5) {
    return function (_226) {
        return Prelude["<$>"]((__dict_Applicative_5["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Monoid_Dual.Dual)(_226);
    };
}, function (__dict_Applicative_4) {
    return function (f) {
        return function (_225) {
            return Prelude["<$>"]((__dict_Applicative_4["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Monoid_Dual.Dual)(f(_225));
        };
    };
});
var traversableDisj = new Traversable(function () {
    return Data_Foldable.foldableDisj;
}, function () {
    return Data_Monoid_Disj.functorDisj;
}, function (__dict_Applicative_7) {
    return function (_230) {
        return Prelude["<$>"]((__dict_Applicative_7["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Monoid_Disj.Disj)(_230);
    };
}, function (__dict_Applicative_6) {
    return function (f) {
        return function (_229) {
            return Prelude["<$>"]((__dict_Applicative_6["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Monoid_Disj.Disj)(f(_229));
        };
    };
});
var traversableConj = new Traversable(function () {
    return Data_Foldable.foldableConj;
}, function () {
    return Data_Monoid_Conj.functorConj;
}, function (__dict_Applicative_9) {
    return function (_228) {
        return Prelude["<$>"]((__dict_Applicative_9["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Monoid_Conj.Conj)(_228);
    };
}, function (__dict_Applicative_8) {
    return function (f) {
        return function (_227) {
            return Prelude["<$>"]((__dict_Applicative_8["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Monoid_Conj.Conj)(f(_227));
        };
    };
});
var traversableArray = new Traversable(function () {
    return Data_Foldable.foldableArray;
}, function () {
    return Prelude.functorArray;
}, function (__dict_Applicative_11) {
    return traverse(traversableArray)(__dict_Applicative_11)(Prelude.id(Prelude.categoryFn));
}, function (__dict_Applicative_10) {
    return $foreign.traverseArrayImpl(Prelude.apply(__dict_Applicative_10["__superclass_Prelude.Apply_0"]()))(Prelude.map((__dict_Applicative_10["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]()))(Prelude.pure(__dict_Applicative_10));
});
var traversableAdditive = new Traversable(function () {
    return Data_Foldable.foldableAdditive;
}, function () {
    return Data_Monoid_Additive.functorAdditive;
}, function (__dict_Applicative_13) {
    return function (_224) {
        return Prelude["<$>"]((__dict_Applicative_13["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Monoid_Additive.Additive)(_224);
    };
}, function (__dict_Applicative_12) {
    return function (f) {
        return function (_223) {
            return Prelude["<$>"]((__dict_Applicative_12["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Monoid_Additive.Additive)(f(_223));
        };
    };
});
var stateR = function (_216) {
    return _216;
};
var stateL = function (_215) {
    return _215;
};
var sequence = function (dict) {
    return dict.sequence;
};
var traversableFirst = new Traversable(function () {
    return Data_Foldable.foldableFirst;
}, function () {
    return Data_Maybe_First.functorFirst;
}, function (__dict_Applicative_15) {
    return function (_220) {
        return Prelude["<$>"]((__dict_Applicative_15["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Maybe_First.First)(sequence(traversableMaybe)(__dict_Applicative_15)(_220));
    };
}, function (__dict_Applicative_14) {
    return function (f) {
        return function (_219) {
            return Prelude["<$>"]((__dict_Applicative_14["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Maybe_First.First)(traverse(traversableMaybe)(__dict_Applicative_14)(f)(_219));
        };
    };
});
var traversableLast = new Traversable(function () {
    return Data_Foldable.foldableLast;
}, function () {
    return Data_Maybe_Last.functorLast;
}, function (__dict_Applicative_17) {
    return function (_222) {
        return Prelude["<$>"]((__dict_Applicative_17["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Maybe_Last.Last)(sequence(traversableMaybe)(__dict_Applicative_17)(_222));
    };
}, function (__dict_Applicative_16) {
    return function (f) {
        return function (_221) {
            return Prelude["<$>"]((__dict_Applicative_16["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Maybe_Last.Last)(traverse(traversableMaybe)(__dict_Applicative_16)(f)(_221));
        };
    };
});
var functorStateR = new Prelude.Functor(function (f) {
    return function (k) {
        return function (s) {
            var _442 = stateR(k)(s);
            return {
                accum: _442.accum, 
                value: f(_442.value)
            };
        };
    };
});
var functorStateL = new Prelude.Functor(function (f) {
    return function (k) {
        return function (s) {
            var _445 = stateL(k)(s);
            return {
                accum: _445.accum, 
                value: f(_445.value)
            };
        };
    };
});
var $$for = function (__dict_Applicative_22) {
    return function (__dict_Traversable_23) {
        return function (x) {
            return function (f) {
                return traverse(__dict_Traversable_23)(__dict_Applicative_22)(f)(x);
            };
        };
    };
};
var applyStateR = new Prelude.Apply(function () {
    return functorStateR;
}, function (f) {
    return function (x) {
        return function (s) {
            var _448 = stateR(x)(s);
            var _449 = stateR(f)(_448.accum);
            return {
                accum: _449.accum, 
                value: _449.value(_448.value)
            };
        };
    };
});
var applyStateL = new Prelude.Apply(function () {
    return functorStateL;
}, function (f) {
    return function (x) {
        return function (s) {
            var _454 = stateL(f)(s);
            var _455 = stateL(x)(_454.accum);
            return {
                accum: _455.accum, 
                value: _454.value(_455.value)
            };
        };
    };
});
var applicativeStateR = new Prelude.Applicative(function () {
    return applyStateR;
}, function (a) {
    return function (s) {
        return {
            accum: s, 
            value: a
        };
    };
});
var mapAccumR = function (__dict_Traversable_18) {
    return function (f) {
        return function (s0) {
            return function (xs) {
                return stateR(traverse(__dict_Traversable_18)(applicativeStateR)(function (a) {
                    return function (s) {
                        return f(s)(a);
                    };
                })(xs))(s0);
            };
        };
    };
};
var scanr = function (__dict_Traversable_19) {
    return function (f) {
        return function (b0) {
            return function (xs) {
                return (mapAccumR(__dict_Traversable_19)(function (b) {
                    return function (a) {
                        var b$prime = f(a)(b);
                        return {
                            accum: b$prime, 
                            value: b$prime
                        };
                    };
                })(b0)(xs)).value;
            };
        };
    };
};
var applicativeStateL = new Prelude.Applicative(function () {
    return applyStateL;
}, function (a) {
    return function (s) {
        return {
            accum: s, 
            value: a
        };
    };
});
var mapAccumL = function (__dict_Traversable_20) {
    return function (f) {
        return function (s0) {
            return function (xs) {
                return stateL(traverse(__dict_Traversable_20)(applicativeStateL)(function (a) {
                    return function (s) {
                        return f(s)(a);
                    };
                })(xs))(s0);
            };
        };
    };
};
var scanl = function (__dict_Traversable_21) {
    return function (f) {
        return function (b0) {
            return function (xs) {
                return (mapAccumL(__dict_Traversable_21)(function (b) {
                    return function (a) {
                        var b$prime = f(b)(a);
                        return {
                            accum: b$prime, 
                            value: b$prime
                        };
                    };
                })(b0)(xs)).value;
            };
        };
    };
};
module.exports = {
    Traversable: Traversable, 
    mapAccumR: mapAccumR, 
    mapAccumL: mapAccumL, 
    scanr: scanr, 
    scanl: scanl, 
    "for": $$for, 
    sequence: sequence, 
    traverse: traverse, 
    traversableArray: traversableArray, 
    traversableMaybe: traversableMaybe, 
    traversableFirst: traversableFirst, 
    traversableLast: traversableLast, 
    traversableAdditive: traversableAdditive, 
    traversableDual: traversableDual, 
    traversableConj: traversableConj, 
    traversableDisj: traversableDisj, 
    traversableMultiplicative: traversableMultiplicative
};

},{"./foreign":"/Users/simon/purescript-incremental/example/output/Data.Traversable/foreign.js","Data.Foldable":"/Users/simon/purescript-incremental/example/output/Data.Foldable/index.js","Data.Maybe":"/Users/simon/purescript-incremental/example/output/Data.Maybe/index.js","Data.Maybe.First":"/Users/simon/purescript-incremental/example/output/Data.Maybe.First/index.js","Data.Maybe.Last":"/Users/simon/purescript-incremental/example/output/Data.Maybe.Last/index.js","Data.Monoid.Additive":"/Users/simon/purescript-incremental/example/output/Data.Monoid.Additive/index.js","Data.Monoid.Conj":"/Users/simon/purescript-incremental/example/output/Data.Monoid.Conj/index.js","Data.Monoid.Disj":"/Users/simon/purescript-incremental/example/output/Data.Monoid.Disj/index.js","Data.Monoid.Dual":"/Users/simon/purescript-incremental/example/output/Data.Monoid.Dual/index.js","Data.Monoid.Multiplicative":"/Users/simon/purescript-incremental/example/output/Data.Monoid.Multiplicative/index.js","Prelude":"/Users/simon/purescript-incremental/example/output/Prelude/index.js"}],"/Users/simon/purescript-incremental/example/output/Data.Tuple/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Monoid = require("Data.Monoid");
var Data_Functor_Invariant = require("Data.Functor.Invariant");
var Control_Lazy = require("Control.Lazy");
var Data_Maybe_First = require("Data.Maybe.First");
var Data_Foldable = require("Data.Foldable");
var Control_Biapplicative = require("Control.Biapplicative");
var Control_Biapply = require("Control.Biapply");
var Control_Comonad = require("Control.Comonad");
var Control_Extend = require("Control.Extend");
var Data_Bifoldable = require("Data.Bifoldable");
var Data_Bifunctor = require("Data.Bifunctor");
var Data_Bitraversable = require("Data.Bitraversable");
var Data_Maybe = require("Data.Maybe");
var Data_Traversable = require("Data.Traversable");
var Tuple = (function () {
    function Tuple(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Tuple.create = function (value0) {
        return function (value1) {
            return new Tuple(value0, value1);
        };
    };
    return Tuple;
})();
var uncurry = function (f) {
    return function (_268) {
        return f(_268.value0)(_268.value1);
    };
};
var swap = function (_269) {
    return new Tuple(_269.value1, _269.value0);
};
var snd = function (_267) {
    return _267.value1;
};
var showTuple = function (__dict_Show_2) {
    return function (__dict_Show_3) {
        return new Prelude.Show(function (_270) {
            return "Tuple (" + (Prelude.show(__dict_Show_2)(_270.value0) + (") (" + (Prelude.show(__dict_Show_3)(_270.value1) + ")")));
        });
    };
};
var semiringTuple = function (__dict_Semiring_4) {
    return function (__dict_Semiring_5) {
        return new Prelude.Semiring(function (_279) {
            return function (_280) {
                return new Tuple(Prelude.add(__dict_Semiring_4)(_279.value0)(_280.value0), Prelude.add(__dict_Semiring_5)(_279.value1)(_280.value1));
            };
        }, function (_281) {
            return function (_282) {
                return new Tuple(Prelude.mul(__dict_Semiring_4)(_281.value0)(_282.value0), Prelude.mul(__dict_Semiring_5)(_281.value1)(_282.value1));
            };
        }, new Tuple(Prelude.one(__dict_Semiring_4), Prelude.one(__dict_Semiring_5)), new Tuple(Prelude.zero(__dict_Semiring_4), Prelude.zero(__dict_Semiring_5)));
    };
};
var semigroupoidTuple = new Prelude.Semigroupoid(function (_275) {
    return function (_276) {
        return new Tuple(_276.value0, _275.value1);
    };
});
var semigroupTuple = function (__dict_Semigroup_6) {
    return function (__dict_Semigroup_7) {
        return new Prelude.Semigroup(function (_277) {
            return function (_278) {
                return new Tuple(Prelude["<>"](__dict_Semigroup_6)(_277.value0)(_278.value0), Prelude["<>"](__dict_Semigroup_7)(_277.value1)(_278.value1));
            };
        });
    };
};
var ringTuple = function (__dict_Ring_8) {
    return function (__dict_Ring_9) {
        return new Prelude.Ring(function () {
            return semiringTuple(__dict_Ring_8["__superclass_Prelude.Semiring_0"]())(__dict_Ring_9["__superclass_Prelude.Semiring_0"]());
        }, function (_287) {
            return function (_288) {
                return new Tuple(Prelude.sub(__dict_Ring_8)(_287.value0)(_288.value0), Prelude.sub(__dict_Ring_9)(_287.value1)(_288.value1));
            };
        });
    };
};
var monoidTuple = function (__dict_Monoid_14) {
    return function (__dict_Monoid_15) {
        return new Data_Monoid.Monoid(function () {
            return semigroupTuple(__dict_Monoid_14["__superclass_Prelude.Semigroup_0"]())(__dict_Monoid_15["__superclass_Prelude.Semigroup_0"]());
        }, new Tuple(Data_Monoid.mempty(__dict_Monoid_14), Data_Monoid.mempty(__dict_Monoid_15)));
    };
};
var moduloSemiringTuple = function (__dict_ModuloSemiring_17) {
    return function (__dict_ModuloSemiring_18) {
        return new Prelude.ModuloSemiring(function () {
            return semiringTuple(__dict_ModuloSemiring_17["__superclass_Prelude.Semiring_0"]())(__dict_ModuloSemiring_18["__superclass_Prelude.Semiring_0"]());
        }, function (_283) {
            return function (_284) {
                return new Tuple(Prelude.div(__dict_ModuloSemiring_17)(_283.value0)(_284.value0), Prelude.div(__dict_ModuloSemiring_18)(_283.value1)(_284.value1));
            };
        }, function (_285) {
            return function (_286) {
                return new Tuple(Prelude.mod(__dict_ModuloSemiring_17)(_285.value0)(_286.value0), Prelude.mod(__dict_ModuloSemiring_18)(_285.value1)(_286.value1));
            };
        });
    };
};
var lookup = function (__dict_Foldable_19) {
    return function (__dict_Eq_20) {
        return function (a) {
            return function (f) {
                return Data_Maybe_First.runFirst(Data_Foldable.foldMap(__dict_Foldable_19)(Data_Maybe_First.monoidFirst)(function (_265) {
                    var _480 = Prelude["=="](__dict_Eq_20)(a)(_265.value0);
                    if (_480) {
                        return new Data_Maybe.Just(_265.value1);
                    };
                    if (!_480) {
                        return Data_Maybe.Nothing.value;
                    };
                    throw new Error("Failed pattern match at /Users/simon/purescript-incremental/example/bower_components/purescript-tuples/src/Data/Tuple.purs line 173, column 1 - line 174, column 1: " + [ _480.constructor.name ]);
                })(f));
            };
        };
    };
};
var functorTuple = new Prelude.Functor(function (f) {
    return function (_294) {
        return new Tuple(_294.value0, f(_294.value1));
    };
});
var invariantTuple = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorTuple));
var fst = function (_266) {
    return _266.value0;
};
var lazyTuple = function (__dict_Lazy_21) {
    return function (__dict_Lazy_22) {
        return new Control_Lazy.Lazy(function (f) {
            return new Tuple(Control_Lazy.defer(__dict_Lazy_21)(function (_263) {
                return fst(f(Prelude.unit));
            }), Control_Lazy.defer(__dict_Lazy_22)(function (_264) {
                return snd(f(Prelude.unit));
            }));
        });
    };
};
var foldableTuple = new Data_Foldable.Foldable(function (__dict_Monoid_23) {
    return function (f) {
        return function (_304) {
            return f(_304.value1);
        };
    };
}, function (f) {
    return function (z) {
        return function (_303) {
            return f(z)(_303.value1);
        };
    };
}, function (f) {
    return function (z) {
        return function (_302) {
            return f(_302.value1)(z);
        };
    };
});
var traversableTuple = new Data_Traversable.Traversable(function () {
    return foldableTuple;
}, function () {
    return functorTuple;
}, function (__dict_Applicative_1) {
    return function (_309) {
        return Prelude["<$>"]((__dict_Applicative_1["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Tuple.create(_309.value0))(_309.value1);
    };
}, function (__dict_Applicative_0) {
    return function (f) {
        return function (_308) {
            return Prelude["<$>"]((__dict_Applicative_0["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Tuple.create(_308.value0))(f(_308.value1));
        };
    };
});
var extendTuple = new Control_Extend.Extend(function () {
    return functorTuple;
}, function (f) {
    return function (_301) {
        return new Tuple(_301.value0, f(_301));
    };
});
var eqTuple = function (__dict_Eq_24) {
    return function (__dict_Eq_25) {
        return new Prelude.Eq(function (_271) {
            return function (_272) {
                return Prelude["&&"](Prelude.booleanAlgebraBoolean)(Prelude["=="](__dict_Eq_24)(_271.value0)(_272.value0))(Prelude["=="](__dict_Eq_25)(_271.value1)(_272.value1));
            };
        });
    };
};
var ordTuple = function (__dict_Ord_10) {
    return function (__dict_Ord_11) {
        return new Prelude.Ord(function () {
            return eqTuple(__dict_Ord_10["__superclass_Prelude.Eq_0"]())(__dict_Ord_11["__superclass_Prelude.Eq_0"]());
        }, function (_273) {
            return function (_274) {
                var _525 = Prelude.compare(__dict_Ord_10)(_273.value0)(_274.value0);
                if (_525 instanceof Prelude.EQ) {
                    return Prelude.compare(__dict_Ord_11)(_273.value1)(_274.value1);
                };
                return _525;
            };
        });
    };
};
var divisionRingTuple = function (__dict_DivisionRing_26) {
    return function (__dict_DivisionRing_27) {
        return new Prelude.DivisionRing(function () {
            return moduloSemiringTuple(__dict_DivisionRing_26["__superclass_Prelude.ModuloSemiring_1"]())(__dict_DivisionRing_27["__superclass_Prelude.ModuloSemiring_1"]());
        }, function () {
            return ringTuple(__dict_DivisionRing_26["__superclass_Prelude.Ring_0"]())(__dict_DivisionRing_27["__superclass_Prelude.Ring_0"]());
        });
    };
};
var numTuple = function (__dict_Num_12) {
    return function (__dict_Num_13) {
        return new Prelude.Num(function () {
            return divisionRingTuple(__dict_Num_12["__superclass_Prelude.DivisionRing_0"]())(__dict_Num_13["__superclass_Prelude.DivisionRing_0"]());
        });
    };
};
var curry = function (f) {
    return function (a) {
        return function (b) {
            return f(new Tuple(a, b));
        };
    };
};
var comonadTuple = new Control_Comonad.Comonad(function () {
    return extendTuple;
}, snd);
var boundedTuple = function (__dict_Bounded_28) {
    return function (__dict_Bounded_29) {
        return new Prelude.Bounded(new Tuple(Prelude.bottom(__dict_Bounded_28), Prelude.bottom(__dict_Bounded_29)), new Tuple(Prelude.top(__dict_Bounded_28), Prelude.top(__dict_Bounded_29)));
    };
};
var boundedOrdTuple = function (__dict_BoundedOrd_30) {
    return function (__dict_BoundedOrd_31) {
        return new Prelude.BoundedOrd(function () {
            return boundedTuple(__dict_BoundedOrd_30["__superclass_Prelude.Bounded_0"]())(__dict_BoundedOrd_31["__superclass_Prelude.Bounded_0"]());
        }, function () {
            return ordTuple(__dict_BoundedOrd_30["__superclass_Prelude.Ord_1"]())(__dict_BoundedOrd_31["__superclass_Prelude.Ord_1"]());
        });
    };
};
var booleanAlgebraTuple = function (__dict_BooleanAlgebra_32) {
    return function (__dict_BooleanAlgebra_33) {
        return new Prelude.BooleanAlgebra(function () {
            return boundedTuple(__dict_BooleanAlgebra_32["__superclass_Prelude.Bounded_0"]())(__dict_BooleanAlgebra_33["__superclass_Prelude.Bounded_0"]());
        }, function (_289) {
            return function (_290) {
                return new Tuple(Prelude.conj(__dict_BooleanAlgebra_32)(_289.value0)(_290.value0), Prelude.conj(__dict_BooleanAlgebra_33)(_289.value1)(_290.value1));
            };
        }, function (_291) {
            return function (_292) {
                return new Tuple(Prelude.disj(__dict_BooleanAlgebra_32)(_291.value0)(_292.value0), Prelude.disj(__dict_BooleanAlgebra_33)(_291.value1)(_292.value1));
            };
        }, function (_293) {
            return new Tuple(Prelude.not(__dict_BooleanAlgebra_32)(_293.value0), Prelude.not(__dict_BooleanAlgebra_33)(_293.value1));
        });
    };
};
var bifunctorTuple = new Data_Bifunctor.Bifunctor(function (f) {
    return function (g) {
        return function (_295) {
            return new Tuple(f(_295.value0), g(_295.value1));
        };
    };
});
var bifoldableTuple = new Data_Bifoldable.Bifoldable(function (__dict_Monoid_37) {
    return function (f) {
        return function (g) {
            return function (_305) {
                return Prelude["<>"](__dict_Monoid_37["__superclass_Prelude.Semigroup_0"]())(f(_305.value0))(g(_305.value1));
            };
        };
    };
}, function (f) {
    return function (g) {
        return function (z) {
            return function (_307) {
                return g(f(z)(_307.value0))(_307.value1);
            };
        };
    };
}, function (f) {
    return function (g) {
        return function (z) {
            return function (_306) {
                return f(_306.value0)(g(_306.value1)(z));
            };
        };
    };
});
var bitraversableTuple = new Data_Bitraversable.Bitraversable(function () {
    return bifoldableTuple;
}, function () {
    return bifunctorTuple;
}, function (__dict_Applicative_35) {
    return function (_311) {
        return Prelude["<*>"](__dict_Applicative_35["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_35["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Tuple.create)(_311.value0))(_311.value1);
    };
}, function (__dict_Applicative_34) {
    return function (f) {
        return function (g) {
            return function (_310) {
                return Prelude["<*>"](__dict_Applicative_34["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_34["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Tuple.create)(f(_310.value0)))(g(_310.value1));
            };
        };
    };
});
var biapplyTuple = new Control_Biapply.Biapply(function () {
    return bifunctorTuple;
}, function (_298) {
    return function (_299) {
        return new Tuple(_298.value0(_299.value0), _298.value1(_299.value1));
    };
});
var biapplicativeTuple = new Control_Biapplicative.Biapplicative(function () {
    return biapplyTuple;
}, Tuple.create);
var applyTuple = function (__dict_Semigroup_38) {
    return new Prelude.Apply(function () {
        return functorTuple;
    }, function (_296) {
        return function (_297) {
            return new Tuple(Prelude["<>"](__dict_Semigroup_38)(_296.value0)(_297.value0), _296.value1(_297.value1));
        };
    });
};
var bindTuple = function (__dict_Semigroup_36) {
    return new Prelude.Bind(function () {
        return applyTuple(__dict_Semigroup_36);
    }, function (_300) {
        return function (f) {
            var _589 = f(_300.value1);
            return new Tuple(Prelude["<>"](__dict_Semigroup_36)(_300.value0)(_589.value0), _589.value1);
        };
    });
};
var applicativeTuple = function (__dict_Monoid_39) {
    return new Prelude.Applicative(function () {
        return applyTuple(__dict_Monoid_39["__superclass_Prelude.Semigroup_0"]());
    }, Tuple.create(Data_Monoid.mempty(__dict_Monoid_39)));
};
var monadTuple = function (__dict_Monoid_16) {
    return new Prelude.Monad(function () {
        return applicativeTuple(__dict_Monoid_16);
    }, function () {
        return bindTuple(__dict_Monoid_16["__superclass_Prelude.Semigroup_0"]());
    });
};
module.exports = {
    Tuple: Tuple, 
    lookup: lookup, 
    swap: swap, 
    uncurry: uncurry, 
    curry: curry, 
    snd: snd, 
    fst: fst, 
    showTuple: showTuple, 
    eqTuple: eqTuple, 
    ordTuple: ordTuple, 
    boundedTuple: boundedTuple, 
    boundedOrdTuple: boundedOrdTuple, 
    semigroupoidTuple: semigroupoidTuple, 
    semigroupTuple: semigroupTuple, 
    monoidTuple: monoidTuple, 
    semiringTuple: semiringTuple, 
    moduloSemiringTuple: moduloSemiringTuple, 
    ringTuple: ringTuple, 
    divisionRingTuple: divisionRingTuple, 
    numTuple: numTuple, 
    booleanAlgebraTuple: booleanAlgebraTuple, 
    functorTuple: functorTuple, 
    invariantTuple: invariantTuple, 
    bifunctorTuple: bifunctorTuple, 
    applyTuple: applyTuple, 
    biapplyTuple: biapplyTuple, 
    applicativeTuple: applicativeTuple, 
    biapplicativeTuple: biapplicativeTuple, 
    bindTuple: bindTuple, 
    monadTuple: monadTuple, 
    extendTuple: extendTuple, 
    comonadTuple: comonadTuple, 
    lazyTuple: lazyTuple, 
    foldableTuple: foldableTuple, 
    bifoldableTuple: bifoldableTuple, 
    traversableTuple: traversableTuple, 
    bitraversableTuple: bitraversableTuple
};

},{"Control.Biapplicative":"/Users/simon/purescript-incremental/example/output/Control.Biapplicative/index.js","Control.Biapply":"/Users/simon/purescript-incremental/example/output/Control.Biapply/index.js","Control.Comonad":"/Users/simon/purescript-incremental/example/output/Control.Comonad/index.js","Control.Extend":"/Users/simon/purescript-incremental/example/output/Control.Extend/index.js","Control.Lazy":"/Users/simon/purescript-incremental/example/output/Control.Lazy/index.js","Data.Bifoldable":"/Users/simon/purescript-incremental/example/output/Data.Bifoldable/index.js","Data.Bifunctor":"/Users/simon/purescript-incremental/example/output/Data.Bifunctor/index.js","Data.Bitraversable":"/Users/simon/purescript-incremental/example/output/Data.Bitraversable/index.js","Data.Foldable":"/Users/simon/purescript-incremental/example/output/Data.Foldable/index.js","Data.Functor.Invariant":"/Users/simon/purescript-incremental/example/output/Data.Functor.Invariant/index.js","Data.Maybe":"/Users/simon/purescript-incremental/example/output/Data.Maybe/index.js","Data.Maybe.First":"/Users/simon/purescript-incremental/example/output/Data.Maybe.First/index.js","Data.Monoid":"/Users/simon/purescript-incremental/example/output/Data.Monoid/index.js","Data.Traversable":"/Users/simon/purescript-incremental/example/output/Data.Traversable/index.js","Prelude":"/Users/simon/purescript-incremental/example/output/Prelude/index.js"}],"/Users/simon/purescript-incremental/example/output/Data.Unfoldable/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Control_Monad_Eff = require("Control.Monad.Eff");
var Data_Array_ST = require("Data.Array.ST");
var Prelude = require("Prelude");
var Control_Monad_ST = require("Control.Monad.ST");
var Data_Maybe = require("Data.Maybe");
var Data_Tuple = require("Data.Tuple");
var Unfoldable = function (unfoldr) {
    this.unfoldr = unfoldr;
};
var unfoldr = function (dict) {
    return dict.unfoldr;
};
var unfoldableArray = new Unfoldable(function (f) {
    return function (b) {
        return Control_Monad_Eff.runPure(Data_Array_ST.runSTArray(function __do() {
            var _10 = Data_Array_ST.emptySTArray();
            var _9 = Control_Monad_ST.newSTRef(b)();
            (function () {
                while (!(function __do() {
                    var _8 = Control_Monad_ST.readSTRef(_9)();
                    return (function () {
                        var _432 = f(_8);
                        if (_432 instanceof Data_Maybe.Nothing) {
                            return Prelude["return"](Control_Monad_Eff.applicativeEff)(true);
                        };
                        if (_432 instanceof Data_Maybe.Just) {
                            return function __do() {
                                Data_Array_ST.pushSTArray(_10)(_432.value0.value0)();
                                Control_Monad_ST.writeSTRef(_9)(_432.value0.value1)();
                                return Prelude["return"](Control_Monad_Eff.applicativeEff)(false)();
                            };
                        };
                        throw new Error("Failed pattern match at /Users/simon/purescript-incremental/example/bower_components/purescript-unfoldable/src/Data/Unfoldable.purs line 28, column 1 - line 40, column 16: " + [ _432.constructor.name ]);
                    })()();
                })()) {

                };
                return {};
            })();
            return Prelude["return"](Control_Monad_Eff.applicativeEff)(_10)();
        }));
    };
});
module.exports = {
    Unfoldable: Unfoldable, 
    unfoldr: unfoldr, 
    unfoldableArray: unfoldableArray
};

},{"Control.Monad.Eff":"/Users/simon/purescript-incremental/example/output/Control.Monad.Eff/index.js","Control.Monad.ST":"/Users/simon/purescript-incremental/example/output/Control.Monad.ST/index.js","Data.Array.ST":"/Users/simon/purescript-incremental/example/output/Data.Array.ST/index.js","Data.Maybe":"/Users/simon/purescript-incremental/example/output/Data.Maybe/index.js","Data.Tuple":"/Users/simon/purescript-incremental/example/output/Data.Tuple/index.js","Prelude":"/Users/simon/purescript-incremental/example/output/Prelude/index.js"}],"/Users/simon/purescript-incremental/example/output/Incremental.Attributes/foreign.js":[function(require,module,exports){
//module Incremental.Attributes

exports.objPropAccessorImpl = function (just) {
    return function (nothing) {
        return function (prop) {
            return function (obj) {
                if (obj[prop] != null) {
                    return just(obj[prop]);
                } else {
                    return nothing;
                }
            };
        };
    };
};

},{}],"/Users/simon/purescript-incremental/example/output/Incremental.Attributes/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Unsafe_Coerce = require("Unsafe.Coerce");
var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");
var Control_Monad_Eff = require("Control.Monad.Eff");
var MousePosition = (function () {
    function MousePosition(value0) {
        this.value0 = value0;
    };
    MousePosition.create = function (value0) {
        return new MousePosition(value0);
    };
    return MousePosition;
})();
var IAttribute = (function () {
    function IAttribute(value0) {
        this.value0 = value0;
    };
    IAttribute.create = function (value0) {
        return new IAttribute(value0);
    };
    return IAttribute;
})();
var unsafeObjPropAccessor = $foreign.objPropAccessorImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var toAttributeValue = Unsafe_Coerce.unsafeCoerce;
var stringAttribute = function (name_1) {
    return function ($$static) {
        return function (value_1) {
            return new IAttribute({
                name: name_1, 
                value: toAttributeValue(value_1), 
                "static": $$static
            });
        };
    };
};
var tabindex = Prelude["<<<"](Prelude.semigroupoidFn)(stringAttribute("tabindex")(true))(Prelude.show(Prelude.showInt));
var target = stringAttribute("_target")(true);
var title = stringAttribute("title")(false);
var type$prime = stringAttribute("type")(true);
var value = stringAttribute("value")(false);
var volatileAttribute = function (name_1) {
    return function (visible) {
        return stringAttribute(name_1)(false)((function () {
            if (visible) {
                return name_1;
            };
            if (!visible) {
                return "__UNSET__";
            };
            throw new Error("Failed pattern match at /Users/simon/purescript-incremental/example/../src/Incremental/Attributes/Attributes.purs line 71, column 1 - line 72, column 1: " + [ visible.constructor.name ]);
        })());
    };
};
var width = stringAttribute("width")(false);
var src = stringAttribute("src")(false);
var size = Prelude["<<<"](Prelude.semigroupoidFn)(stringAttribute("size")(true))(Prelude.show(Prelude.showInt));
var required = volatileAttribute("required");
var readonly = volatileAttribute("readonly");
var placeholder = stringAttribute("placeholder")(false);
var pattern = stringAttribute("pattern")(true);
var orDefault = function (defaultVal) {
    return function (ma) {
        if (ma instanceof Data_Maybe.Just) {
            return ma.value0;
        };
        if (ma instanceof Data_Maybe.Nothing) {
            return defaultVal;
        };
        throw new Error("Failed pattern match at /Users/simon/purescript-incremental/example/../src/Incremental/Attributes/Attributes.purs line 205, column 1 - line 206, column 1: " + [ ma.constructor.name ]);
    };
};
var targetValue = function (event) {
    return orDefault("")(Prelude.bind(Data_Maybe.bindMaybe)(unsafeObjPropAccessor("target")(event))(function (_11) {
        return unsafeObjPropAccessor("value")(_11);
    }));
};
var name = stringAttribute("name")(true);
var multiple = Prelude["<<<"](Prelude.semigroupoidFn)(stringAttribute("multiple")(true))(Prelude.show(Prelude.showBoolean));
var mousePosition = function (event) {
    return orDefault(new MousePosition({
        clientX: 0, 
        clientY: 0, 
        screenX: 0, 
        screenY: 0
    }))(Prelude.bind(Data_Maybe.bindMaybe)(unsafeObjPropAccessor("clientX")(event))(function (_15) {
        return Prelude.bind(Data_Maybe.bindMaybe)(unsafeObjPropAccessor("clientY")(event))(function (_14) {
            return Prelude.bind(Data_Maybe.bindMaybe)(unsafeObjPropAccessor("screenX")(event))(function (_13) {
                return Prelude.bind(Data_Maybe.bindMaybe)(unsafeObjPropAccessor("screenY")(event))(function (_12) {
                    return Prelude["return"](Data_Maybe.applicativeMaybe)(new MousePosition({
                        clientX: _15, 
                        clientY: _14, 
                        screenX: _13, 
                        screenY: _12
                    }));
                });
            });
        });
    }));
};
var minlength = Prelude["<<<"](Prelude.semigroupoidFn)(stringAttribute("minlength")(true))(Prelude.show(Prelude.showInt));
var min = stringAttribute("min")(true);
var maxlength = Prelude["<<<"](Prelude.semigroupoidFn)(stringAttribute("maxlength")(true))(Prelude.show(Prelude.showInt));
var max = stringAttribute("max")(true);
var keyValue = Prelude["<<<"](Prelude.semigroupoidFn)(orDefault(""))(unsafeObjPropAccessor("key"));
var key = stringAttribute("key")(false);
var id$prime = stringAttribute("id")(true);
var href = stringAttribute("href")(false);
var height = stringAttribute("height")(false);
var $$for = stringAttribute("for")(true);
var eventAttribute = function (name_1) {
    return function (handler) {
        return new IAttribute({
            name: name_1, 
            value: toAttributeValue(handler), 
            "static": false
        });
    };
};
var on$prime = eventAttribute;
var on = function (eventName) {
    return function (effect) {
        return on$prime(eventName)(function (_353) {
            return effect;
        });
    };
};
var onBlur = on("onblur");
var onChange = on("onchange");
var onClick = on("onclick");
var onDoubleClick = on("ondblclick");
var onDrag = on("ondrag");
var onDragEnd = on("ondragend");
var onDragEnter = on("ondragenter");
var onDragLeave = on("ondragleave");
var onDragOver = on("ondragover");
var onDragStart = on("ondragstart");
var onDrop = on("ondrop");
var onFocus = on("onfocus");
var onFocusIn = on("onfocusin");
var onFocusOut = on("onfocusout");
var onInput = on("oninput");
var onInvalid = on("oninvalid");
var onKeyDown = on("onkeydown");
var onKeyUp = on("onkeyup");
var onMouseDown = on("onmousedown");
var onMouseEnter = on("onmouseenter");
var onMouseLeave = on("onmouseleave");
var onMouseMove = on("onmousemove");
var onMouseOut = on("onmouseout");
var onMouseOver = on("onmouseover");
var onMouseUp = on("onmouseup");
var onReset = on("onreset");
var onSearch = on("onsearch");
var onSelect = on("onselect");
var onSubmit = on("onsubmit");
var onBlur$prime = on$prime("onblur");
var onChange$prime = on$prime("onchange");
var onClick$prime = on$prime("onclick");
var onDoubleClick$prime = on$prime("ondblclick");
var onDrag$prime = on$prime("ondrag");
var onDragEnd$prime = on$prime("ondragend");
var onDragEnter$prime = on$prime("ondragenter");
var onDragLeave$prime = on$prime("ondragleave");
var onDragOver$prime = on$prime("ondragover");
var onDragStart$prime = on$prime("ondragstart");
var onDrop$prime = on$prime("ondrop");
var onFocus$prime = on$prime("onfocus");
var onFocusIn$prime = on$prime("onfocusin");
var onFocusOut$prime = on$prime("onfocusout");
var onInput$prime = on$prime("oninput");
var onInvalid$prime = on$prime("oninvalid");
var onKeyDown$prime = on$prime("onkeydown");
var onKeyUp$prime = on$prime("onkeyup");
var onMouseDown$prime = on$prime("onmousedown");
var onMouseEnter$prime = on$prime("onmouseenter");
var onMouseLeave$prime = on$prime("onmouseleave");
var onMouseMove$prime = on$prime("onmousemove");
var onMouseOut$prime = on$prime("onmouseout");
var onMouseOver$prime = on$prime("onmouseover");
var onMouseUp$prime = on$prime("onmouseup");
var onReset$prime = on$prime("onreset");
var onSearch$prime = on$prime("onsearch");
var onSelect$prime = on$prime("onselect");
var onSubmit$prime = on$prime("onsubmit");
var dropzone = stringAttribute("dropzone")(true);
var draggable = Prelude["<<<"](Prelude.semigroupoidFn)(stringAttribute("accesskey")(true))(Prelude.show(Prelude.showBoolean));
var disabled = volatileAttribute("disabled");
var contenteditable = Prelude["<<<"](Prelude.semigroupoidFn)(stringAttribute("contenteditable")(true))(Prelude.show(Prelude.showBoolean));
var class$prime = stringAttribute("class")(false);
var checked = volatileAttribute("checked");
var autofocus = Prelude["<<<"](Prelude.semigroupoidFn)(stringAttribute("autofocus")(true))(Prelude.show(Prelude.showBoolean));
var autocomplete = stringAttribute("autocomplete")(true);
var accesskey = stringAttribute("accesskey")(true);
var accept = stringAttribute("accept")(true);
module.exports = {
    MousePosition: MousePosition, 
    keyValue: keyValue, 
    mousePosition: mousePosition, 
    targetValue: targetValue, 
    onKeyUp: onKeyUp, 
    "onKeyUp'": onKeyUp$prime, 
    onKeyDown: onKeyDown, 
    "onKeyDown'": onKeyDown$prime, 
    onDrop: onDrop, 
    "onDrop'": onDrop$prime, 
    onDragStart: onDragStart, 
    "onDragStart'": onDragStart$prime, 
    onDragOver: onDragOver, 
    "onDragOver'": onDragOver$prime, 
    onDragLeave: onDragLeave, 
    "onDragLeave'": onDragLeave$prime, 
    onDragEnter: onDragEnter, 
    "onDragEnter'": onDragEnter$prime, 
    onDragEnd: onDragEnd, 
    "onDragEnd'": onDragEnd$prime, 
    onDrag: onDrag, 
    "onDrag'": onDrag$prime, 
    onMouseOut: onMouseOut, 
    "onMouseOut'": onMouseOut$prime, 
    onMouseOver: onMouseOver, 
    "onMouseOver'": onMouseOver$prime, 
    onMouseUp: onMouseUp, 
    "onMouseUp'": onMouseUp$prime, 
    onMouseDown: onMouseDown, 
    "onMouseDown'": onMouseDown$prime, 
    onMouseMove: onMouseMove, 
    "onMouseMove'": onMouseMove$prime, 
    onMouseLeave: onMouseLeave, 
    "onMouseLeave'": onMouseLeave$prime, 
    onMouseEnter: onMouseEnter, 
    "onMouseEnter'": onMouseEnter$prime, 
    onSubmit: onSubmit, 
    "onSubmit'": onSubmit$prime, 
    onSelect: onSelect, 
    "onSelect'": onSelect$prime, 
    onSearch: onSearch, 
    "onSearch'": onSearch$prime, 
    onReset: onReset, 
    "onReset'": onReset$prime, 
    onInvalid: onInvalid, 
    "onInvalid'": onInvalid$prime, 
    onChange: onChange, 
    "onChange'": onChange$prime, 
    onFocusOut: onFocusOut, 
    "onFocusOut'": onFocusOut$prime, 
    onFocusIn: onFocusIn, 
    "onFocusIn'": onFocusIn$prime, 
    onFocus: onFocus, 
    "onFocus'": onFocus$prime, 
    onBlur: onBlur, 
    "onBlur'": onBlur$prime, 
    onInput: onInput, 
    "onInput'": onInput$prime, 
    onDoubleClick: onDoubleClick, 
    "onDoubleClick'": onDoubleClick$prime, 
    "onClick'": onClick$prime, 
    onClick: onClick, 
    on: on, 
    "on'": on$prime, 
    dropzone: dropzone, 
    draggable: draggable, 
    accesskey: accesskey, 
    contenteditable: contenteditable, 
    title: title, 
    size: size, 
    tabindex: tabindex, 
    multiple: multiple, 
    required: required, 
    readonly: readonly, 
    pattern: pattern, 
    minlength: minlength, 
    maxlength: maxlength, 
    min: min, 
    max: max, 
    autofocus: autofocus, 
    autocomplete: autocomplete, 
    accept: accept, 
    target: target, 
    height: height, 
    width: width, 
    placeholder: placeholder, 
    src: src, 
    href: href, 
    name: name, 
    "id'": id$prime, 
    disabled: disabled, 
    checked: checked, 
    value: value, 
    key: key, 
    "type'": type$prime, 
    "class'": class$prime
};

},{"./foreign":"/Users/simon/purescript-incremental/example/output/Incremental.Attributes/foreign.js","Control.Monad.Eff":"/Users/simon/purescript-incremental/example/output/Control.Monad.Eff/index.js","Data.Maybe":"/Users/simon/purescript-incremental/example/output/Data.Maybe/index.js","Prelude":"/Users/simon/purescript-incremental/example/output/Prelude/index.js","Unsafe.Coerce":"/Users/simon/purescript-incremental/example/output/Unsafe.Coerce/index.js"}],"/Users/simon/purescript-incremental/example/output/Incremental.DOM/foreign.js":[function(require,module,exports){
var IDom = require('incremental-dom');

// module Incremental.DOM

function unfoldAttributes (attributes) {
    return attributes.reduce(function (attrs, v) {
        var a = v.value0;
        var val = a.value;
        var name = a.name;
        var isStatic = a.static;
        if (name === 'value') {
            val = new String(val);
        }

        if(val === '__UNSET__') {
            //ignore
        } else if (name === 'key') {
            attrs.key = val;
        } else if (isStatic) {
            attrs.statics.push(name);
            attrs.statics.push(val);
        } else {
            attrs.attributes.push(name);
            var valueToPush = val;
            if(typeof valueToPush === 'function') {
                valueToPush = function(event) {
                    var effect = val(event);
                    effect();
                };
            }
            attrs.attributes.push(valueToPush);
        }
        return attrs;
    }, {statics : [], key: null, attributes: []});
}

exports.element = function (tagName) {
        return function (attrs) {
            return function (children) {
                return function() {
                    var unfoldedAttrs = unfoldAttributes(attrs);
                    var args = [tagName, unfoldedAttrs.key, unfoldedAttrs.statics].concat(unfoldedAttrs.attributes);
                    IDom.elementOpen.apply(null, args);
                    children();
                    IDom.elementClose(tagName);
                };
            };
        };
};

exports.iempty = function() {
    return function() {

    }
}

exports.text = function(text) {
    return function() {
        IDom.text(text);
    };
};


exports.patch = function (iRootElement) {
    return function (domElement) {
        return function iDomEffect() {
            IDom.patch(domElement, iRootElement, {});
            return {};
        }
    };
};

},{"incremental-dom":"/Users/simon/purescript-incremental/node_modules/incremental-dom/dist/incremental-dom-cjs.js"}],"/Users/simon/purescript-incremental/example/output/Incremental.DOM/index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Incremental_Attributes = require("Incremental.Attributes");
var Data_Array = require("Data.Array");
var DOM_Node_Types = require("DOM.Node.Types");
var Control_Monad_Eff = require("Control.Monad.Eff");
module.exports = {
    patch: $foreign.patch, 
    text: $foreign.text, 
    iempty: $foreign.iempty, 
    element: $foreign.element
};

},{"./foreign":"/Users/simon/purescript-incremental/example/output/Incremental.DOM/foreign.js","Control.Monad.Eff":"/Users/simon/purescript-incremental/example/output/Control.Monad.Eff/index.js","DOM.Node.Types":"/Users/simon/purescript-incremental/example/output/DOM.Node.Types/index.js","Data.Array":"/Users/simon/purescript-incremental/example/output/Data.Array/index.js","Incremental.Attributes":"/Users/simon/purescript-incremental/example/output/Incremental.Attributes/index.js","Prelude":"/Users/simon/purescript-incremental/example/output/Prelude/index.js"}],"/Users/simon/purescript-incremental/example/output/Incremental.Elements/index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var Incremental_DOM = require("Incremental.DOM");
var wbr = Incremental_DOM.element("wbr");
var video = Incremental_DOM.element("video");
var $$var = Incremental_DOM.element("var");
var ul = Incremental_DOM.element("ul");
var u = Incremental_DOM.element("u");
var track = Incremental_DOM.element("track");
var tr = Incremental_DOM.element("tr");
var time = Incremental_DOM.element("time");
var thead = Incremental_DOM.element("thead");
var th = Incremental_DOM.element("th");
var tfoot = Incremental_DOM.element("tfoot");
var textarea = Incremental_DOM.element("textarea");
var template = Incremental_DOM.element("template");
var td = Incremental_DOM.element("td");
var tbody = Incremental_DOM.element("tbody");
var table = Incremental_DOM.element("table");
var sup = Incremental_DOM.element("sup");
var summary = Incremental_DOM.element("summary");
var sub$prime = Incremental_DOM.element("sub");
var style = Incremental_DOM.element("style");
var strong = Incremental_DOM.element("strong");
var span$prime = Incremental_DOM.element("span");
var source = Incremental_DOM.element("source");
var small = Incremental_DOM.element("small");
var select = Incremental_DOM.element("select");
var section = Incremental_DOM.element("section");
var script = Incremental_DOM.element("script");
var samp = Incremental_DOM.element("samp");
var s = Incremental_DOM.element("s");
var ruby = Incremental_DOM.element("ruby");
var rt = Incremental_DOM.element("rt");
var rp = Incremental_DOM.element("rp");
var q = Incremental_DOM.element("q");
var progress = Incremental_DOM.element("progress");
var pre = Incremental_DOM.element("pre");
var param = Incremental_DOM.element("param");
var p = Incremental_DOM.element("p");
var output = Incremental_DOM.element("output");
var option = Incremental_DOM.element("option");
var optgroup = Incremental_DOM.element("optgroup");
var ol = Incremental_DOM.element("ol");
var object = Incremental_DOM.element("object");
var nav = Incremental_DOM.element("nav");
var meter = Incremental_DOM.element("meter");
var menuitem = Incremental_DOM.element("menuitem");
var menu = Incremental_DOM.element("menu");
var mark = Incremental_DOM.element("mark");
var map$prime = Incremental_DOM.element("map");
var main$prime = Incremental_DOM.element("main");
var link = Incremental_DOM.element("link");
var li = Incremental_DOM.element("li");
var legend = Incremental_DOM.element("legend");
var label = Incremental_DOM.element("label");
var keygen = Incremental_DOM.element("keygen");
var kbd = Incremental_DOM.element("kbd");
var ins = Incremental_DOM.element("ins");
var input = Incremental_DOM.element("input");
var img = Incremental_DOM.element("img");
var iframe = Incremental_DOM.element("iframe");
var i = Incremental_DOM.element("i");
var hr = Incremental_DOM.element("hr");
var header = Incremental_DOM.element("header");
var h6 = Incremental_DOM.element("h6");
var h5 = Incremental_DOM.element("h5");
var h4 = Incremental_DOM.element("h4");
var h3 = Incremental_DOM.element("h3");
var h2 = Incremental_DOM.element("h2");
var h1 = Incremental_DOM.element("h1");
var form = Incremental_DOM.element("form");
var footer = Incremental_DOM.element("footer");
var figure = Incremental_DOM.element("figure");
var figcaption = Incremental_DOM.element("figcaption");
var fieldset = Incremental_DOM.element("fieldset");
var embed = Incremental_DOM.element("embed");
var em = Incremental_DOM.element("em");
var dt = Incremental_DOM.element("dt");
var dl = Incremental_DOM.element("dl");
var div$prime = Incremental_DOM.element("div");
var dfn = Incremental_DOM.element("dfn");
var details = Incremental_DOM.element("details");
var del = Incremental_DOM.element("del");
var dd = Incremental_DOM.element("dd");
var datalist = Incremental_DOM.element("datalist");
var data$prime = Incremental_DOM.element("data");
var colgroup = Incremental_DOM.element("colgroup");
var col = Incremental_DOM.element("col");
var code = Incremental_DOM.element("code");
var cite = Incremental_DOM.element("cite");
var caption = Incremental_DOM.element("captio");
var canvas = Incremental_DOM.element("canvas");
var button = Incremental_DOM.element("button");
var br = Incremental_DOM.element("br");
var blockquote = Incremental_DOM.element("blockquote");
var bdo = Incremental_DOM.element("bdo");
var bdi = Incremental_DOM.element("bdi");
var base = Incremental_DOM.element("base");
var b = Incremental_DOM.element("b");
var audio = Incremental_DOM.element("audio");
var aside = Incremental_DOM.element("aside");
var article = Incremental_DOM.element("area");
var area = Incremental_DOM.element("area");
var address = Incremental_DOM.element("address");
var abbr = Incremental_DOM.element("abbr");
var a = Incremental_DOM.element("a");
module.exports = {
    wbr: wbr, 
    video: video, 
    "var": $$var, 
    ul: ul, 
    u: u, 
    track: track, 
    tr: tr, 
    time: time, 
    thead: thead, 
    th: th, 
    tfoot: tfoot, 
    textarea: textarea, 
    template: template, 
    td: td, 
    tbody: tbody, 
    table: table, 
    sup: sup, 
    summary: summary, 
    "sub'": sub$prime, 
    style: style, 
    strong: strong, 
    "span'": span$prime, 
    source: source, 
    small: small, 
    select: select, 
    section: section, 
    script: script, 
    samp: samp, 
    s: s, 
    ruby: ruby, 
    rt: rt, 
    rp: rp, 
    q: q, 
    progress: progress, 
    pre: pre, 
    param: param, 
    p: p, 
    output: output, 
    option: option, 
    optgroup: optgroup, 
    ol: ol, 
    object: object, 
    nav: nav, 
    meter: meter, 
    menuitem: menuitem, 
    menu: menu, 
    mark: mark, 
    "map'": map$prime, 
    "main'": main$prime, 
    link: link, 
    li: li, 
    legend: legend, 
    label: label, 
    keygen: keygen, 
    kbd: kbd, 
    ins: ins, 
    input: input, 
    img: img, 
    iframe: iframe, 
    i: i, 
    hr: hr, 
    header: header, 
    h6: h6, 
    h5: h5, 
    h4: h4, 
    h3: h3, 
    h2: h2, 
    h1: h1, 
    form: form, 
    footer: footer, 
    figure: figure, 
    figcaption: figcaption, 
    fieldset: fieldset, 
    embed: embed, 
    em: em, 
    dt: dt, 
    dl: dl, 
    "div'": div$prime, 
    dfn: dfn, 
    details: details, 
    del: del, 
    dd: dd, 
    datalist: datalist, 
    "data'": data$prime, 
    colgroup: colgroup, 
    col: col, 
    code: code, 
    cite: cite, 
    caption: caption, 
    canvas: canvas, 
    button: button, 
    br: br, 
    blockquote: blockquote, 
    bdo: bdo, 
    bdi: bdi, 
    base: base, 
    b: b, 
    audio: audio, 
    aside: aside, 
    article: article, 
    area: area, 
    address: address, 
    abbr: abbr, 
    a: a
};

},{"Incremental.DOM":"/Users/simon/purescript-incremental/example/output/Incremental.DOM/index.js"}],"/Users/simon/purescript-incremental/example/output/Main/index.js":[function(require,module,exports){
// Generated by psc version 0.7.4.1
"use strict";
var Data_Maybe_Unsafe = require("Data.Maybe.Unsafe");
var Data_Nullable = require("Data.Nullable");
var DOM_HTML = require("DOM.HTML");
var DOM_HTML_Window = require("DOM.HTML.Window");
var DOM_HTML_Document = require("DOM.HTML.Document");
var Prelude = require("Prelude");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Incremental_DOM = require("Incremental.DOM");
var DOM_Node_Types = require("DOM.Node.Types");
var DOM_HTML_Types = require("DOM.HTML.Types");
var DOM = require("DOM");
var Signal = require("Signal");
var Signal_Channel = require("Signal.Channel");
var Action = require("Action");
var Store = require("Store");
var Components_TodoList = require("Components.TodoList");
var body = Prelude["<$>"](Control_Monad_Eff.functorEff)(Prelude["<$>"](Prelude.functorFn)(Prelude["<$>"](Prelude.functorFn)(DOM_HTML_Types.htmlElementToElement)(Data_Maybe_Unsafe.fromJust))(Data_Nullable.toMaybe))(Prelude[">>="](Control_Monad_Eff.bindEff)(Prelude[">>="](Control_Monad_Eff.bindEff)(DOM_HTML.window)(DOM_HTML_Window.document))(DOM_HTML_Document.body));
var renderAction = function (chan) {
    return function (action) {
        return Signal.runSignal(Signal["~>"](Signal.functorSignal)(Signal["~>"](Signal.functorSignal)(Signal["~>"](Signal.functorSignal)(Signal.foldp(Store.handleAction)(Store.initialAppState)(action))(Components_TodoList.todoList(chan)))(Incremental_DOM.patch))(Prelude.bind(Control_Monad_Eff.bindEff)(body)));
    };
};
var main = function __do() {
    var _0 = Signal_Channel.channel(Action.NoOp.value)();
    return renderAction(_0)(Signal_Channel.subscribe(_0))();
};
module.exports = {
    main: main, 
    renderAction: renderAction, 
    body: body
};

},{"Action":"/Users/simon/purescript-incremental/example/output/Action/index.js","Components.TodoList":"/Users/simon/purescript-incremental/example/output/Components.TodoList/index.js","Control.Monad.Eff":"/Users/simon/purescript-incremental/example/output/Control.Monad.Eff/index.js","DOM":"/Users/simon/purescript-incremental/example/output/DOM/index.js","DOM.HTML":"/Users/simon/purescript-incremental/example/output/DOM.HTML/index.js","DOM.HTML.Document":"/Users/simon/purescript-incremental/example/output/DOM.HTML.Document/index.js","DOM.HTML.Types":"/Users/simon/purescript-incremental/example/output/DOM.HTML.Types/index.js","DOM.HTML.Window":"/Users/simon/purescript-incremental/example/output/DOM.HTML.Window/index.js","DOM.Node.Types":"/Users/simon/purescript-incremental/example/output/DOM.Node.Types/index.js","Data.Maybe.Unsafe":"/Users/simon/purescript-incremental/example/output/Data.Maybe.Unsafe/index.js","Data.Nullable":"/Users/simon/purescript-incremental/example/output/Data.Nullable/index.js","Incremental.DOM":"/Users/simon/purescript-incremental/example/output/Incremental.DOM/index.js","Prelude":"/Users/simon/purescript-incremental/example/output/Prelude/index.js","Signal":"/Users/simon/purescript-incremental/example/output/Signal/index.js","Signal.Channel":"/Users/simon/purescript-incremental/example/output/Signal.Channel/index.js","Store":"/Users/simon/purescript-incremental/example/output/Store/index.js"}],"/Users/simon/purescript-incremental/example/output/Math/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Math

exports.abs = Math.abs;

exports.acos = Math.acos;

exports.asin = Math.asin;

exports.atan = Math.atan;

exports.atan2 = function (y) {
  return function (x) {
    return Math.atan2(y, x);
  };
};

exports.ceil = Math.ceil;

exports.cos = Math.cos;

exports.exp = Math.exp;

exports.floor = Math.floor;

exports.log = Math.log;

exports.max = function (n1) {
  return function (n2) {
    return Math.max(n1, n2);
  };
};

exports.min = function (n1) {
  return function (n2) {
    return Math.min(n1, n2);
  };
};

exports.pow = function (n) {
  return function (p) {
    return Math.pow(n, p);
  };
};

exports["%"] = function(n) {
  return function(m) {
    return n % m;
  };
};

exports.round = Math.round;

exports.sin = Math.sin;

exports.sqrt = Math.sqrt;

exports.tan = Math.tan;

exports.e = Math.E;

exports.ln2 = Math.LN2;

exports.ln10 = Math.LN10;

exports.log2e = Math.LOG2E;

exports.log10e = Math.LOG10E;

exports.pi = Math.PI;

exports.sqrt1_2 = Math.SQRT1_2;

exports.sqrt2 = Math.SQRT2;

},{}],"/Users/simon/purescript-incremental/example/output/Math/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
module.exports = {
    sqrt2: $foreign.sqrt2, 
    sqrt1_2: $foreign.sqrt1_2, 
    pi: $foreign.pi, 
    log10e: $foreign.log10e, 
    log2e: $foreign.log2e, 
    ln10: $foreign.ln10, 
    ln2: $foreign.ln2, 
    e: $foreign.e, 
    "%": $foreign["%"], 
    tan: $foreign.tan, 
    sqrt: $foreign.sqrt, 
    sin: $foreign.sin, 
    round: $foreign.round, 
    pow: $foreign.pow, 
    min: $foreign.min, 
    max: $foreign.max, 
    log: $foreign.log, 
    floor: $foreign.floor, 
    exp: $foreign.exp, 
    cos: $foreign.cos, 
    ceil: $foreign.ceil, 
    atan2: $foreign.atan2, 
    atan: $foreign.atan, 
    asin: $foreign.asin, 
    acos: $foreign.acos, 
    abs: $foreign.abs
};

},{"./foreign":"/Users/simon/purescript-incremental/example/output/Math/foreign.js"}],"/Users/simon/purescript-incremental/example/output/Prelude/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Prelude

//- Functor --------------------------------------------------------------------

exports.arrayMap = function (f) {
  return function (arr) {
    var l = arr.length;
    var result = new Array(l);
    for (var i = 0; i < l; i++) {
      result[i] = f(arr[i]);
    }
    return result;
  };
};

//- Bind -----------------------------------------------------------------------

exports.arrayBind = function (arr) {
  return function (f) {
    var result = [];
    for (var i = 0, l = arr.length; i < l; i++) {
      Array.prototype.push.apply(result, f(arr[i]));
    }
    return result;
  };
};

//- Monoid ---------------------------------------------------------------------

exports.concatString = function (s1) {
  return function (s2) {
    return s1 + s2;
  };
};

exports.concatArray = function (xs) {
  return function (ys) {
    return xs.concat(ys);
  };
};

//- Semiring -------------------------------------------------------------------

exports.intAdd = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return x + y | 0;
  };
};

exports.intMul = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return x * y | 0;
  };
};

exports.numAdd = function (n1) {
  return function (n2) {
    return n1 + n2;
  };
};

exports.numMul = function (n1) {
  return function (n2) {
    return n1 * n2;
  };
};

//- ModuloSemiring -------------------------------------------------------------

exports.intDiv = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return x / y | 0;
  };
};

exports.intMod = function (x) {
  return function (y) {
    return x % y;
  };
};

exports.numDiv = function (n1) {
  return function (n2) {
    return n1 / n2;
  };
};

//- Ring -----------------------------------------------------------------------

exports.intSub = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return x - y | 0;
  };
};

exports.numSub = function (n1) {
  return function (n2) {
    return n1 - n2;
  };
};

//- Eq -------------------------------------------------------------------------

exports.refEq = function (r1) {
  return function (r2) {
    return r1 === r2;
  };
};

exports.refIneq = function (r1) {
  return function (r2) {
    return r1 !== r2;
  };
};

exports.eqArrayImpl = function (f) {
  return function (xs) {
    return function (ys) {
      if (xs.length !== ys.length) return false;
      for (var i = 0; i < xs.length; i++) {
        if (!f(xs[i])(ys[i])) return false;
      }
      return true;
    };
  };
};

exports.ordArrayImpl = function (f) {
  return function (xs) {
    return function (ys) {
      var i = 0;
      var xlen = xs.length;
      var ylen = ys.length;
      while (i < xlen && i < ylen) {
        var x = xs[i];
        var y = ys[i];
        var o = f(x)(y);
        if (o !== 0) {
          return o;
        }
        i++;
      }
      if (xlen === ylen) {
        return 0;
      } else if (xlen > ylen) {
        return -1;
      } else {
        return 1;
      }
    };
  };
};

//- Ord ------------------------------------------------------------------------

exports.unsafeCompareImpl = function (lt) {
  return function (eq) {
    return function (gt) {
      return function (x) {
        return function (y) {
          return x < y ? lt : x > y ? gt : eq;
        };
      };
    };
  };
};

//- Bounded --------------------------------------------------------------------

exports.topChar = String.fromCharCode(65535);
exports.bottomChar = String.fromCharCode(0);

//- BooleanAlgebra -------------------------------------------------------------

exports.boolOr = function (b1) {
  return function (b2) {
    return b1 || b2;
  };
};

exports.boolAnd = function (b1) {
  return function (b2) {
    return b1 && b2;
  };
};

exports.boolNot = function (b) {
  return !b;
};

//- Show -----------------------------------------------------------------------

exports.showIntImpl = function (n) {
  return n.toString();
};

exports.showNumberImpl = function (n) {
  /* jshint bitwise: false */
  return n === (n | 0) ? n + ".0" : n.toString();
};

exports.showCharImpl = function (c) {
  return c === "'" ? "'\\''" : "'" + c + "'";
};

exports.showStringImpl = function (s) {
  return JSON.stringify(s);
};

exports.showArrayImpl = function (f) {
  return function (xs) {
    var ss = [];
    for (var i = 0, l = xs.length; i < l; i++) {
      ss[i] = f(xs[i]);
    }
    return "[" + ss.join(",") + "]";
  };
};

},{}],"/Users/simon/purescript-incremental/example/output/Prelude/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Unit = function (x) {
    return x;
};
var LT = (function () {
    function LT() {

    };
    LT.value = new LT();
    return LT;
})();
var GT = (function () {
    function GT() {

    };
    GT.value = new GT();
    return GT;
})();
var EQ = (function () {
    function EQ() {

    };
    EQ.value = new EQ();
    return EQ;
})();
var Semigroupoid = function (compose) {
    this.compose = compose;
};
var Category = function (__superclass_Prelude$dotSemigroupoid_0, id) {
    this["__superclass_Prelude.Semigroupoid_0"] = __superclass_Prelude$dotSemigroupoid_0;
    this.id = id;
};
var Functor = function (map) {
    this.map = map;
};
var Apply = function (__superclass_Prelude$dotFunctor_0, apply) {
    this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    this.apply = apply;
};
var Applicative = function (__superclass_Prelude$dotApply_0, pure) {
    this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
    this.pure = pure;
};
var Bind = function (__superclass_Prelude$dotApply_0, bind) {
    this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
    this.bind = bind;
};
var Monad = function (__superclass_Prelude$dotApplicative_0, __superclass_Prelude$dotBind_1) {
    this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
    this["__superclass_Prelude.Bind_1"] = __superclass_Prelude$dotBind_1;
};
var Semigroup = function (append) {
    this.append = append;
};
var Semiring = function (add, mul, one, zero) {
    this.add = add;
    this.mul = mul;
    this.one = one;
    this.zero = zero;
};
var Ring = function (__superclass_Prelude$dotSemiring_0, sub) {
    this["__superclass_Prelude.Semiring_0"] = __superclass_Prelude$dotSemiring_0;
    this.sub = sub;
};
var ModuloSemiring = function (__superclass_Prelude$dotSemiring_0, div, mod) {
    this["__superclass_Prelude.Semiring_0"] = __superclass_Prelude$dotSemiring_0;
    this.div = div;
    this.mod = mod;
};
var DivisionRing = function (__superclass_Prelude$dotModuloSemiring_1, __superclass_Prelude$dotRing_0) {
    this["__superclass_Prelude.ModuloSemiring_1"] = __superclass_Prelude$dotModuloSemiring_1;
    this["__superclass_Prelude.Ring_0"] = __superclass_Prelude$dotRing_0;
};
var Num = function (__superclass_Prelude$dotDivisionRing_0) {
    this["__superclass_Prelude.DivisionRing_0"] = __superclass_Prelude$dotDivisionRing_0;
};
var Eq = function (eq) {
    this.eq = eq;
};
var Ord = function (__superclass_Prelude$dotEq_0, compare) {
    this["__superclass_Prelude.Eq_0"] = __superclass_Prelude$dotEq_0;
    this.compare = compare;
};
var Bounded = function (bottom, top) {
    this.bottom = bottom;
    this.top = top;
};
var BoundedOrd = function (__superclass_Prelude$dotBounded_0, __superclass_Prelude$dotOrd_1) {
    this["__superclass_Prelude.Bounded_0"] = __superclass_Prelude$dotBounded_0;
    this["__superclass_Prelude.Ord_1"] = __superclass_Prelude$dotOrd_1;
};
var BooleanAlgebra = function (__superclass_Prelude$dotBounded_0, conj, disj, not) {
    this["__superclass_Prelude.Bounded_0"] = __superclass_Prelude$dotBounded_0;
    this.conj = conj;
    this.disj = disj;
    this.not = not;
};
var Show = function (show) {
    this.show = show;
};
var $dollar = function (f) {
    return function (x) {
        return f(x);
    };
};
var $hash = function (x) {
    return function (f) {
        return f(x);
    };
};
var zero = function (dict) {
    return dict.zero;
};
var unsafeCompare = $foreign.unsafeCompareImpl(LT.value)(EQ.value)(GT.value);
var unit = {};
var top = function (dict) {
    return dict.top;
};
var sub = function (dict) {
    return dict.sub;
};
var $minus = function (__dict_Ring_0) {
    return sub(__dict_Ring_0);
};
var showUnit = new Show(function (_51) {
    return "unit";
});
var showString = new Show($foreign.showStringImpl);
var showOrdering = new Show(function (_52) {
    if (_52 instanceof LT) {
        return "LT";
    };
    if (_52 instanceof GT) {
        return "GT";
    };
    if (_52 instanceof EQ) {
        return "EQ";
    };
    throw new Error("Failed pattern match at /Users/simon/purescript-incremental/example/bower_components/purescript-prelude/src/Prelude.purs line 860, column 1 - line 865, column 1: " + [ _52.constructor.name ]);
});
var showNumber = new Show($foreign.showNumberImpl);
var showInt = new Show($foreign.showIntImpl);
var showChar = new Show($foreign.showCharImpl);
var showBoolean = new Show(function (_50) {
    if (_50) {
        return "true";
    };
    if (!_50) {
        return "false";
    };
    throw new Error("Failed pattern match at /Users/simon/purescript-incremental/example/bower_components/purescript-prelude/src/Prelude.purs line 838, column 1 - line 842, column 1: " + [ _50.constructor.name ]);
});
var show = function (dict) {
    return dict.show;
};
var showArray = function (__dict_Show_1) {
    return new Show($foreign.showArrayImpl(show(__dict_Show_1)));
};
var semiringUnit = new Semiring(function (_23) {
    return function (_24) {
        return unit;
    };
}, function (_25) {
    return function (_26) {
        return unit;
    };
}, unit, unit);
var semiringNumber = new Semiring($foreign.numAdd, $foreign.numMul, 1.0, 0.0);
var semiringInt = new Semiring($foreign.intAdd, $foreign.intMul, 1, 0);
var semigroupoidFn = new Semigroupoid(function (f) {
    return function (g) {
        return function (x) {
            return f(g(x));
        };
    };
});
var semigroupUnit = new Semigroup(function (_20) {
    return function (_21) {
        return unit;
    };
});
var semigroupString = new Semigroup($foreign.concatString);
var semigroupOrdering = new Semigroup(function (_22) {
    return function (y) {
        if (_22 instanceof LT) {
            return LT.value;
        };
        if (_22 instanceof GT) {
            return GT.value;
        };
        if (_22 instanceof EQ) {
            return y;
        };
        throw new Error("Failed pattern match at /Users/simon/purescript-incremental/example/bower_components/purescript-prelude/src/Prelude.purs line 413, column 1 - line 418, column 1: " + [ _22.constructor.name, y.constructor.name ]);
    };
});
var semigroupArray = new Semigroup($foreign.concatArray);
var ringUnit = new Ring(function () {
    return semiringUnit;
}, function (_27) {
    return function (_28) {
        return unit;
    };
});
var ringNumber = new Ring(function () {
    return semiringNumber;
}, $foreign.numSub);
var ringInt = new Ring(function () {
    return semiringInt;
}, $foreign.intSub);
var pure = function (dict) {
    return dict.pure;
};
var $$return = function (__dict_Applicative_2) {
    return pure(__dict_Applicative_2);
};
var otherwise = true;
var one = function (dict) {
    return dict.one;
};
var not = function (dict) {
    return dict.not;
};
var negate = function (__dict_Ring_3) {
    return function (a) {
        return $minus(__dict_Ring_3)(zero(__dict_Ring_3["__superclass_Prelude.Semiring_0"]()))(a);
    };
};
var mul = function (dict) {
    return dict.mul;
};
var $times = function (__dict_Semiring_4) {
    return mul(__dict_Semiring_4);
};
var moduloSemiringUnit = new ModuloSemiring(function () {
    return semiringUnit;
}, function (_31) {
    return function (_32) {
        return unit;
    };
}, function (_33) {
    return function (_34) {
        return unit;
    };
});
var moduloSemiringNumber = new ModuloSemiring(function () {
    return semiringNumber;
}, $foreign.numDiv, function (_29) {
    return function (_30) {
        return 0.0;
    };
});
var moduloSemiringInt = new ModuloSemiring(function () {
    return semiringInt;
}, $foreign.intDiv, $foreign.intMod);
var mod = function (dict) {
    return dict.mod;
};
var map = function (dict) {
    return dict.map;
};
var $less$dollar$greater = function (__dict_Functor_5) {
    return map(__dict_Functor_5);
};
var $less$hash$greater = function (__dict_Functor_6) {
    return function (fa) {
        return function (f) {
            return $less$dollar$greater(__dict_Functor_6)(f)(fa);
        };
    };
};
var id = function (dict) {
    return dict.id;
};
var functorArray = new Functor($foreign.arrayMap);
var flip = function (f) {
    return function (b) {
        return function (a) {
            return f(a)(b);
        };
    };
};
var eqUnit = new Eq(function (_35) {
    return function (_36) {
        return true;
    };
});
var ordUnit = new Ord(function () {
    return eqUnit;
}, function (_39) {
    return function (_40) {
        return EQ.value;
    };
});
var eqString = new Eq($foreign.refEq);
var ordString = new Ord(function () {
    return eqString;
}, unsafeCompare);
var eqOrdering = new Eq(function (_37) {
    return function (_38) {
        if (_37 instanceof LT && _38 instanceof LT) {
            return true;
        };
        if (_37 instanceof GT && _38 instanceof GT) {
            return true;
        };
        if (_37 instanceof EQ && _38 instanceof EQ) {
            return true;
        };
        return false;
    };
});
var ordOrdering = new Ord(function () {
    return eqOrdering;
}, function (_41) {
    return function (_42) {
        if (_41 instanceof LT && _42 instanceof LT) {
            return EQ.value;
        };
        if (_41 instanceof EQ && _42 instanceof EQ) {
            return EQ.value;
        };
        if (_41 instanceof GT && _42 instanceof GT) {
            return EQ.value;
        };
        if (_41 instanceof LT) {
            return LT.value;
        };
        if (_41 instanceof EQ && _42 instanceof LT) {
            return GT.value;
        };
        if (_41 instanceof EQ && _42 instanceof GT) {
            return LT.value;
        };
        if (_41 instanceof GT) {
            return GT.value;
        };
        throw new Error("Failed pattern match at /Users/simon/purescript-incremental/example/bower_components/purescript-prelude/src/Prelude.purs line 668, column 1 - line 677, column 1: " + [ _41.constructor.name, _42.constructor.name ]);
    };
});
var eqNumber = new Eq($foreign.refEq);
var ordNumber = new Ord(function () {
    return eqNumber;
}, unsafeCompare);
var eqInt = new Eq($foreign.refEq);
var ordInt = new Ord(function () {
    return eqInt;
}, unsafeCompare);
var eqChar = new Eq($foreign.refEq);
var ordChar = new Ord(function () {
    return eqChar;
}, unsafeCompare);
var eqBoolean = new Eq($foreign.refEq);
var ordBoolean = new Ord(function () {
    return eqBoolean;
}, unsafeCompare);
var eq = function (dict) {
    return dict.eq;
};
var $eq$eq = function (__dict_Eq_7) {
    return eq(__dict_Eq_7);
};
var eqArray = function (__dict_Eq_8) {
    return new Eq($foreign.eqArrayImpl($eq$eq(__dict_Eq_8)));
};
var divisionRingUnit = new DivisionRing(function () {
    return moduloSemiringUnit;
}, function () {
    return ringUnit;
});
var numUnit = new Num(function () {
    return divisionRingUnit;
});
var divisionRingNumber = new DivisionRing(function () {
    return moduloSemiringNumber;
}, function () {
    return ringNumber;
});
var numNumber = new Num(function () {
    return divisionRingNumber;
});
var div = function (dict) {
    return dict.div;
};
var $div = function (__dict_ModuloSemiring_10) {
    return div(__dict_ModuloSemiring_10);
};
var disj = function (dict) {
    return dict.disj;
};
var $bar$bar = function (__dict_BooleanAlgebra_11) {
    return disj(__dict_BooleanAlgebra_11);
};
var $$const = function (a) {
    return function (_18) {
        return a;
    };
};
var $$void = function (__dict_Functor_12) {
    return function (fa) {
        return $less$dollar$greater(__dict_Functor_12)($$const(unit))(fa);
    };
};
var conj = function (dict) {
    return dict.conj;
};
var $amp$amp = function (__dict_BooleanAlgebra_13) {
    return conj(__dict_BooleanAlgebra_13);
};
var compose = function (dict) {
    return dict.compose;
};
var functorFn = new Functor(compose(semigroupoidFn));
var $less$less$less = function (__dict_Semigroupoid_14) {
    return compose(__dict_Semigroupoid_14);
};
var $greater$greater$greater = function (__dict_Semigroupoid_15) {
    return flip(compose(__dict_Semigroupoid_15));
};
var compare = function (dict) {
    return dict.compare;
};
var ordArray = function (__dict_Ord_16) {
    return new Ord(function () {
        return eqArray(__dict_Ord_16["__superclass_Prelude.Eq_0"]());
    }, function (xs) {
        return function (ys) {
            return $dollar(compare(ordInt)(0))($foreign.ordArrayImpl(function (x) {
                return function (y) {
                    var _365 = compare(__dict_Ord_16)(x)(y);
                    if (_365 instanceof EQ) {
                        return 0;
                    };
                    if (_365 instanceof LT) {
                        return 1;
                    };
                    if (_365 instanceof GT) {
                        return negate(ringInt)(1);
                    };
                    throw new Error("Failed pattern match at /Users/simon/purescript-incremental/example/bower_components/purescript-prelude/src/Prelude.purs line 660, column 1 - line 666, column 1: " + [ _365.constructor.name ]);
                };
            })(xs)(ys));
        };
    });
};
var $less = function (__dict_Ord_17) {
    return function (a1) {
        return function (a2) {
            var _366 = compare(__dict_Ord_17)(a1)(a2);
            if (_366 instanceof LT) {
                return true;
            };
            return false;
        };
    };
};
var $less$eq = function (__dict_Ord_18) {
    return function (a1) {
        return function (a2) {
            var _367 = compare(__dict_Ord_18)(a1)(a2);
            if (_367 instanceof GT) {
                return false;
            };
            return true;
        };
    };
};
var $greater = function (__dict_Ord_19) {
    return function (a1) {
        return function (a2) {
            var _368 = compare(__dict_Ord_19)(a1)(a2);
            if (_368 instanceof GT) {
                return true;
            };
            return false;
        };
    };
};
var $greater$eq = function (__dict_Ord_20) {
    return function (a1) {
        return function (a2) {
            var _369 = compare(__dict_Ord_20)(a1)(a2);
            if (_369 instanceof LT) {
                return false;
            };
            return true;
        };
    };
};
var categoryFn = new Category(function () {
    return semigroupoidFn;
}, function (x) {
    return x;
});
var boundedUnit = new Bounded(unit, unit);
var boundedOrdering = new Bounded(LT.value, GT.value);
var boundedOrdUnit = new BoundedOrd(function () {
    return boundedUnit;
}, function () {
    return ordUnit;
});
var boundedOrdOrdering = new BoundedOrd(function () {
    return boundedOrdering;
}, function () {
    return ordOrdering;
});
var boundedInt = new Bounded(negate(ringInt)(2147483648), 2147483647);
var boundedOrdInt = new BoundedOrd(function () {
    return boundedInt;
}, function () {
    return ordInt;
});
var boundedChar = new Bounded($foreign.bottomChar, $foreign.topChar);
var boundedOrdChar = new BoundedOrd(function () {
    return boundedChar;
}, function () {
    return ordChar;
});
var boundedBoolean = new Bounded(false, true);
var boundedOrdBoolean = new BoundedOrd(function () {
    return boundedBoolean;
}, function () {
    return ordBoolean;
});
var bottom = function (dict) {
    return dict.bottom;
};
var boundedFn = function (__dict_Bounded_21) {
    return new Bounded(function (_44) {
        return bottom(__dict_Bounded_21);
    }, function (_43) {
        return top(__dict_Bounded_21);
    });
};
var booleanAlgebraUnit = new BooleanAlgebra(function () {
    return boundedUnit;
}, function (_45) {
    return function (_46) {
        return unit;
    };
}, function (_47) {
    return function (_48) {
        return unit;
    };
}, function (_49) {
    return unit;
});
var booleanAlgebraFn = function (__dict_BooleanAlgebra_22) {
    return new BooleanAlgebra(function () {
        return boundedFn(__dict_BooleanAlgebra_22["__superclass_Prelude.Bounded_0"]());
    }, function (fx) {
        return function (fy) {
            return function (a) {
                return conj(__dict_BooleanAlgebra_22)(fx(a))(fy(a));
            };
        };
    }, function (fx) {
        return function (fy) {
            return function (a) {
                return disj(__dict_BooleanAlgebra_22)(fx(a))(fy(a));
            };
        };
    }, function (fx) {
        return function (a) {
            return not(__dict_BooleanAlgebra_22)(fx(a));
        };
    });
};
var booleanAlgebraBoolean = new BooleanAlgebra(function () {
    return boundedBoolean;
}, $foreign.boolAnd, $foreign.boolOr, $foreign.boolNot);
var $div$eq = function (__dict_Eq_9) {
    return function (x) {
        return function (y) {
            return not(booleanAlgebraBoolean)($eq$eq(__dict_Eq_9)(x)(y));
        };
    };
};
var bind = function (dict) {
    return dict.bind;
};
var liftM1 = function (__dict_Monad_23) {
    return function (f) {
        return function (a) {
            return bind(__dict_Monad_23["__superclass_Prelude.Bind_1"]())(a)(function (_3) {
                return $$return(__dict_Monad_23["__superclass_Prelude.Applicative_0"]())(f(_3));
            });
        };
    };
};
var $greater$greater$eq = function (__dict_Bind_24) {
    return bind(__dict_Bind_24);
};
var asTypeOf = function (x) {
    return function (_19) {
        return x;
    };
};
var applyFn = new Apply(function () {
    return functorFn;
}, function (f) {
    return function (g) {
        return function (x) {
            return f(x)(g(x));
        };
    };
});
var bindFn = new Bind(function () {
    return applyFn;
}, function (m) {
    return function (f) {
        return function (x) {
            return f(m(x))(x);
        };
    };
});
var apply = function (dict) {
    return dict.apply;
};
var $less$times$greater = function (__dict_Apply_25) {
    return apply(__dict_Apply_25);
};
var liftA1 = function (__dict_Applicative_26) {
    return function (f) {
        return function (a) {
            return $less$times$greater(__dict_Applicative_26["__superclass_Prelude.Apply_0"]())(pure(__dict_Applicative_26)(f))(a);
        };
    };
};
var applicativeFn = new Applicative(function () {
    return applyFn;
}, $$const);
var monadFn = new Monad(function () {
    return applicativeFn;
}, function () {
    return bindFn;
});
var append = function (dict) {
    return dict.append;
};
var $plus$plus = function (__dict_Semigroup_27) {
    return append(__dict_Semigroup_27);
};
var $less$greater = function (__dict_Semigroup_28) {
    return append(__dict_Semigroup_28);
};
var semigroupFn = function (__dict_Semigroup_29) {
    return new Semigroup(function (f) {
        return function (g) {
            return function (x) {
                return $less$greater(__dict_Semigroup_29)(f(x))(g(x));
            };
        };
    });
};
var ap = function (__dict_Monad_30) {
    return function (f) {
        return function (a) {
            return bind(__dict_Monad_30["__superclass_Prelude.Bind_1"]())(f)(function (_5) {
                return bind(__dict_Monad_30["__superclass_Prelude.Bind_1"]())(a)(function (_4) {
                    return $$return(__dict_Monad_30["__superclass_Prelude.Applicative_0"]())(_5(_4));
                });
            });
        };
    };
};
var monadArray = new Monad(function () {
    return applicativeArray;
}, function () {
    return bindArray;
});
var bindArray = new Bind(function () {
    return applyArray;
}, $foreign.arrayBind);
var applyArray = new Apply(function () {
    return functorArray;
}, ap(monadArray));
var applicativeArray = new Applicative(function () {
    return applyArray;
}, function (x) {
    return [ x ];
});
var add = function (dict) {
    return dict.add;
};
var $plus = function (__dict_Semiring_31) {
    return add(__dict_Semiring_31);
};
module.exports = {
    LT: LT, 
    GT: GT, 
    EQ: EQ, 
    Show: Show, 
    BooleanAlgebra: BooleanAlgebra, 
    BoundedOrd: BoundedOrd, 
    Bounded: Bounded, 
    Ord: Ord, 
    Eq: Eq, 
    DivisionRing: DivisionRing, 
    Num: Num, 
    Ring: Ring, 
    ModuloSemiring: ModuloSemiring, 
    Semiring: Semiring, 
    Semigroup: Semigroup, 
    Monad: Monad, 
    Bind: Bind, 
    Applicative: Applicative, 
    Apply: Apply, 
    Functor: Functor, 
    Category: Category, 
    Semigroupoid: Semigroupoid, 
    show: show, 
    "||": $bar$bar, 
    "&&": $amp$amp, 
    not: not, 
    disj: disj, 
    conj: conj, 
    bottom: bottom, 
    top: top, 
    unsafeCompare: unsafeCompare, 
    ">=": $greater$eq, 
    "<=": $less$eq, 
    ">": $greater, 
    "<": $less, 
    compare: compare, 
    "/=": $div$eq, 
    "==": $eq$eq, 
    eq: eq, 
    "-": $minus, 
    negate: negate, 
    sub: sub, 
    "/": $div, 
    mod: mod, 
    div: div, 
    "*": $times, 
    "+": $plus, 
    one: one, 
    mul: mul, 
    zero: zero, 
    add: add, 
    "++": $plus$plus, 
    "<>": $less$greater, 
    append: append, 
    ap: ap, 
    liftM1: liftM1, 
    "return": $$return, 
    ">>=": $greater$greater$eq, 
    bind: bind, 
    liftA1: liftA1, 
    pure: pure, 
    "<*>": $less$times$greater, 
    apply: apply, 
    "void": $$void, 
    "<#>": $less$hash$greater, 
    "<$>": $less$dollar$greater, 
    map: map, 
    id: id, 
    ">>>": $greater$greater$greater, 
    "<<<": $less$less$less, 
    compose: compose, 
    otherwise: otherwise, 
    asTypeOf: asTypeOf, 
    "const": $$const, 
    flip: flip, 
    "#": $hash, 
    "$": $dollar, 
    unit: unit, 
    semigroupoidFn: semigroupoidFn, 
    categoryFn: categoryFn, 
    functorFn: functorFn, 
    functorArray: functorArray, 
    applyFn: applyFn, 
    applyArray: applyArray, 
    applicativeFn: applicativeFn, 
    applicativeArray: applicativeArray, 
    bindFn: bindFn, 
    bindArray: bindArray, 
    monadFn: monadFn, 
    monadArray: monadArray, 
    semigroupString: semigroupString, 
    semigroupUnit: semigroupUnit, 
    semigroupFn: semigroupFn, 
    semigroupOrdering: semigroupOrdering, 
    semigroupArray: semigroupArray, 
    semiringInt: semiringInt, 
    semiringNumber: semiringNumber, 
    semiringUnit: semiringUnit, 
    ringInt: ringInt, 
    ringNumber: ringNumber, 
    ringUnit: ringUnit, 
    moduloSemiringInt: moduloSemiringInt, 
    moduloSemiringNumber: moduloSemiringNumber, 
    moduloSemiringUnit: moduloSemiringUnit, 
    divisionRingNumber: divisionRingNumber, 
    divisionRingUnit: divisionRingUnit, 
    numNumber: numNumber, 
    numUnit: numUnit, 
    eqBoolean: eqBoolean, 
    eqInt: eqInt, 
    eqNumber: eqNumber, 
    eqChar: eqChar, 
    eqString: eqString, 
    eqUnit: eqUnit, 
    eqArray: eqArray, 
    eqOrdering: eqOrdering, 
    ordBoolean: ordBoolean, 
    ordInt: ordInt, 
    ordNumber: ordNumber, 
    ordString: ordString, 
    ordChar: ordChar, 
    ordUnit: ordUnit, 
    ordArray: ordArray, 
    ordOrdering: ordOrdering, 
    boundedBoolean: boundedBoolean, 
    boundedUnit: boundedUnit, 
    boundedOrdering: boundedOrdering, 
    boundedInt: boundedInt, 
    boundedChar: boundedChar, 
    boundedFn: boundedFn, 
    boundedOrdBoolean: boundedOrdBoolean, 
    boundedOrdUnit: boundedOrdUnit, 
    boundedOrdOrdering: boundedOrdOrdering, 
    boundedOrdInt: boundedOrdInt, 
    boundedOrdChar: boundedOrdChar, 
    booleanAlgebraBoolean: booleanAlgebraBoolean, 
    booleanAlgebraUnit: booleanAlgebraUnit, 
    booleanAlgebraFn: booleanAlgebraFn, 
    showBoolean: showBoolean, 
    showInt: showInt, 
    showNumber: showNumber, 
    showChar: showChar, 
    showString: showString, 
    showUnit: showUnit, 
    showArray: showArray, 
    showOrdering: showOrdering
};

},{"./foreign":"/Users/simon/purescript-incremental/example/output/Prelude/foreign.js"}],"/Users/simon/purescript-incremental/example/output/Signal.Channel/foreign.js":[function(require,module,exports){
// module Signal.Channel

exports.channelP =
  function channelP(constant) {
    return function(v) {
      return function() {
        return constant(v);
      };
    };
  };

exports.sendP =
  function sendP(chan, v) {
    return function(v) {
      return function() {
        chan.set(v);
      };
    };
  };

exports.subscribe =
  function subscribe(chan) {
    return chan;
  };

},{}],"/Users/simon/purescript-incremental/example/output/Signal.Channel/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Signal = require("Signal");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Prelude = require("Prelude");
var send = $foreign.sendP;
var channel = $foreign.channelP(Signal.constant);
module.exports = {
    send: send, 
    channel: channel, 
    subscribe: $foreign.subscribe
};

},{"./foreign":"/Users/simon/purescript-incremental/example/output/Signal.Channel/foreign.js","Control.Monad.Eff":"/Users/simon/purescript-incremental/example/output/Control.Monad.Eff/index.js","Prelude":"/Users/simon/purescript-incremental/example/output/Prelude/index.js","Signal":"/Users/simon/purescript-incremental/example/output/Signal/index.js"}],"/Users/simon/purescript-incremental/example/output/Signal/foreign.js":[function(require,module,exports){
// module Signal

exports.constant =
  function constant(initial) {
    var subs = [];
    var val = initial;
    var sig = {
      subscribe: function(sub) {
        subs.push(sub);
        sub(val);
      },
      get: function() { return val; },
      set: function(newval) {
        val = newval;
        subs.forEach(function(sub) { sub(newval); });
      }
    };
    return sig;
  };

exports.mapSigP =
  function mapSigP(constant) {
    return function(fun) {
      return function(sig) {
        var out = constant(fun(sig.get()));
        sig.subscribe(function(val) { out.set(fun(val)); });
        return out;
      };
    };
  };


exports.applySigP =
  function applySigP(constant) {
    return function(fun) {
      return function(sig) {
        var out = constant(fun.get()(sig.get()));
        var produce = function() { out.set(fun.get()(sig.get())); };
        fun.subscribe(produce);
        sig.subscribe(produce);
        return out;
      };
    };
  };

exports.mergeP =
  function mergeP(constant) {
    return function(sig1) {
      return function(sig2) {
        var out = constant(sig1.get());
        sig2.subscribe(out.set);
        sig1.subscribe(out.set);
        return out;
      };
    };
  };

exports.foldpP =
  function foldpP(constant) {
    return function(fun) {
      return function(seed) {
        return function(sig) {
          var acc = seed;
          var out = constant(acc);
          sig.subscribe(function(val) {
            acc = fun(val)(acc);
            out.set(acc);
          });
          return out;
        };
      };
    };
  };

exports.sampleOnP =
  function sampleOnP(constant) {
    return function(sig1) {
      return function(sig2) {
        var out = constant(sig2.get());
        sig1.subscribe(function() {
          out.set(sig2.get());
        });
        return out;
      };
    };
  };

exports.dropRepeatsP =
function dropRepeatsP(eq) {
  return function(constant) {
    return function(sig) {
      var val = sig.get();
      var out = constant(val);
      sig.subscribe(function(newval) {
        if (!eq["eq"](val)(newval)) {
          val = newval;
          out.set(val);
        }
      });
      return out;
    };
  };
};

exports.dropRepeatsRefP =
  function dropRepeatsRefP(constant) {
    return function(sig) {
      var val = sig.get();
      var out = constant(val);
      sig.subscribe(function(newval) {
        if (val !== newval) {
          val = newval;
          out.set(val);
        }
      });
      return out;
    };
  };

exports.runSignal =
  function runSignal(sig) {
    return function() {
      sig.subscribe(function(val) {
        val();
      });
      return {};
    };
  };

exports.unwrapP =
  function unwrapP(constant) {
    return function(sig) {
      return function() {
        var out = constant(sig.get()());
        sig.subscribe(function(val) { out.set(val()); });
        return out;
      };
    };
  };

exports.filterP =
  function keepIfP(constant) {
    return function(fn) {
      return function(seed) {
        return function(sig) {
          var out = constant(fn(sig.get()) ? sig.get() : seed);
          sig.subscribe(function(val) { if (fn(val)) out.set(val); });
          return out;
        };
      };
    };
  };

},{}],"/Users/simon/purescript-incremental/example/output/Signal/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Data_Foldable = require("Data.Foldable");
var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");
var Control_Monad_Eff = require("Control.Monad.Eff");
var $tilde$greater = function (__dict_Functor_0) {
    return Prelude.flip(Prelude["<$>"](__dict_Functor_0));
};
var $tilde = function (__dict_Apply_1) {
    return Prelude["<*>"](__dict_Apply_1);
};
var $less$tilde = function (__dict_Functor_2) {
    return Prelude["<$>"](__dict_Functor_2);
};
var unwrap = $foreign.unwrapP($foreign.constant);
var sampleOn = $foreign.sampleOnP($foreign.constant);
var merge = $foreign.mergeP($foreign.constant);
var mergeMany = function (__dict_Functor_3) {
    return function (__dict_Foldable_4) {
        return function (sigs) {
            var mergeMaybe = function (_354) {
                return function (_355) {
                    if (_355 instanceof Data_Maybe.Nothing) {
                        return _354;
                    };
                    if (_354 instanceof Data_Maybe.Nothing) {
                        return _355;
                    };
                    if (_354 instanceof Data_Maybe.Just && _355 instanceof Data_Maybe.Just) {
                        return new Data_Maybe.Just(merge(_354.value0)(_355.value0));
                    };
                    throw new Error("Failed pattern match at /Users/simon/purescript-incremental/example/bower_components/purescript-signal/src/Signal.purs line 52, column 9 - line 53, column 9: " + [ _354.constructor.name, _355.constructor.name ]);
                };
            };
            return Data_Foldable.foldl(__dict_Foldable_4)(mergeMaybe)(Data_Maybe.Nothing.value)(Prelude["<$>"](__dict_Functor_3)(Data_Maybe.Just.create)(sigs));
        };
    };
};
var semigroupSignal = new Prelude.Semigroup(merge);
var mapSig = $foreign.mapSigP($foreign.constant);
var functorSignal = new Prelude.Functor(mapSig);
var foldp = $foreign.foldpP($foreign.constant);
var filter = $foreign.filterP($foreign.constant);
var filterMap = function (f) {
    return function (def) {
        return function (sig) {
            return Prelude["<$>"](functorSignal)(Data_Maybe.fromMaybe(def))(filter(Data_Maybe.isJust)(new Data_Maybe.Just(def))(Prelude["<$>"](functorSignal)(f)(sig)));
        };
    };
};
var dropRepeats$prime = $foreign.dropRepeatsRefP($foreign.constant);
var dropRepeats = function (__dict_Eq_5) {
    return $foreign.dropRepeatsP(__dict_Eq_5)($foreign.constant);
};
var applySig = $foreign.applySigP($foreign.constant);
var applySignal = new Prelude.Apply(function () {
    return functorSignal;
}, applySig);
var map2 = function (f) {
    return function (a) {
        return function (b) {
            return $tilde(applySignal)($less$tilde(functorSignal)(f)(a))(b);
        };
    };
};
var map3 = function (f) {
    return function (a) {
        return function (b) {
            return function (c) {
                return $tilde(applySignal)($tilde(applySignal)($less$tilde(functorSignal)(f)(a))(b))(c);
            };
        };
    };
};
var map4 = function (f) {
    return function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return $tilde(applySignal)($tilde(applySignal)($tilde(applySignal)($less$tilde(functorSignal)(f)(a))(b))(c))(d);
                };
            };
        };
    };
};
var map5 = function (f) {
    return function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return function (e) {
                        return $tilde(applySignal)($tilde(applySignal)($tilde(applySignal)($tilde(applySignal)($less$tilde(functorSignal)(f)(a))(b))(c))(d))(e);
                    };
                };
            };
        };
    };
};
var applicativeSignal = new Prelude.Applicative(function () {
    return applySignal;
}, $foreign.constant);
module.exports = {
    "~": $tilde, 
    "~>": $tilde$greater, 
    "<~": $less$tilde, 
    filterMap: filterMap, 
    filter: filter, 
    unwrap: unwrap, 
    "dropRepeats'": dropRepeats$prime, 
    dropRepeats: dropRepeats, 
    sampleOn: sampleOn, 
    foldp: foldp, 
    mergeMany: mergeMany, 
    merge: merge, 
    functorSignal: functorSignal, 
    applySignal: applySignal, 
    applicativeSignal: applicativeSignal, 
    semigroupSignal: semigroupSignal, 
    runSignal: $foreign.runSignal, 
    constant: $foreign.constant
};

},{"./foreign":"/Users/simon/purescript-incremental/example/output/Signal/foreign.js","Control.Monad.Eff":"/Users/simon/purescript-incremental/example/output/Control.Monad.Eff/index.js","Data.Foldable":"/Users/simon/purescript-incremental/example/output/Data.Foldable/index.js","Data.Maybe":"/Users/simon/purescript-incremental/example/output/Data.Maybe/index.js","Prelude":"/Users/simon/purescript-incremental/example/output/Prelude/index.js"}],"/Users/simon/purescript-incremental/example/output/Store/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Array = require("Data.Array");
var Action = require("Action");
var newTask = function (taskId) {
    return function (description) {
        return {
            taskId: taskId, 
            description: description, 
            completed: false, 
            editing: false
        };
    };
};
var initialAppState = {
    inputVal: "", 
    todos: [  ], 
    lastUid: 0, 
    filter: ""
};
var handleAction = function (action) {
    return function (state) {
        if (action instanceof Action.NoOp) {
            return state;
        };
        if (action instanceof Action.Add) {
            var uid = Prelude["+"](Prelude.semiringInt)(state.lastUid)(1);
            var newTodos = Data_Array[":"](newTask(uid)(action.value0))(state.todos);
            var _463 = {};
            for (var _464 in state) {
                if (state.hasOwnProperty(_464)) {
                    _463[_464] = state[_464];
                };
            };
            _463.lastUid = uid;
            _463.todos = newTodos;
            _463.inputVal = "";
            return _463;
        };
        if (action instanceof Action.Check) {
            var changeTodo = function (t) {
                var _466 = Prelude["=="](Prelude.eqInt)(t.taskId)(action.value0);
                if (_466) {
                    var _467 = {};
                    for (var _468 in t) {
                        if (t.hasOwnProperty(_468)) {
                            _467[_468] = t[_468];
                        };
                    };
                    _467.completed = action.value1;
                    return _467;
                };
                if (!_466) {
                    return t;
                };
                throw new Error("Failed pattern match at /Users/simon/purescript-incremental/example/src/Store.purs line 52, column 17 - line 53, column 13: " + [ _466.constructor.name ]);
            };
            var newTodos = Prelude["<$>"](Prelude.functorArray)(changeTodo)(state.todos);
            var _469 = {};
            for (var _470 in state) {
                if (state.hasOwnProperty(_470)) {
                    _469[_470] = state[_470];
                };
            };
            _469.todos = newTodos;
            return _469;
        };
        if (action instanceof Action.Delete) {
            var newTodos = Data_Array.filter(function (t) {
                return Prelude["/="](Prelude.eqInt)(t.taskId)(action.value0);
            })(state.todos);
            var _473 = {};
            for (var _474 in state) {
                if (state.hasOwnProperty(_474)) {
                    _473[_474] = state[_474];
                };
            };
            _473.todos = newTodos;
            return _473;
        };
        if (action instanceof Action.ChangedInput) {
            var _476 = {};
            for (var _477 in state) {
                if (state.hasOwnProperty(_477)) {
                    _476[_477] = state[_477];
                };
            };
            _476.inputVal = action.value0;
            return _476;
        };
        if (action instanceof Action.DeleteCompleted) {
            var newTodos = Data_Array.filter(function (t) {
                return Prelude.not(Prelude.booleanAlgebraBoolean)(t.completed);
            })(state.todos);
            var _479 = {};
            for (var _480 in state) {
                if (state.hasOwnProperty(_480)) {
                    _479[_480] = state[_480];
                };
            };
            _479.todos = newTodos;
            return _479;
        };
        if (action instanceof Action.Edit) {
            var changeTodo = function (t) {
                var _481 = Prelude["=="](Prelude.eqInt)(t.taskId)(action.value0);
                if (_481) {
                    var _482 = {};
                    for (var _483 in t) {
                        if (t.hasOwnProperty(_483)) {
                            _482[_483] = t[_483];
                        };
                    };
                    _482.editing = action.value1;
                    return _482;
                };
                if (!_481) {
                    return t;
                };
                throw new Error("Failed pattern match at /Users/simon/purescript-incremental/example/src/Store.purs line 67, column 17 - line 68, column 13: " + [ _481.constructor.name ]);
            };
            var newTodos = Prelude["<$>"](Prelude.functorArray)(changeTodo)(state.todos);
            var _484 = {};
            for (var _485 in state) {
                if (state.hasOwnProperty(_485)) {
                    _484[_485] = state[_485];
                };
            };
            _484.todos = newTodos;
            return _484;
        };
        if (action instanceof Action.ChangeDescription) {
            var changeTodo = function (t) {
                var _488 = Prelude["=="](Prelude.eqInt)(t.taskId)(action.value0);
                if (_488) {
                    var _489 = {};
                    for (var _490 in t) {
                        if (t.hasOwnProperty(_490)) {
                            _489[_490] = t[_490];
                        };
                    };
                    _489.description = action.value1;
                    return _489;
                };
                if (!_488) {
                    return t;
                };
                throw new Error("Failed pattern match at /Users/simon/purescript-incremental/example/src/Store.purs line 72, column 17 - line 73, column 13: " + [ _488.constructor.name ]);
            };
            var newTodos = Prelude["<$>"](Prelude.functorArray)(changeTodo)(state.todos);
            var _491 = {};
            for (var _492 in state) {
                if (state.hasOwnProperty(_492)) {
                    _491[_492] = state[_492];
                };
            };
            _491.todos = newTodos;
            return _491;
        };
        if (action instanceof Action.ChangeFilter) {
            var _495 = {};
            for (var _496 in state) {
                if (state.hasOwnProperty(_496)) {
                    _495[_496] = state[_496];
                };
            };
            _495.filter = action.value0;
            return _495;
        };
        throw new Error("Failed pattern match at /Users/simon/purescript-incremental/example/src/Store.purs line 40, column 1 - line 41, column 1: " + [ action.constructor.name ]);
    };
};
module.exports = {
    handleAction: handleAction, 
    initialAppState: initialAppState
};

},{"Action":"/Users/simon/purescript-incremental/example/output/Action/index.js","Data.Array":"/Users/simon/purescript-incremental/example/output/Data.Array/index.js","Prelude":"/Users/simon/purescript-incremental/example/output/Prelude/index.js"}],"/Users/simon/purescript-incremental/example/output/Unsafe.Coerce/foreign.js":[function(require,module,exports){
"use strict";

// module Unsafe.Coerce

exports.unsafeCoerce = function(x) { return x; }

},{}],"/Users/simon/purescript-incremental/example/output/Unsafe.Coerce/index.js":[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
module.exports = {
    unsafeCoerce: $foreign.unsafeCoerce
};

},{"./foreign":"/Users/simon/purescript-incremental/example/output/Unsafe.Coerce/foreign.js"}],"/Users/simon/purescript-incremental/example/output/browserify.js":[function(require,module,exports){
require('Main').main();

},{"Main":"/Users/simon/purescript-incremental/example/output/Main/index.js"}],"/Users/simon/purescript-incremental/node_modules/incremental-dom/dist/incremental-dom-cjs.js":[function(require,module,exports){
(function (process){

/**
 * @license
 * Copyright 2015 The Incremental DOM Authors. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS-IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

'use strict';

/**
 * Copyright 2015 The Incremental DOM Authors. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS-IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/** */
exports.notifications = {
  /**
   * Called after patch has compleated with any Nodes that have been created
   * and added to the DOM.
   * @type {?function(Array<!Node>)}
   */
  nodesCreated: null,

  /**
   * Called after patch has compleated with any Nodes that have been removed
   * from the DOM.
   * Note it's an applications responsibility to handle any childNodes.
   * @type {?function(Array<!Node>)}
   */
  nodesDeleted: null
};

/**
 * Copyright 2015 The Incremental DOM Authors. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS-IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Similar to the built-in Treewalker class, but simplified and allows direct
 * access to modify the currentNode property.
 * @param {!Element|!DocumentFragment} node The root Node of the subtree the
 *     walker should start traversing.
 * @constructor
 */
function TreeWalker(node) {
  /**
   * Keeps track of the current parent node. This is necessary as the traversal
   * methods may traverse past the last child and we still need a way to get
   * back to the parent.
   * @const @private {!Array<!Node>}
   */
  this.stack_ = [];

  /**
   * @const {!Element|!DocumentFragment}
   */
  this.root = node;

  /**
   * @type {?Node}
   */
  this.currentNode = node;
}

/**
 * @return {!Node} The current parent of the current location in the subtree.
 */
TreeWalker.prototype.getCurrentParent = function () {
  return this.stack_[this.stack_.length - 1];
};

/**
 * Changes the current location the firstChild of the current location.
 */
TreeWalker.prototype.firstChild = function () {
  this.stack_.push(this.currentNode);
  this.currentNode = this.currentNode.firstChild;
};

/**
 * Changes the current location the nextSibling of the current location.
 */
TreeWalker.prototype.nextSibling = function () {
  this.currentNode = this.currentNode.nextSibling;
};

/**
 * Changes the current location the parentNode of the current location.
 */
TreeWalker.prototype.parentNode = function () {
  this.currentNode = this.stack_.pop();
};

/**
 * Keeps track of the state of a patch.
 * @param {!Element|!DocumentFragment} node The root Node of the subtree the
 *     is for.
 * @param {?Context} prevContext The previous context.
 * @constructor
 */
function Context(node, prevContext) {
  /**
   * @const {TreeWalker}
   */
  this.walker = new TreeWalker(node);

  /**
   * @const {Document}
   */
  this.doc = node.ownerDocument;

  /**
   * Keeps track of what namespace to create new Elements in.
   * @private
   * @const {!Array<(string|undefined)>}
   */
  this.nsStack_ = [undefined];

  /**
   * @const {?Context}
   */
  this.prevContext = prevContext;

  /**
   * @type {(Array<!Node>|undefined)}
   */
  this.created = exports.notifications.nodesCreated && [];

  /**
   * @type {(Array<!Node>|undefined)}
   */
  this.deleted = exports.notifications.nodesDeleted && [];
}

/**
 * @return {(string|undefined)} The current namespace to create Elements in.
 */
Context.prototype.getCurrentNamespace = function () {
  return this.nsStack_[this.nsStack_.length - 1];
};

/**
 * @param {string=} namespace The namespace to enter.
 */
Context.prototype.enterNamespace = function (namespace) {
  this.nsStack_.push(namespace);
};

/**
 * Exits the current namespace
 */
Context.prototype.exitNamespace = function () {
  this.nsStack_.pop();
};

/**
 * @param {!Node} node
 */
Context.prototype.markCreated = function (node) {
  if (this.created) {
    this.created.push(node);
  }
};

/**
 * @param {!Node} node
 */
Context.prototype.markDeleted = function (node) {
  if (this.deleted) {
    this.deleted.push(node);
  }
};

/**
 * Notifies about nodes that were created during the patch opearation.
 */
Context.prototype.notifyChanges = function () {
  if (this.created && this.created.length > 0) {
    exports.notifications.nodesCreated(this.created);
  }

  if (this.deleted && this.deleted.length > 0) {
    exports.notifications.nodesDeleted(this.deleted);
  }
};

/**
 * The current context.
 * @type {?Context}
 */
var context;

/**
 * Enters a new patch context.
 * @param {!Element|!DocumentFragment} node
 */
var enterContext = function (node) {
  context = new Context(node, context);
};

/**
 * Restores the previous patch context.
 */
var restoreContext = function () {
  context = context.prevContext;
};

/**
 * Gets the current patch context.
 * @return {?Context}
 */
var getContext = function () {
  return context;
};

/**
 * Copyright 2015 The Incremental DOM Authors. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS-IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * A cached reference to the hasOwnProperty function.
 */
var hasOwnProperty = Object.prototype.hasOwnProperty;

/**
 * A cached reference to the create function.
 */
var create = Object.create;

/**
 * Used to prevent property collisions between our "map" and its prototype.
 * @param {!Object<string, *>} map The map to check.
 * @param {string} property The property to check.
 * @return {boolean} Whether map has property.
 */
var has = function (map, property) {
  return hasOwnProperty.call(map, property);
};

/**
 * Creates an map object without a prototype.
 * @return {!Object}
 */
var createMap = function () {
  return create(null);
};

/**
 * Keeps track of information needed to perform diffs for a given DOM node.
 * @param {!string} nodeName
 * @param {?string=} key
 * @constructor
 */
function NodeData(nodeName, key) {
  /**
   * The attributes and their values.
   * @const
   */
  this.attrs = createMap();

  /**
   * An array of attribute name/value pairs, used for quickly diffing the
   * incomming attributes to see if the DOM node's attributes need to be
   * updated.
   * @const {Array<*>}
   */
  this.attrsArr = [];

  /**
   * The incoming attributes for this Node, before they are updated.
   * @const {!Object<string, *>}
   */
  this.newAttrs = createMap();

  /**
   * The key used to identify this node, used to preserve DOM nodes when they
   * move within their parent.
   * @const
   */
  this.key = key;

  /**
   * Keeps track of children within this node by their key.
   * {?Object<string, !Element>}
   */
  this.keyMap = null;

  /**
   * Whether or not the keyMap is currently valid.
   * {boolean}
   */
  this.keyMapValid = true;

  /**
   * The last child to have been visited within the current pass.
   * @type {?Node}
   */
  this.lastVisitedChild = null;

  /**
   * The node name for this node.
   * @const {string}
   */
  this.nodeName = nodeName;

  /**
   * @type {?string}
   */
  this.text = null;
}

/**
 * Initializes a NodeData object for a Node.
 *
 * @param {Node} node The node to initialize data for.
 * @param {string} nodeName The node name of node.
 * @param {?string=} key The key that identifies the node.
 * @return {!NodeData} The newly initialized data object
 */
var initData = function (node, nodeName, key) {
  var data = new NodeData(nodeName, key);
  node['__incrementalDOMData'] = data;
  return data;
};

/**
 * Retrieves the NodeData object for a Node, creating it if necessary.
 *
 * @param {Node} node The node to retrieve the data for.
 * @return {!NodeData} The NodeData for this Node.
 */
var getData = function (node) {
  var data = node['__incrementalDOMData'];

  if (!data) {
    var nodeName = node.nodeName.toLowerCase();
    var key = null;

    if (node instanceof Element) {
      key = node.getAttribute('key');
    }

    data = initData(node, nodeName, key);
  }

  return data;
};

/**
 * Copyright 2015 The Incremental DOM Authors. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS-IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

exports.symbols = {
  default: '__default',

  placeholder: '__placeholder'
};

/**
 * Applies an attribute or property to a given Element. If the value is null
 * or undefined, it is removed from the Element. Otherwise, the value is set
 * as an attribute.
 * @param {!Element} el
 * @param {string} name The attribute's name.
 * @param {?(boolean|number|string)=} value The attribute's value.
 */
exports.applyAttr = function (el, name, value) {
  if (value == null) {
    el.removeAttribute(name);
  } else {
    el.setAttribute(name, value);
  }
};

/**
 * Applies a property to a given Element.
 * @param {!Element} el
 * @param {string} name The property's name.
 * @param {*} value The property's value.
 */
exports.applyProp = function (el, name, value) {
  el[name] = value;
};

/**
 * Applies a style to an Element. No vendor prefix expansion is done for
 * property names/values.
 * @param {!Element} el
 * @param {string} name The attribute's name.
 * @param {string|Object<string,string>} style The style to set. Either a
 *     string of css or an object containing property-value pairs.
 */
var applyStyle = function (el, name, style) {
  if (typeof style === 'string') {
    el.style.cssText = style;
  } else {
    el.style.cssText = '';
    var elStyle = el.style;

    for (var prop in style) {
      if (has(style, prop)) {
        elStyle[prop] = style[prop];
      }
    }
  }
};

/**
 * Updates a single attribute on an Element.
 * @param {!Element} el
 * @param {string} name The attribute's name.
 * @param {*} value The attribute's value. If the value is an object or
 *     function it is set on the Element, otherwise, it is set as an HTML
 *     attribute.
 */
var applyAttributeTyped = function (el, name, value) {
  var type = typeof value;

  if (type === 'object' || type === 'function') {
    exports.applyProp(el, name, value);
  } else {
    exports.applyAttr(el, name, /** @type {?(boolean|number|string)} */value);
  }
};

/**
 * Calls the appropriate attribute mutator for this attribute.
 * @param {!Element} el
 * @param {string} name The attribute's name.
 * @param {*} value The attribute's value.
 */
var updateAttribute = function (el, name, value) {
  var data = getData(el);
  var attrs = data.attrs;

  if (attrs[name] === value) {
    return;
  }

  var mutator = exports.attributes[name] || exports.attributes[exports.symbols.default];
  mutator(el, name, value);

  attrs[name] = value;
};

/**
 * A publicly mutable object to provide custom mutators for attributes.
 * @const {!Object<string, function(!Element, string, *)>}
 */
exports.attributes = createMap();

// Special generic mutator that's called for any attribute that does not
// have a specific mutator.
exports.attributes[exports.symbols.default] = applyAttributeTyped;

exports.attributes[exports.symbols.placeholder] = function () {};

exports.attributes['style'] = applyStyle;

var SVG_NS = 'http://www.w3.org/2000/svg';

/**
 * Enters a tag, checking to see if it is a namespace boundary, and if so,
 * updates the current namespace.
 * @param {string} tag The tag to enter.
 */
var enterTag = function (tag) {
  if (tag === 'svg') {
    getContext().enterNamespace(SVG_NS);
  } else if (tag === 'foreignObject') {
    getContext().enterNamespace(undefined);
  }
};

/**
 * Exits a tag, checking to see if it is a namespace boundary, and if so,
 * updates the current namespace.
 * @param {string} tag The tag to enter.
 */
var exitTag = function (tag) {
  if (tag === 'svg' || tag === 'foreignObject') {
    getContext().exitNamespace();
  }
};

/**
 * Gets the namespace to create an element (of a given tag) in.
 * @param {string} tag The tag to get the namespace for.
 * @return {(string|undefined)} The namespace to create the tag in.
 */
var getNamespaceForTag = function (tag) {
  if (tag === 'svg') {
    return SVG_NS;
  }

  return getContext().getCurrentNamespace();
};

/**
 * Creates an Element.
 * @param {Document} doc The document with which to create the Element.
 * @param {string} tag The tag for the Element.
 * @param {?string=} key A key to identify the Element.
 * @param {?Array<*>=} statics An array of attribute name/value pairs of
 *     the static attributes for the Element.
 * @return {!Element}
 */
var createElement = function (doc, tag, key, statics) {
  var namespace = getNamespaceForTag(tag);
  var el;

  if (namespace) {
    el = doc.createElementNS(namespace, tag);
  } else {
    el = doc.createElement(tag);
  }

  initData(el, tag, key);

  if (statics) {
    for (var i = 0; i < statics.length; i += 2) {
      updateAttribute(el, /** @type {!string}*/statics[i], statics[i + 1]);
    }
  }

  return el;
};

/**
 * Creates a Node, either a Text or an Element depending on the node name
 * provided.
 * @param {Document} doc The document with which to create the Node.
 * @param {string} nodeName The tag if creating an element or #text to create
 *     a Text.
 * @param {?string=} key A key to identify the Element.
 * @param {?Array<*>=} statics The static data to initialize the Node
 *     with. For an Element, an array of attribute name/value pairs of
 *     the static attributes for the Element.
 * @return {!Node}
 */
var createNode = function (doc, nodeName, key, statics) {
  if (nodeName === '#text') {
    return doc.createTextNode('');
  }

  return createElement(doc, nodeName, key, statics);
};

/**
 * Creates a mapping that can be used to look up children using a key.
 * @param {!Node} el
 * @return {!Object<string, !Element>} A mapping of keys to the children of the
 *     Element.
 */
var createKeyMap = function (el) {
  var map = createMap();
  var children = el.children;
  var count = children.length;

  for (var i = 0; i < count; i += 1) {
    var child = children[i];
    var key = getData(child).key;

    if (key) {
      map[key] = child;
    }
  }

  return map;
};

/**
 * Retrieves the mapping of key to child node for a given Element, creating it
 * if necessary.
 * @param {!Node} el
 * @return {!Object<string, !Node>} A mapping of keys to child Elements
 */
var getKeyMap = function (el) {
  var data = getData(el);

  if (!data.keyMap) {
    data.keyMap = createKeyMap(el);
  }

  return data.keyMap;
};

/**
 * Retrieves a child from the parent with the given key.
 * @param {!Node} parent
 * @param {?string=} key
 * @return {?Element} The child corresponding to the key.
 */
var getChild = function (parent, key) {
  return (/** @type {?Element} */key && getKeyMap(parent)[key]
  );
};

/**
 * Registers an element as being a child. The parent will keep track of the
 * child using the key. The child can be retrieved using the same key using
 * getKeyMap. The provided key should be unique within the parent Element.
 * @param {!Node} parent The parent of child.
 * @param {string} key A key to identify the child with.
 * @param {!Node} child The child to register.
 */
var registerChild = function (parent, key, child) {
  getKeyMap(parent)[key] = child;
};

if (process.env.NODE_ENV !== 'production') {
  /**
  * Makes sure that keyed Element matches the tag name provided.
  * @param {!Element} node The node that is being matched.
  * @param {string=} tag The tag name of the Element.
  * @param {?string=} key The key of the Element.
  */
  var assertKeyedTagMatches = function (node, tag, key) {
    var nodeName = getData(node).nodeName;
    if (nodeName !== tag) {
      throw new Error('Was expecting node with key "' + key + '" to be a ' + tag + ', not a ' + nodeName + '.');
    }
  };
}

/**
 * Checks whether or not a given node matches the specified nodeName and key.
 *
 * @param {!Node} node An HTML node, typically an HTMLElement or Text.
 * @param {?string} nodeName The nodeName for this node.
 * @param {?string=} key An optional key that identifies a node.
 * @return {boolean} True if the node matches, false otherwise.
 */
var matches = function (node, nodeName, key) {
  var data = getData(node);

  // Key check is done using double equals as we want to treat a null key the
  // same as undefined. This should be okay as the only values allowed are
  // strings, null and undefined so the == semantics are not too weird.
  return key == data.key && nodeName === data.nodeName;
};

/**
 * Aligns the virtual Element definition with the actual DOM, moving the
 * corresponding DOM node to the correct location or creating it if necessary.
 * @param {string} nodeName For an Element, this should be a valid tag string.
 *     For a Text, this should be #text.
 * @param {?string=} key The key used to identify this element.
 * @param {?Array<*>=} statics For an Element, this should be an array of
 *     name-value pairs.
 * @return {!Node} The matching node.
 */
var alignWithDOM = function (nodeName, key, statics) {
  var context = getContext();
  var walker = context.walker;
  var currentNode = walker.currentNode;
  var parent = walker.getCurrentParent();
  var matchingNode;

  // Check to see if we have a node to reuse
  if (currentNode && matches(currentNode, nodeName, key)) {
    matchingNode = currentNode;
  } else {
    var existingNode = getChild(parent, key);

    // Check to see if the node has moved within the parent or if a new one
    // should be created
    if (existingNode) {
      if (process.env.NODE_ENV !== 'production') {
        assertKeyedTagMatches(existingNode, nodeName, key);
      }

      matchingNode = existingNode;
    } else {
      matchingNode = createNode(context.doc, nodeName, key, statics);

      if (key) {
        registerChild(parent, key, matchingNode);
      }

      context.markCreated(matchingNode);
    }

    // If the node has a key, remove it from the DOM to prevent a large number
    // of re-orders in the case that it moved far or was completely removed.
    // Since we hold on to a reference through the keyMap, we can always add it
    // back.
    if (currentNode && getData(currentNode).key) {
      parent.replaceChild(matchingNode, currentNode);
      getData(parent).keyMapValid = false;
    } else {
      parent.insertBefore(matchingNode, currentNode);
    }

    walker.currentNode = matchingNode;
  }

  return matchingNode;
};

/**
 * Clears out any unvisited Nodes, as the corresponding virtual element
 * functions were never called for them.
 * @param {Node} node
 */
var clearUnvisitedDOM = function (node) {
  var context = getContext();
  var walker = context.walker;
  var data = getData(node);
  var keyMap = data.keyMap;
  var keyMapValid = data.keyMapValid;
  var lastVisitedChild = data.lastVisitedChild;
  var child = node.lastChild;
  var key;

  data.lastVisitedChild = null;

  if (child === lastVisitedChild && keyMapValid) {
    return;
  }

  if (data.attrs[exports.symbols.placeholder] && walker.currentNode !== walker.root) {
    return;
  }

  while (child !== lastVisitedChild) {
    node.removeChild(child);
    context.markDeleted( /** @type {!Node}*/child);

    key = getData(child).key;
    if (key) {
      delete keyMap[key];
    }
    child = node.lastChild;
  }

  // Clean the keyMap, removing any unusued keys.
  for (key in keyMap) {
    child = keyMap[key];
    if (!child.parentNode) {
      context.markDeleted(child);
      delete keyMap[key];
    }
  }

  data.keyMapValid = true;
};

/**
 * Enters an Element, setting the current namespace for nested elements.
 * @param {Node} node
 */
var enterNode = function (node) {
  var data = getData(node);
  enterTag(data.nodeName);
};

/**
 * Exits an Element, unwinding the current namespace to the previous value.
 * @param {Node} node
 */
var exitNode = function (node) {
  var data = getData(node);
  exitTag(data.nodeName);
};

/**
 * Marks node's parent as having visited node.
 * @param {Node} node
 */
var markVisited = function (node) {
  var context = getContext();
  var walker = context.walker;
  var parent = walker.getCurrentParent();
  var data = getData(parent);
  data.lastVisitedChild = node;
};

/**
 * Changes to the first child of the current node.
 */
var firstChild = function () {
  var context = getContext();
  var walker = context.walker;
  enterNode(walker.currentNode);
  walker.firstChild();
};

/**
 * Changes to the next sibling of the current node.
 */
var nextSibling = function () {
  var context = getContext();
  var walker = context.walker;
  markVisited(walker.currentNode);
  walker.nextSibling();
};

/**
 * Changes to the parent of the current node, removing any unvisited children.
 */
var parentNode = function () {
  var context = getContext();
  var walker = context.walker;
  walker.parentNode();
  exitNode(walker.currentNode);
};

if (process.env.NODE_ENV !== 'production') {
  var assertNoUnclosedTags = function (root) {
    var openElement = getContext().walker.getCurrentParent();
    if (!openElement) {
      return;
    }

    var openTags = [];
    while (openElement && openElement !== root) {
      openTags.push(openElement.nodeName.toLowerCase());
      openElement = openElement.parentNode;
    }

    throw new Error('One or more tags were not closed:\n' + openTags.join('\n'));
  };
}

/**
 * Patches the document starting at el with the provided function. This function
 * may be called during an existing patch operation.
 * @param {!Element|!DocumentFragment} node The Element or Document
 *     to patch.
 * @param {!function(T)} fn A function containing elementOpen/elementClose/etc.
 *     calls that describe the DOM.
 * @param {T=} data An argument passed to fn to represent DOM state.
 * @template T
 */
exports.patch = function (node, fn, data) {
  enterContext(node);

  firstChild();
  fn(data);
  parentNode();
  clearUnvisitedDOM(node);

  if (process.env.NODE_ENV !== 'production') {
    assertNoUnclosedTags(node);
  }

  getContext().notifyChanges();
  restoreContext();
};

/**
 * The offset in the virtual element declaration where the attributes are
 * specified.
 * @const
 */
var ATTRIBUTES_OFFSET = 3;

/**
 * Builds an array of arguments for use with elementOpenStart, attr and
 * elementOpenEnd.
 * @const {Array<*>}
 */
var argsBuilder = [];

if (process.env.NODE_ENV !== 'production') {
  /**
   * Keeps track whether or not we are in an attributes declaration (after
   * elementOpenStart, but before elementOpenEnd).
   * @type {boolean}
   */
  var inAttributes = false;

  /** Makes sure that the caller is not where attributes are expected. */
  var assertNotInAttributes = function () {
    if (inAttributes) {
      throw new Error('Was not expecting a call to attr or elementOpenEnd, ' + 'they must follow a call to elementOpenStart.');
    }
  };

  /** Makes sure that the caller is where attributes are expected. */
  var assertInAttributes = function () {
    if (!inAttributes) {
      throw new Error('Was expecting a call to attr or elementOpenEnd. ' + 'elementOpenStart must be followed by zero or more calls to attr, ' + 'then one call to elementOpenEnd.');
    }
  };

  /**
   * Makes sure that placeholders have a key specified. Otherwise, conditional
   * placeholders and conditional elements next to placeholders will cause
   * placeholder elements to be re-used as non-placeholders and vice versa.
   * @param {string} key
   */
  var assertPlaceholderKeySpecified = function (key) {
    if (!key) {
      throw new Error('Placeholder elements must have a key specified.');
    }
  };

  /**
   * Makes sure that tags are correctly nested.
   * @param {string} tag
   */
  var assertCloseMatchesOpenTag = function (tag) {
    var context = getContext();
    var walker = context.walker;
    var closingNode = walker.getCurrentParent();
    var data = getData(closingNode);

    if (tag !== data.nodeName) {
      throw new Error('Received a call to close ' + tag + ' but ' + data.nodeName + ' was open.');
    }
  };

  /** Updates the state to being in an attribute declaration. */
  var setInAttributes = function () {
    inAttributes = true;
  };

  /** Updates the state to not being in an attribute declaration. */
  var setNotInAttributes = function () {
    inAttributes = false;
  };
}

/**
 * @param {string} tag The element's tag.
 * @param {?string=} key The key used to identify this element. This can be an
 *     empty string, but performance may be better if a unique value is used
 *     when iterating over an array of items.
 * @param {?Array<*>=} statics An array of attribute name/value pairs of the
 *     static attributes for the Element. These will only be set once when the
 *     Element is created.
 * @param {...*} var_args Attribute name/value pairs of the dynamic attributes
 *     for the Element.
 * @return {!Element} The corresponding Element.
 */
exports.elementOpen = function (tag, key, statics, var_args) {
  if (process.env.NODE_ENV !== 'production') {
    assertNotInAttributes();
  }

  var node = /** @type {!Element}*/alignWithDOM(tag, key, statics);
  var data = getData(node);

  /*
   * Checks to see if one or more attributes have changed for a given Element.
   * When no attributes have changed, this is much faster than checking each
   * individual argument. When attributes have changed, the overhead of this is
   * minimal.
   */
  var attrsArr = data.attrsArr;
  var attrsChanged = false;
  var i = ATTRIBUTES_OFFSET;
  var j = 0;

  for (; i < arguments.length; i += 1, j += 1) {
    if (attrsArr[j] !== arguments[i]) {
      attrsChanged = true;
      break;
    }
  }

  for (; i < arguments.length; i += 1, j += 1) {
    attrsArr[j] = arguments[i];
  }

  if (j < attrsArr.length) {
    attrsChanged = true;
    attrsArr.length = j;
  }

  /*
   * Actually perform the attribute update.
   */
  if (attrsChanged) {
    var attr,
        newAttrs = data.newAttrs;

    for (attr in newAttrs) {
      newAttrs[attr] = undefined;
    }

    for (i = ATTRIBUTES_OFFSET; i < arguments.length; i += 2) {
      newAttrs[arguments[i]] = arguments[i + 1];
    }

    for (attr in newAttrs) {
      updateAttribute(node, attr, newAttrs[attr]);
    }
  }

  firstChild();
  return node;
};

/**
 * Declares a virtual Element at the current location in the document. This
 * corresponds to an opening tag and a elementClose tag is required. This is
 * like elementOpen, but the attributes are defined using the attr function
 * rather than being passed as arguments. Must be folllowed by 0 or more calls
 * to attr, then a call to elementOpenEnd.
 * @param {string} tag The element's tag.
 * @param {?string=} key The key used to identify this element. This can be an
 *     empty string, but performance may be better if a unique value is used
 *     when iterating over an array of items.
 * @param {?Array<*>=} statics An array of attribute name/value pairs of the
 *     static attributes for the Element. These will only be set once when the
 *     Element is created.
 */
exports.elementOpenStart = function (tag, key, statics) {
  if (process.env.NODE_ENV !== 'production') {
    assertNotInAttributes();
    setInAttributes();
  }

  argsBuilder[0] = tag;
  argsBuilder[1] = key;
  argsBuilder[2] = statics;
};

/***
 * Defines a virtual attribute at this point of the DOM. This is only valid
 * when called between elementOpenStart and elementOpenEnd.
 *
 * @param {string} name
 * @param {*} value
 */
exports.attr = function (name, value) {
  if (process.env.NODE_ENV !== 'production') {
    assertInAttributes();
  }

  argsBuilder.push(name, value);
};

/**
 * Closes an open tag started with elementOpenStart.
 * @return {!Element} The corresponding Element.
 */
exports.elementOpenEnd = function () {
  if (process.env.NODE_ENV !== 'production') {
    assertInAttributes();
    setNotInAttributes();
  }

  var node = exports.elementOpen.apply(null, argsBuilder);
  argsBuilder.length = 0;
  return node;
};

/**
 * Closes an open virtual Element.
 *
 * @param {string} tag The element's tag.
 * @return {!Element} The corresponding Element.
 */
exports.elementClose = function (tag) {
  if (process.env.NODE_ENV !== 'production') {
    assertNotInAttributes();
    assertCloseMatchesOpenTag(tag);
  }

  parentNode();

  var node = /** @type {!Element} */getContext().walker.currentNode;

  clearUnvisitedDOM(node);

  nextSibling();
  return node;
};

/**
 * Declares a virtual Element at the current location in the document that has
 * no children.
 * @param {string} tag The element's tag.
 * @param {?string=} key The key used to identify this element. This can be an
 *     empty string, but performance may be better if a unique value is used
 *     when iterating over an array of items.
 * @param {?Array<*>=} statics An array of attribute name/value pairs of the
 *     static attributes for the Element. These will only be set once when the
 *     Element is created.
 * @param {...*} var_args Attribute name/value pairs of the dynamic attributes
 *     for the Element.
 * @return {!Element} The corresponding Element.
 */
exports.elementVoid = function (tag, key, statics, var_args) {
  var node = exports.elementOpen.apply(null, arguments);
  exports.elementClose.apply(null, arguments);
  return node;
};

/**
 * Declares a virtual Element at the current location in the document that is a
 * placeholder element. Children of this Element can be manually managed and
 * will not be cleared by the library.
 *
 * A key must be specified to make sure that this node is correctly preserved
 * across all conditionals.
 *
 * @param {string} tag The element's tag.
 * @param {string} key The key used to identify this element.
 * @param {?Array<*>=} statics An array of attribute name/value pairs of the
 *     static attributes for the Element. These will only be set once when the
 *     Element is created.
 * @param {...*} var_args Attribute name/value pairs of the dynamic attributes
 *     for the Element.
 * @return {!Element} The corresponding Element.
 */
exports.elementPlaceholder = function (tag, key, statics, var_args) {
  if (process.env.NODE_ENV !== 'production') {
    assertPlaceholderKeySpecified(key);
  }

  var node = exports.elementOpen.apply(null, arguments);
  updateAttribute(node, exports.symbols.placeholder, true);
  exports.elementClose.apply(null, arguments);
  return node;
};

/**
 * Declares a virtual Text at this point in the document.
 *
 * @param {string|number|boolean} value The value of the Text.
 * @param {...(function((string|number|boolean)):string)} var_args
 *     Functions to format the value which are called only when the value has
 *     changed.
 * @return {!Text} The corresponding text node.
 */
exports.text = function (value, var_args) {
  if (process.env.NODE_ENV !== 'production') {
    assertNotInAttributes();
  }

  var node = /** @type {!Text}*/alignWithDOM('#text', null);
  var data = getData(node);

  if (data.text !== value) {
    data.text = /** @type {string} */value;

    var formatted = value;
    for (var i = 1; i < arguments.length; i += 1) {
      formatted = arguments[i](formatted);
    }

    node.data = formatted;
  }

  nextSibling();
  return node;
};

}).call(this,require('_process'))
},{"_process":"/usr/local/lib/node_modules/pulp/node_modules/browserify/node_modules/process/browser.js"}],"/usr/local/lib/node_modules/pulp/node_modules/browserify/node_modules/process/browser.js":[function(require,module,exports){
// shim for using process in browser

var process = module.exports = {};
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = setTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    clearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        setTimeout(drainQueue, 0);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };

},{}]},{},["/Users/simon/purescript-incremental/example/output/browserify.js"]);
